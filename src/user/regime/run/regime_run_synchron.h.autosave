#ifndef REGIMERUNSYNCHRON_H
#define REGIMERUNSYNCHRON_H

#include "regime_run.h"

/*!
 * \brief Класс режима пуска "С синхронизацией"
 */
class RegimeRunSynchron : public RegimeRun
{
public:
  RegimeRunSynchron();
  virtual ~RegimeRunSynchron();
  
private:  
  void getOtherSetpoint();
  void setOtherSetpoint();
  void processingStateIdle();
  void processingStateRunning();
  void processingStateWork();
  void automatRegime();
  void saveBeforeRegimeRun();
  int16_t setFreqSynchron();
  int16_t returnFreq();
  
  float delay_;                             // Задержка между попытками записать настройки режима в ЧРП
  float repeat_;                            // Количество попыток записать настройки режима в ЧРП
  float freq_;                              // Текущая частота
  float time_;                              // Время работы 
  float setpointFreq_;                      // Уставка частоты
  
  
};

#endif // REGIMERUNSYNCHRON_H

/*
 * classTms.h
 *
 *  Created on: 23.06.2014
 *      Author: trofimenko
 */

#ifndef TMS_H_
#define TMS_H_

#include "Device.h"

// КЛАСС ТМС
// Наследник класса Device использующий его структуру и методы хранения банка параметров
// имеющий свою карту параметров класс не имеющий объектов, а использующийся как базовый для
// классов конкретных ТМС
class Tms: public Device
{
	public:
    Tms();
    virtual ~Tms();

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ДАВЛЕНИЯ
		// Задание единиц измерения используемых в системе
		int setUnitPressure();

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ДАВЛЕНИЯ
		// Задание единиц измерения указанных в параметре
		int setUnitPressure(float Unit);

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ТЕМПЕРАТУРЫ
		// Задание единиц измерения используемых в системе
		int setUnitTemperature();

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ТЕМПЕРАТУРЫ
		// Задание единиц измерения указанных в параметре
		int setUnitTemperature(float Unit);

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ВИБРОУСКОРЕНИЯ
		// Задание единиц измерения используемых в системе
		int setUnitAcceleration();

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ВИБРОУСКОРЕНИЯ
		// Задание единиц измерения указанных в параметре
		int setUnitAcceleration(float Unit);

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ВИБРОСКОРОСТИ
		// Задание единиц измерения используемых в системе
		int setUnitSpeed();

		// МЕТОД ЗАДАНИЯ ЕДИНИЦ ИЗМЕРЕНИЯ ВИБРОСКОРОСТИ
		// Задание единиц измерения указанных в параметре
		int setUnitSpeed(float Unit);

		// МЕТОД ВКЛЮЧЕНИЯ ЧТЕНИЯ СТАТИЧЕСКИХ ПАРАМЕТРОВ
		// Задание единиц измерения используемых в системе
		int setEnableReadingStaticParam();

		// МЕТОД ВЫКЛЮЧЕНИЯ ЧТЕНИЯ СТАТИЧЕСКИХ ПАРАМЕТРОВ
		// Задание единиц измерения используемых в системе
		int setDisableReadingStaticParam();

		// МЕТОД ВКЛЮЧЕНИЯ РЕЖИМА КВД
		// Задание единиц измерения указанных в параметре
		int setEnablePidLoop();

		// МЕТОД ВЫКЛЮЧЕНИЯ РЕЖИМА КВД
		// Задание единиц измерения указанных в параметре
		int setDisablePidLoop();

};

#endif /* TMS_H_ */

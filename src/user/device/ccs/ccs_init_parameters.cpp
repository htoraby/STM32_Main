#include "ccs.h"

void Ccs::initParameters()
{
  // Пустой регистр
  parameters_[CCS_BEGIN - CCS_BEGIN].id                                          = CCS_BEGIN;
  parameters_[CCS_BEGIN - CCS_BEGIN].access                                      = 0;
  parameters_[CCS_BEGIN - CCS_BEGIN].operation                                   = 0;
  parameters_[CCS_BEGIN - CCS_BEGIN].physic                                      = 0;
  parameters_[CCS_BEGIN - CCS_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[CCS_BEGIN - CCS_BEGIN].value.float_t                               = 0;
  parameters_[CCS_BEGIN - CCS_BEGIN].min                                         = 0;
  parameters_[CCS_BEGIN - CCS_BEGIN].max                                         = 0;
  parameters_[CCS_BEGIN - CCS_BEGIN].def                                         = 0;
  // Текущие обороты двигателя
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].id                                = CCS_MOTOR_SPEED_NOW;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].operation                         = OPERATION_READ;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].physic                            = PHYSIC_RPM;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].min                               = 0;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].max                               = 0;
  parameters_[CCS_MOTOR_SPEED_NOW - CCS_BEGIN].def                               = 0;
  // Ток двигателя фаза 1
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].id                          = CCS_MOTOR_CURRENT_PHASE_1;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].operation                   = OPERATION_READ;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].physic                      = PHYSIC_CURRENT;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].max                         = 150.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_1 - CCS_BEGIN].def                         = 0.0;
  // Ток двигателя фаза 2
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].id                          = CCS_MOTOR_CURRENT_PHASE_2;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].operation                   = OPERATION_READ;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].physic                      = PHYSIC_CURRENT;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].max                         = 150.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_2 - CCS_BEGIN].def                         = 0.0;
  // Ток двигателя фаза 3
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].id                          = CCS_MOTOR_CURRENT_PHASE_3;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].operation                   = OPERATION_READ;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].physic                      = PHYSIC_CURRENT;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].max                         = 150.0;
  parameters_[CCS_MOTOR_CURRENT_PHASE_3 - CCS_BEGIN].def                         = 0.0;
  // Дисбаланс токов двигателя
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].id                        = CCS_MOTOR_CURRENT_IMBALANCE;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].operation                 = OPERATION_READ;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].physic                    = PHYSIC_PERCENT;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].value.float_t             = 0.0;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].min                       = 0.0;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].max                       = 0;
  parameters_[CCS_MOTOR_CURRENT_IMBALANCE - CCS_BEGIN].def                       = 0.0;
  // Ток двигателя средний
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].id                          = CCS_MOTOR_CURRENT_AVARAGE;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].operation                   = OPERATION_READ;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].physic                      = PHYSIC_CURRENT;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].max                         = 150.0;
  parameters_[CCS_MOTOR_CURRENT_AVARAGE - CCS_BEGIN].def                         = 0.0;
  // Текущая загрузка двигателя
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].id                                 = CCS_MOTOR_LOAD_NOW;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].operation                          = OPERATION_READ;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].physic                             = PHYSIC_PERCENT;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].min                                = 0;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].max                                = 0;
  parameters_[CCS_MOTOR_LOAD_NOW - CCS_BEGIN].def                                = 0;
  // Текущее напряжение двигателя
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].id                              = CCS_MOTOR_VOLTAGE_NOW;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].operation                       = OPERATION_READ;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].physic                          = PHYSIC_VOLTAGE;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].min                             = 0;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].max                             = 0;
  parameters_[CCS_MOTOR_VOLTAGE_NOW - CCS_BEGIN].def                             = 0;
  // Текущий Косинус Фи
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].id                              = CCS_MOTOR_COS_PHI_NOW;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].operation                       = OPERATION_READ;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].min                             = 0;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].max                             = 0;
  parameters_[CCS_MOTOR_COS_PHI_NOW - CCS_BEGIN].def                             = 0;
  // Текущее турбинное вращение
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].id                             = CCS_TURBO_ROTATION_NOW;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].operation                      = OPERATION_READ;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].physic                         = PHYSIC_FREQUENCY;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].min                            = 0;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].max                            = 0;
  parameters_[CCS_TURBO_ROTATION_NOW - CCS_BEGIN].def                            = 0;
  // Сопротивление изоляции в системе
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].id                           = CCS_RESISTANCE_ISOLATION;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].operation                    = OPERATION_READ;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].physic                       = PHYSIC_RESISTANCE;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].value.float_t                = 9999.0;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].min                          = 20.0;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].max                          = 9999.0;
  parameters_[CCS_RESISTANCE_ISOLATION - CCS_BEGIN].def                          = 9999.0;
  // Порядок чередования фаз
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].id                                 = CCS_PHASE_ROTATION;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].operation                          = OPERATION_READ;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PHASE_ROTATION - CCS_BEGIN].def                                = 0;
  // 
  parameters_[CCS_CONDITION - CCS_BEGIN].id                                      = CCS_CONDITION;
  parameters_[CCS_CONDITION - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_CONDITION - CCS_BEGIN].operation                               = OPERATION_READ;
  parameters_[CCS_CONDITION - CCS_BEGIN].physic                                  = PHYSIC_NUMERIC;
  parameters_[CCS_CONDITION - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_CONDITION - CCS_BEGIN].value.float_t                           = 0;
  parameters_[CCS_CONDITION - CCS_BEGIN].min                                     = 0;
  parameters_[CCS_CONDITION - CCS_BEGIN].max                                     = 0;
  parameters_[CCS_CONDITION - CCS_BEGIN].def                                     = 0;
  // Режим пуска двигателя
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].id                                   = CCS_RUNNING_TYPE;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].operation                            = OPERATION_READ;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].validity                             = VALIDITY_OK;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].value.float_t                        = 0;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].min                                  = 0;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].max                                  = 0;
  parameters_[CCS_RUNNING_TYPE - CCS_BEGIN].def                                  = 0;
  // Режим работы
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].id                                   = CCS_WORKING_MODE;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].validity                             = VALIDITY_OK;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].value.float_t                        = 0;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].min                                  = 0;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].max                                  = 0;
  parameters_[CCS_WORKING_MODE - CCS_BEGIN].def                                  = 0;
  // Дисбаланс входного напряжения
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].id                           = CCS_VOLTAGE_IMBALANCE_IN;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].operation                    = OPERATION_READ;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].physic                       = PHYSIC_PERCENT;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].min                          = 0;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].max                          = 0;
  parameters_[CCS_VOLTAGE_IMBALANCE_IN - CCS_BEGIN].def                          = 0;
  // Дисбаланс входного тока
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].id                           = CCS_CURRENT_IMBALANCE_IN;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].operation                    = OPERATION_READ;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].physic                       = PHYSIC_PERCENT;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].min                          = 0;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].max                          = 0;
  parameters_[CCS_CURRENT_IMBALANCE_IN - CCS_BEGIN].def                          = 0;
  // 
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].id                                     = CCS_AI_1_VALUE;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_AI_1_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].id                                     = CCS_AI_2_VALUE;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_AI_2_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].id                                     = CCS_AI_3_VALUE;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_AI_3_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].id                                     = CCS_AI_4_VALUE;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_AI_4_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].id                                     = CCS_DOOR_VALUE;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_DOOR_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].id                         = CCS_MONOMETR_CONTACT_VALUE;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].operation                  = OPERATION_READ;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].physic                     = PHYSIC_NUMERIC;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].min                        = 0;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].max                        = 0;
  parameters_[CCS_MONOMETR_CONTACT_VALUE - CCS_BEGIN].def                        = 0;
  // 
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].id                                     = CCS_DI_1_VALUE;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_DI_1_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].id                                     = CCS_DI_2_VALUE;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_DI_2_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].id                                     = CCS_DI_3_VALUE;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_DI_3_VALUE - CCS_BEGIN].def                                    = 0;
  // 
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].id                                     = CCS_DI_4_VALUE;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].operation                              = OPERATION_READ;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_DI_4_VALUE - CCS_BEGIN].def                                    = 0;
  // Период записи
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].id                              = CCS_LOG_PERIOD_NORMAL;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].physic                          = PHYSIC_TIME;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].min                             = 0;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].max                             = 0;
  parameters_[CCS_LOG_PERIOD_NORMAL - CCS_BEGIN].def                             = 0;
  // Период экстренной записи
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].id                                = CCS_LOG_PERIOD_FAST;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].physic                            = PHYSIC_TIME;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].min                               = 0;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].max                               = 0;
  parameters_[CCS_LOG_PERIOD_FAST - CCS_BEGIN].def                               = 0;
  // Период записи ТМС
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].id                                 = CCS_LOG_PERIOD_DHS;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].physic                             = PHYSIC_TIME;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].min                                = 0;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].max                                = 0;
  parameters_[CCS_LOG_PERIOD_DHS - CCS_BEGIN].def                                = 0;
  // Ток холостого хода
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].id                               = CCS_MOTOR_CURRENT_HH;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].operation                        = OPERATION_READ;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].physic                           = PHYSIC_CURRENT;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].min                              = 0;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].max                              = 0;
  parameters_[CCS_MOTOR_CURRENT_HH - CCS_BEGIN].def                              = 0;
  // Мощность ТМПН
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].id                            = CCS_TRANS_NOMINAL_POWER;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].physic                        = PHYSIC_FULL_POWER;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_TRANS_NOMINAL_POWER - CCS_BEGIN].def                           = 0;
  // Номинальный ток ТМПН
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].id                          = CCS_TRANS_NOMINAL_CURRENT;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].physic                      = PHYSIC_CURRENT;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].min                         = 0;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].max                         = 0;
  parameters_[CCS_TRANS_NOMINAL_CURRENT - CCS_BEGIN].def                         = 0;
  // Номинальное напряжение ТМПН
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].id                          = CCS_TRANS_NOMINAL_VOLTAGE;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].min                         = 0;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].max                         = 0;
  parameters_[CCS_TRANS_NOMINAL_VOLTAGE - CCS_BEGIN].def                         = 0;
  // Длина кабеля
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].id                             = CCS_TRANS_CABLE_LENGHT;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].physic                         = PHYSIC_LENGHT;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].min                            = 0;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].max                            = 0;
  parameters_[CCS_TRANS_CABLE_LENGHT - CCS_BEGIN].def                            = 0;
  // Сечение кабеля
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].id                              = CCS_TRANS_CABLE_CROSS;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].operation                       = OPERATION_READ;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].physic                          = PHYSIC_SPACE;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].min                             = 0;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].max                             = 0;
  parameters_[CCS_TRANS_CABLE_CROSS - CCS_BEGIN].def                             = 0;
  // Необходимое напряжение отпайки
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].id                     = CCS_TRANS_NEED_VOLTAGE_TAP_OFF;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].physic                 = PHYSIC_VOLTAGE;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].min                    = 0;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].max                    = 0;
  parameters_[CCS_TRANS_NEED_VOLTAGE_TAP_OFF - CCS_BEGIN].def                    = 0;
  // Напряжение отпайки
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].id                          = CCS_TRANS_VOLTAGE_TAP_OFF;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].min                         = 0;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].max                         = 0;
  parameters_[CCS_TRANS_VOLTAGE_TAP_OFF - CCS_BEGIN].def                         = 0;
  // Тип ТМС
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].id                                       = CCS_DHS_TYPE;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].validity                                 = VALIDITY_OK;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].value.float_t                            = 0;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].min                                      = 0;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].max                                      = 0;
  parameters_[CCS_DHS_TYPE - CCS_BEGIN].def                                      = 0;
  // Производительность насоса
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].id                                  = CCS_PUMP_CAPACITY;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].physic                              = PHYSIC_FLOW;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_PUMP_CAPACITY - CCS_BEGIN].def                                 = 0;
  // Напор ЭЦН
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].id                                      = CCS_PUMP_HEAD;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].physic                                  = PHYSIC_LENGHT;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].value.float_t                           = 0;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].min                                     = 0;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].max                                     = 0;
  parameters_[CCS_PUMP_HEAD - CCS_BEGIN].def                                     = 0;
  // Глубина спуска
  parameters_[CCS_DEPTH - CCS_BEGIN].id                                          = CCS_DEPTH;
  parameters_[CCS_DEPTH - CCS_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[CCS_DEPTH - CCS_BEGIN].operation                                   = OPERATION_WRITE;
  parameters_[CCS_DEPTH - CCS_BEGIN].physic                                      = PHYSIC_LENGHT;
  parameters_[CCS_DEPTH - CCS_BEGIN].validity                                    = VALIDITY_OK;
  parameters_[CCS_DEPTH - CCS_BEGIN].value.float_t                               = 0;
  parameters_[CCS_DEPTH - CCS_BEGIN].min                                         = 0;
  parameters_[CCS_DEPTH - CCS_BEGIN].max                                         = 0;
  parameters_[CCS_DEPTH - CCS_BEGIN].def                                         = 0;
  // Режим работа защиты
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].id                   = CCS_PROT_SUPPLY_OVERVOLTAGE_MODE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_MODE - CCS_BEGIN].def                  = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].id                = CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].operation         = OPERATION_READ;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].physic            = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PREVENT - CCS_BEGIN].def               = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].id            = CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].physic        = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].def           = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].id             = CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].physic         = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_DELAY - CCS_BEGIN].def            = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].id          = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].physic      = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_DELAY - CCS_BEGIN].def         = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].id          = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].physic      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].def         = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].id          = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].physic      = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_RESET - CCS_BEGIN].def         = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].id          = CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].physic      = PHYSIC_PERCENT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 110.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].min         = 100.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].max         = 125.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].def         = 110.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].id       = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].physic   = PHYSIC_PERCENT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 110.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].min      = 100.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].max      = 125.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].def      = 110.0;
  // Уставка Параметр защиты, для этой защиты работать по ВРП
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].id              = CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_PARAMETER - CCS_BEGIN].def             = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].id           = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].physic       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FLAG - CCS_BEGIN].def          = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].id                  = CCS_PROT_SUPPLY_OVERVOLTAGE_STATE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_STATE - CCS_BEGIN].def                 = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].id                   = CCS_PROT_SUPPLY_OVERVOLTAGE_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].physic               = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_TIME - CCS_BEGIN].def                  = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].id          = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].physic      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_COUNT - CCS_BEGIN].def         = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].id     = CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].physic = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].def    = 0;
  // Защита "Превышение питания сети"
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].id                  = CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_MODE - CCS_BEGIN].def                 = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].id               = CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PREVENT - CCS_BEGIN].def              = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].id           = CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].physic       = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_ACTIV_DELAY - CCS_BEGIN].def          = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].id            = CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].physic        = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_DELAY - CCS_BEGIN].def           = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].id         = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].physic     = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_DELAY - CCS_BEGIN].def        = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].id         = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_LIMIT - CCS_BEGIN].def        = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].id         = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].physic     = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_RESET - CCS_BEGIN].def        = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].id         = CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].physic     = PHYSIC_PERCENT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 85.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].min        = 70.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].max        = 100.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TRIP_SETPOINT - CCS_BEGIN].def        = 85.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].id      = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].physic  = PHYSIC_PERCENT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 85.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].min     = 70.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].max     = 100.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_SETPOINT - CCS_BEGIN].def     = 85.0;
  // Уставка Параметр защиты, для этой защиты работать по ВРП
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].id             = CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_PARAMETER - CCS_BEGIN].def            = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].id          = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].physic      = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FLAG - CCS_BEGIN].def         = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].id                 = CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_STATE - CCS_BEGIN].def                = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].id                  = CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].physic              = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_TIME - CCS_BEGIN].def                 = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].id         = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_COUNT - CCS_BEGIN].def        = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].id    = CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].def   = 0;
  // Защита "Дисбаланс напряжения"
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].id             = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].physic         = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_MODE - CCS_BEGIN].def            = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].id          = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].physic      = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PREVENT - CCS_BEGIN].def         = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].id      = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].physic  = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].min     = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].max     = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_ACTIV_DELAY - CCS_BEGIN].def     = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].id       = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].physic   = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_DELAY - CCS_BEGIN].def      = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].physic = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_DELAY - CCS_BEGIN].def   = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_LIMIT - CCS_BEGIN].def   = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].physic = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_RESET - CCS_BEGIN].def   = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].physic = PHYSIC_PERCENT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TRIP_SETPOINT - CCS_BEGIN].def   = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].id = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_SETPOINT - CCS_BEGIN].def = 0;
  // Уставка Параметр защиты, для этой защиты работать по ВРП
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].id        = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].physic    = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].max       = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_PARAMETER - CCS_BEGIN].def       = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].id     = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FLAG - CCS_BEGIN].def    = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].id            = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].physic        = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_STATE - CCS_BEGIN].def           = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].id             = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_TIME - CCS_BEGIN].def            = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_COUNT - CCS_BEGIN].def   = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].id = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_RESTART_FIRST_TIME - CCS_BEGIN].def = 0;
  // Защиты "Дисбаланс входных токов"
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].id             = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_MODE - CCS_BEGIN].def            = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].id          = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].physic      = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].def         = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].id      = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].physic  = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].min     = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].max     = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].def     = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].id       = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].physic   = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].def      = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].physic = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].def   = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].def   = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].def   = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].def   = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].id = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].def = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].id        = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].physic    = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].max       = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].def       = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].id     = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].def    = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].id            = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].physic        = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_STATE - CCS_BEGIN].def           = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].id             = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_TIME - CCS_BEGIN].def            = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].def   = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].id = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].def = 0;
  // Защиты "Чередование фаз"
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].id                = CCS_PROT_SUPPLY_PHASE_ROTATION_MODE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].physic            = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_MODE - CCS_BEGIN].def               = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].id             = CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PREVENT - CCS_BEGIN].def            = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].id         = CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].physic     = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_ACTIV_DELAY - CCS_BEGIN].def        = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].id          = CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].physic      = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_DELAY - CCS_BEGIN].def         = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].id       = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].physic   = PHYSIC_TIME;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_DELAY - CCS_BEGIN].def      = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].id       = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].physic   = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_LIMIT - CCS_BEGIN].def      = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].id       = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].physic   = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_RESET - CCS_BEGIN].def      = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].id       = CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].physic   = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TRIP_SETPOINT - CCS_BEGIN].def      = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].id    = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].max   = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_SETPOINT - CCS_BEGIN].def   = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].id           = CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_PARAMETER - CCS_BEGIN].def          = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].id        = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].physic    = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].max       = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FLAG - CCS_BEGIN].def       = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].id               = CCS_PROT_SUPPLY_PHASE_ROTATION_STATE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_STATE - CCS_BEGIN].def              = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].id                = CCS_PROT_SUPPLY_PHASE_ROTATION_TIME;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].physic            = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_TIME - CCS_BEGIN].def               = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].id       = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].physic   = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_COUNT - CCS_BEGIN].def      = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].id  = CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_RESTART_FIRST_TIME - CCS_BEGIN].def = 0;
  // Защита "Перегруз" (ЗП)
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].id                       = CCS_PROT_MOTOR_OVERLOAD_MODE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].value.float_t            = 1.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].min                      = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].max                      = 2.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_MODE - CCS_BEGIN].def                      = 1.0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].id                    = CCS_PROT_MOTOR_OVERLOAD_PREVENT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].min                   = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].max                   = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PREVENT - CCS_BEGIN].def                   = 0.0;
  // Задержка активации уставка
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].id                = CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].value.float_t     = 20.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].min               = 1.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].max               = 59999.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_ACTIV_DELAY - CCS_BEGIN].def               = 20.0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].id                 = CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].physic             = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].value.float_t      = 30.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].max                = 600.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_DELAY - CCS_BEGIN].def                = 30.0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].id              = CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].physic          = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].value.float_t   = 3600.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].min             = 60.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].max             = 3599940.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_DELAY - CCS_BEGIN].def             = 3600.0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].id              = CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].value.float_t   = 1.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].min             = 1.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].max             = 1000.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_LIMIT - CCS_BEGIN].def             = 1.0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].id              = CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].physic          = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].value.float_t   = 86400.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].min             = 60.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].max             = 3599940.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_RESET - CCS_BEGIN].def             = 86400.0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].id              = CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].physic          = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].value.float_t   = 110.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].min             = 50.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].max             = 150.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TRIP_SETPOINT - CCS_BEGIN].def             = 110.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].id           = CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].physic       = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].min          = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].max          = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_SETPOINT - CCS_BEGIN].def          = 0.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].id                  = CCS_PROT_MOTOR_OVERLOAD_PARAMETER;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].value.float_t       = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].max                 = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_PARAMETER - CCS_BEGIN].def                 = 0.0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].id               = CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].value.float_t    = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].max              = 1.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FLAG - CCS_BEGIN].def              = 0.0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].id                      = CCS_PROT_MOTOR_OVERLOAD_STATE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].value.float_t           = 3.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].max                     = 3.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_STATE - CCS_BEGIN].def                     = 3.0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].id                       = CCS_PROT_MOTOR_OVERLOAD_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].physic                   = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].value.float_t            = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].min                      = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].max                      = 4294967296.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_TIME - CCS_BEGIN].def                      = 0.0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].id              = CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].max             = 1000.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_COUNT - CCS_BEGIN].def             = 0.0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].id         = CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].physic     = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].max        = 4294967296;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].def        = 0;
  // Защита "Недогруз" (ЗП)
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].id                      = CCS_PROT_MOTOR_UNDERLOAD_MODE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].value.float_t           = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].max                     = 2.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_MODE - CCS_BEGIN].def                     = 1.0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].id                   = CCS_PROT_MOTOR_UNDERLOAD_PREVENT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PREVENT - CCS_BEGIN].def                  = 0.0;
  // Задержка активации уставка
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].id               = CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].value.float_t    = 10.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].max              = 59999.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_ACTIV_DELAY - CCS_BEGIN].def              = 10.0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].id                = CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].value.float_t     = 30.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].max               = 600.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_DELAY - CCS_BEGIN].def               = 30.0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].id             = CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].physic         = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].value.float_t  = 7200.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].min            = 60.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].max            = 3599940.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_DELAY - CCS_BEGIN].def            = 7200.0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].id             = CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].physic         = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].value.float_t  = 2.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].min            = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].max            = 1000.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_LIMIT - CCS_BEGIN].def            = 2.0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].id             = CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].physic         = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].value.float_t  = 86400.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].min            = 60.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].max            = 3599940.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_RESET - CCS_BEGIN].def            = 86400.0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].id             = CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].physic         = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].value.float_t  = 60.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].min            = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].max            = 100.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TRIP_SETPOINT - CCS_BEGIN].def            = 60.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].id          = CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].physic      = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 60.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].min         = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].max         = 100.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_SETPOINT - CCS_BEGIN].def         = 60.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].id                 = CCS_PROT_MOTOR_UNDERLOAD_PARAMETER;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].physic             = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].value.float_t      = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].max                = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PARAMETER - CCS_BEGIN].def                = 0.0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].id              = CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].max             = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FLAG - CCS_BEGIN].def             = 0.0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].id                     = CCS_PROT_MOTOR_UNDERLOAD_STATE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].value.float_t          = 3.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].min                    = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].max                    = 3.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_STATE - CCS_BEGIN].def                    = 3.0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].id                      = CCS_PROT_MOTOR_UNDERLOAD_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].max                     = 4294967296.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_TIME - CCS_BEGIN].def                     = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].id             = CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].physic         = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].value.float_t  = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].min            = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].max            = 1000.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_COUNT - CCS_BEGIN].def            = 0.0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].id        = CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].physic    = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].max       = 4294967296;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_RESTART_FIRST_TIME - CCS_BEGIN].def       = 0;
  // Защита "Предел тока двигателя"
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].id                        = CCS_PROT_MOTOR_CURRENT_MODE;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].physic                    = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].value.float_t             = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].min                       = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].max                       = 2.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_MODE - CCS_BEGIN].def                       = 1.0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].id                     = CCS_PROT_MOTOR_CURRENT_PREVENT;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].value.float_t          = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].min                    = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].max                    = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_PREVENT - CCS_BEGIN].def                    = 0.0;
  // Задержка активации уставка
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].id                 = CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].physic             = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].value.float_t      = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].max                = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_ACTIV_DELAY - CCS_BEGIN].def                = 0.0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].id                  = CCS_PROT_MOTOR_CURRENT_TRIP_DELAY;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].physic              = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].value.float_t       = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].max                 = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_DELAY - CCS_BEGIN].def                 = 0.0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].id               = CCS_PROT_MOTOR_CURRENT_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].value.float_t    = 3600.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].min              = 60.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].max              = 3599940.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_DELAY - CCS_BEGIN].def              = 3600.0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].id               = CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].value.float_t    = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].min              = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].max              = 1000.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_LIMIT - CCS_BEGIN].def              = 1.0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].id               = CCS_PROT_MOTOR_CURRENT_RESTART_RESET;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].value.float_t    = 86400.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].min              = 60.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].max              = 3599940.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_RESET - CCS_BEGIN].def              = 86400.0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].id               = CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].physic           = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].value.float_t    = 160.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].min              = 160.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].max              = 500.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TRIP_SETPOINT - CCS_BEGIN].def              = 160.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].id            = CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].physic        = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].min           = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].max           = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_SETPOINT - CCS_BEGIN].def           = 0.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].id                   = CCS_PROT_MOTOR_CURRENT_PARAMETER;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].physic               = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].max                  = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_PARAMETER - CCS_BEGIN].def                  = 0.0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].id                = CCS_PROT_MOTOR_CURRENT_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].physic            = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].value.float_t     = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].max               = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FLAG - CCS_BEGIN].def               = 0.0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].id                       = CCS_PROT_MOTOR_CURRENT_STATE;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].value.float_t            = 3.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].min                      = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].max                      = 3.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_STATE - CCS_BEGIN].def                      = 3.0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].id                        = CCS_PROT_MOTOR_CURRENT_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].physic                    = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].value.float_t             = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].min                       = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].max                       = 4294967296.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_TIME - CCS_BEGIN].def                       = 0.0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].id               = CCS_PROT_MOTOR_CURRENT_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].value.float_t    = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].max              = 1000.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_COUNT - CCS_BEGIN].def              = 0.0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].id          = CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].physic      = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].max         = 4294967296;
  parameters_[CCS_PROT_MOTOR_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].def         = 0;
  // Защита "Дисбаланс токов двигателя"
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].id              = CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_MODE - CCS_BEGIN].def             = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].id           = CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PREVENT - CCS_BEGIN].def          = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].id       = CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].physic   = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].min      = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].max      = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_ACTIV_DELAY - CCS_BEGIN].def      = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].id        = CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].physic    = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].max       = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_DELAY - CCS_BEGIN].def       = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].id     = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].physic = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_DELAY - CCS_BEGIN].def    = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].id     = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_LIMIT - CCS_BEGIN].def    = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].id     = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].physic = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_RESET - CCS_BEGIN].def    = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].id     = CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].physic = PHYSIC_PERCENT;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TRIP_SETPOINT - CCS_BEGIN].def    = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].id  = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_SETPOINT - CCS_BEGIN].def = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].id         = CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].operation  = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_PARAMETER - CCS_BEGIN].def        = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].id      = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].physic  = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].min     = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].max     = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FLAG - CCS_BEGIN].def     = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].id             = CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_STATE - CCS_BEGIN].def            = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].id              = CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].operation       = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].physic          = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_TIME - CCS_BEGIN].def             = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].id     = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_COUNT - CCS_BEGIN].def    = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].id = CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].physic = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].min = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].max = 0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_RESTART_FIRST_TIME - CCS_BEGIN].def = 0;
  // Защита "Турбинное вращение"
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].id                          = CCS_PROT_MOTOR_ASYNC_MODE;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].physic                      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_MODE - CCS_BEGIN].def                         = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].id                       = CCS_PROT_MOTOR_ASYNC_PREVENT;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].operation                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].physic                   = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].value.float_t            = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].min                      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].max                      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PREVENT - CCS_BEGIN].def                      = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].id                   = CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].physic               = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_ACTIV_DELAY - CCS_BEGIN].def                  = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].id                    = CCS_PROT_MOTOR_ASYNC_TRIP_DELAY;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].operation             = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].physic                = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].max                   = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_DELAY - CCS_BEGIN].def                   = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].id                 = CCS_PROT_MOTOR_ASYNC_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].physic             = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_DELAY - CCS_BEGIN].def                = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].id                 = CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_LIMIT - CCS_BEGIN].def                = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].id                 = CCS_PROT_MOTOR_ASYNC_RESTART_RESET;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_RESET - CCS_BEGIN].def                = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].id                 = CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].physic             = PHYSIC_FREQUENCY;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TRIP_SETPOINT - CCS_BEGIN].def                = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].id              = CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].operation       = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].physic          = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_SETPOINT - CCS_BEGIN].def             = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].id                     = CCS_PROT_MOTOR_ASYNC_PARAMETER;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_PARAMETER - CCS_BEGIN].def                    = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].id                  = CCS_PROT_MOTOR_ASYNC_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].operation           = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].physic              = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FLAG - CCS_BEGIN].def                 = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].id                         = CCS_PROT_MOTOR_ASYNC_STATE;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_STATE - CCS_BEGIN].def                        = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].id                          = CCS_PROT_MOTOR_ASYNC_TIME;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_TIME - CCS_BEGIN].def                         = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].id                 = CCS_PROT_MOTOR_ASYNC_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_COUNT - CCS_BEGIN].def                = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].id            = CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].operation     = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].physic        = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_MOTOR_ASYNC_RESTART_FIRST_TIME - CCS_BEGIN].def           = 0;
  // Защита "Рассинхронизация ПВЭД"
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].id                    = CCS_PROT_MOTOR_OUT_OF_SYNC_MODE;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].operation             = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].physic                = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].max                   = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_MODE - CCS_BEGIN].def                   = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].id                 = CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PREVENT - CCS_BEGIN].def                = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].id             = CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].physic         = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_ACTIV_DELAY - CCS_BEGIN].def            = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].id              = CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].operation       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].physic          = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_DELAY - CCS_BEGIN].def             = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].id           = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].physic       = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_DELAY - CCS_BEGIN].def          = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].id           = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_LIMIT - CCS_BEGIN].def          = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].id           = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_RESET - CCS_BEGIN].def          = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].id           = CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TRIP_SETPOINT - CCS_BEGIN].def          = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].id        = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].physic    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].max       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_SETPOINT - CCS_BEGIN].def       = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].id               = CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_PARAMETER - CCS_BEGIN].def              = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].id            = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].operation     = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].physic        = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FLAG - CCS_BEGIN].def           = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].id                   = CCS_PROT_MOTOR_OUT_OF_SYNC_STATE;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_STATE - CCS_BEGIN].def                  = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].id                    = CCS_PROT_MOTOR_OUT_OF_SYNC_TIME;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].operation             = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].physic                = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].max                   = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_TIME - CCS_BEGIN].def                   = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].id           = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_COUNT - CCS_BEGIN].def          = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].id      = CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].physic  = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].min     = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].max     = 0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_RESTART_FIRST_TIME - CCS_BEGIN].def     = 0;
  // Защита "Давление на приёме насоса"
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].id                  = CCS_PROT_DHS_PRESSURE_INTAKE_MODE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].value.float_t       = 1.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].max                 = 2.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_MODE - CCS_BEGIN].def                 = 0.0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].id               = CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].operation        = OPERATION_READ;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].value.float_t    = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].max              = 1.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PREVENT - CCS_BEGIN].def              = 0.0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].id           = CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].physic       = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].value.float_t = 5.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].min          = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].max          = 999.9;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_ACTIV_DELAY - CCS_BEGIN].def          = 5.0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].id            = CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].physic        = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].value.float_t = 5.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].min           = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].max           = 60.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_DELAY - CCS_BEGIN].def           = 5.0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].id         = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].physic     = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].value.float_t = 3600.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].max        = 180000.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_DELAY - CCS_BEGIN].def        = 3600.0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].id         = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].physic     = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].value.float_t = 5.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].max        = 9999.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_LIMIT - CCS_BEGIN].def        = 5.0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].id         = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].physic     = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].value.float_t = 600;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].max        = 3599940.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_RESET - CCS_BEGIN].def        = 600;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].id         = CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].physic     = PHYSIC_PRESSURE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 4.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].max        = 99.99;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TRIP_SETPOINT - CCS_BEGIN].def        = 4.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].id      = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].physic  = PHYSIC_PRESSURE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 25.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].min     = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].max     = 99.99;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_SETPOINT - CCS_BEGIN].def     = 25.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].id             = CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].physic         = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].value.float_t  = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].min            = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].max            = 1.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_PARAMETER - CCS_BEGIN].def            = 0.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].id          = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].operation   = OPERATION_READ;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].physic      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].min         = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].max         = 1.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FLAG - CCS_BEGIN].def         = 0.0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].id                 = CCS_PROT_DHS_PRESSURE_INTAKE_STATE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].operation          = OPERATION_READ;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].physic             = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].value.float_t      = 3.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].max                = 3.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_STATE - CCS_BEGIN].def                = 3.0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].id                  = CCS_PROT_DHS_PRESSURE_INTAKE_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].operation           = OPERATION_READ;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].max                 = 4294967296;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_TIME - CCS_BEGIN].def                 = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].id         = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].operation  = OPERATION_READ;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].physic     = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].max        = 9999.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_COUNT - CCS_BEGIN].def        = 0.0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].id    = CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_READ;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].physic = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].min   = 0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].max   = 4294967296;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_RESTART_FIRST_TIME - CCS_BEGIN].def   = 0;
  // Защита "Температура двигателя"
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].id                = CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].physic            = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].value.float_t     = 1.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].max               = 2.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_MODE - CCS_BEGIN].def               = 0.0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].id             = CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].operation      = OPERATION_READ;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].physic         = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].value.float_t  = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].min            = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].max            = 1.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PREVENT - CCS_BEGIN].def            = 0.0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].id         = CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].physic     = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].value.float_t = 5.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].max        = 999.9;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_ACTIV_DELAY - CCS_BEGIN].def        = 5.0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].id          = CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].physic      = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].value.float_t = 5.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].min         = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].max         = 60.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_DELAY - CCS_BEGIN].def         = 5.0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].id       = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].physic   = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].value.float_t = 3600.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].max      = 180000.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_DELAY - CCS_BEGIN].def      = 3600.0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].id       = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].physic   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].value.float_t = 5.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].max      = 9999.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_LIMIT - CCS_BEGIN].def      = 5.0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].id       = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].physic   = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].value.float_t = 600;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].max      = 3599940;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_RESET - CCS_BEGIN].def      = 600;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].id       = CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].physic   = PHYSIC_TEMPERATURE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 115.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].max      = 150.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TRIP_SETPOINT - CCS_BEGIN].def      = 115.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].id    = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].physic = PHYSIC_TEMPERATURE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 115.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].min   = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].max   = 150.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_SETPOINT - CCS_BEGIN].def   = 115.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].id           = CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].physic       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].min          = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].max          = 1.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_PARAMETER - CCS_BEGIN].def          = 0.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].id        = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].operation = OPERATION_READ;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].physic    = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].min       = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].max       = 1.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FLAG - CCS_BEGIN].def       = 0.0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].id               = CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].operation        = OPERATION_READ;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].value.float_t    = 3.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].max              = 3.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_STATE - CCS_BEGIN].def              = 3.0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].id                = CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].operation         = OPERATION_READ;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].physic            = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].max               = 4294967296;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_TIME - CCS_BEGIN].def               = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].id       = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].operation = OPERATION_READ;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].physic   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].max      = 9999.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_COUNT - CCS_BEGIN].def      = 0.0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].id  = CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].operation = OPERATION_READ;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].physic = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].min = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].max = 4294967296;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_RESTART_FIRST_TIME - CCS_BEGIN].def = 0;
  // Защита "Сопротивление изоляции"
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].id                       = CCS_PROT_DHS_RESISTANCE_MODE;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].value.float_t            = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].min                      = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].max                      = 1.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_MODE - CCS_BEGIN].def                      = 0.0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].id                    = CCS_PROT_DHS_RESISTANCE_PREVENT;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].operation             = OPERATION_READ;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].min                   = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].max                   = 1.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_PREVENT - CCS_BEGIN].def                   = 0.0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].id                = CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].value.float_t     = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].max               = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_ACTIV_DELAY - CCS_BEGIN].def               = 0.0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].id                 = CCS_PROT_DHS_RESISTANCE_TRIP_DELAY;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].physic             = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].value.float_t      = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].max                = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_DELAY - CCS_BEGIN].def                = 0.0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].id              = CCS_PROT_DHS_RESISTANCE_RESTART_DELAY;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].physic          = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].max             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_DELAY - CCS_BEGIN].def             = 0.0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].id              = CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].max             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_LIMIT - CCS_BEGIN].def             = 0.0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].id              = CCS_PROT_DHS_RESISTANCE_RESTART_RESET;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].physic          = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].max             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_RESET - CCS_BEGIN].def             = 0.0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].id              = CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].physic          = PHYSIC_RESISTANCE;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].value.float_t   = 30.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].min             = 30.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].max             = 500.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TRIP_SETPOINT - CCS_BEGIN].def             = 30.0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].id           = CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].operation    = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].physic       = PHYSIC_RESISTANCE;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].min          = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].max          = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_SETPOINT - CCS_BEGIN].def          = 0.0;
  // Уставка Параметр защиты, для этой защиты работать в режиме пониженной изоляции
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].id                  = CCS_PROT_DHS_RESISTANCE_PARAMETER;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].value.float_t       = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].max                 = 1.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_PARAMETER - CCS_BEGIN].def                 = 0.0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].id               = CCS_PROT_DHS_RESISTANCE_RESTART_FLAG;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].physic           = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].value.float_t    = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].max              = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FLAG - CCS_BEGIN].def              = 0.0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].id                      = CCS_PROT_DHS_RESISTANCE_STATE;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].operation               = OPERATION_READ;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].value.float_t           = 3.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].max                     = 3.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_STATE - CCS_BEGIN].def                     = 3.0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].id                       = CCS_PROT_DHS_RESISTANCE_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].operation                = OPERATION_READ;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].physic                   = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].value.float_t            = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].min                      = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].max                      = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_TIME - CCS_BEGIN].def                      = 0.0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].id              = CCS_PROT_DHS_RESISTANCE_RESTART_COUNT;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].operation       = OPERATION_READ;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].max             = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_COUNT - CCS_BEGIN].def             = 0.0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].id         = CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].operation  = OPERATION_READ;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].physic     = PHYSIC_DATE_TIME;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].max        = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_RESTART_FIRST_TIME - CCS_BEGIN].def        = 0.0;
  // Защита "Вибрация двигателя"
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].id                        = CCS_PROT_DHS_VIBRATION_MODE;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_MODE - CCS_BEGIN].def                       = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].id                     = CCS_PROT_DHS_VIBRATION_PREVENT;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PREVENT - CCS_BEGIN].def                    = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].id                 = CCS_PROT_DHS_VIBRATION_ACTIV_DELAY;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].physic             = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_ACTIV_DELAY - CCS_BEGIN].def                = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].id                  = CCS_PROT_DHS_VIBRATION_TRIP_DELAY;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].operation           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].physic              = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_DELAY - CCS_BEGIN].def                 = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].id               = CCS_PROT_DHS_VIBRATION_RESTART_DELAY;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_DELAY - CCS_BEGIN].def              = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].id               = CCS_PROT_DHS_VIBRATION_RESTART_LIMIT;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_LIMIT - CCS_BEGIN].def              = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].id               = CCS_PROT_DHS_VIBRATION_RESTART_RESET;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_RESET - CCS_BEGIN].def              = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].id               = CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TRIP_SETPOINT - CCS_BEGIN].def              = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].id            = CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].physic        = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_SETPOINT - CCS_BEGIN].def           = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].id                   = CCS_PROT_DHS_VIBRATION_PARAMETER;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_PARAMETER - CCS_BEGIN].def                  = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].id                = CCS_PROT_DHS_VIBRATION_RESTART_FLAG;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].operation         = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].physic            = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FLAG - CCS_BEGIN].def               = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].id                       = CCS_PROT_DHS_VIBRATION_STATE;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].operation                = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].physic                   = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].value.float_t            = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].min                      = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].max                      = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_STATE - CCS_BEGIN].def                      = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].id                        = CCS_PROT_DHS_VIBRATION_TIME;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_TIME - CCS_BEGIN].def                       = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].id               = CCS_PROT_DHS_VIBRATION_RESTART_COUNT;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_COUNT - CCS_BEGIN].def              = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].id          = CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].operation   = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].physic      = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_DHS_VIBRATION_RESTART_FIRST_TIME - CCS_BEGIN].def         = 0;
  // Защиты Аналоговый вход 1
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].id                                 = CCS_PROT_AI_1_MODE;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_1_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].id                              = CCS_PROT_AI_1_PREVENT;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_AI_1_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_AI_1_ACTIV_DELAY;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].physic                      = PHYSIC_TIME;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_AI_1_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_AI_1_TRIP_DELAY;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_AI_1_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_AI_1_RESTART_DELAY;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_AI_1_RESTART_LIMIT;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_AI_1_RESTART_RESET;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_AI_1_TRIP_SETPOINT;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_1_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_AI_1_RESTART_SETPOINT;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_AI_1_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_AI_1_PARAMETER;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_AI_1_PARAMETER - CCS_BEGIN].def                           = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_AI_1_RESTART_FLAG;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].id                                = CCS_PROT_AI_1_STATE;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_AI_1_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].id                                 = CCS_PROT_AI_1_TIME;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_1_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_AI_1_RESTART_COUNT;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_1_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_AI_1_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_AI_1_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защиты Аналоговый вход 2
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].id                                 = CCS_PROT_AI_2_MODE;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_2_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].id                              = CCS_PROT_AI_2_PREVENT;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_AI_2_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_AI_2_ACTIV_DELAY;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_AI_2_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_AI_2_TRIP_DELAY;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_AI_2_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_AI_2_RESTART_DELAY;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_AI_2_RESTART_LIMIT;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_AI_2_RESTART_RESET;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_AI_2_TRIP_SETPOINT;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_2_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_AI_2_RESTART_SETPOINT;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_AI_2_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_AI_2_PARAMETER;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_AI_2_PARAMETER - CCS_BEGIN].def                           = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_AI_2_RESTART_FLAG;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].id                                = CCS_PROT_AI_2_STATE;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_AI_2_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].id                                 = CCS_PROT_AI_2_TIME;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_2_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_AI_2_RESTART_COUNT;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_2_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_AI_2_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_AI_2_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защиты Аналоговый вход 3
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].id                                 = CCS_PROT_AI_3_MODE;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_3_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].id                              = CCS_PROT_AI_3_PREVENT;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_AI_3_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_AI_3_ACTIV_DELAY;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_AI_3_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_AI_3_TRIP_DELAY;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_AI_3_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_AI_3_RESTART_DELAY;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_AI_3_RESTART_LIMIT;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_AI_3_RESTART_RESET;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_AI_3_TRIP_SETPOINT;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_3_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_AI_3_RESTART_SETPOINT;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_AI_3_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_AI_3_PARAMETER;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_AI_3_PARAMETER - CCS_BEGIN].def                           = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_AI_3_RESTART_FLAG;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].id                                = CCS_PROT_AI_3_STATE;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_AI_3_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].id                                 = CCS_PROT_AI_3_TIME;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_3_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_AI_3_RESTART_COUNT;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_3_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_AI_3_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_AI_3_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защиты Аналоговый вход 4
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].id                                 = CCS_PROT_AI_4_MODE;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_4_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].id                              = CCS_PROT_AI_4_PREVENT;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_AI_4_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_AI_4_ACTIV_DELAY;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_AI_4_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_AI_4_TRIP_DELAY;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_AI_4_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_AI_4_RESTART_DELAY;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_AI_4_RESTART_LIMIT;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_AI_4_RESTART_RESET;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_AI_4_TRIP_SETPOINT;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_4_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_AI_4_RESTART_SETPOINT;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_AI_4_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_AI_4_PARAMETER;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_AI_4_PARAMETER - CCS_BEGIN].def                           = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_AI_4_RESTART_FLAG;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].id                                = CCS_PROT_AI_4_STATE;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_AI_4_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].id                                 = CCS_PROT_AI_4_TIME;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_AI_4_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_AI_4_RESTART_COUNT;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_AI_4_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_AI_4_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_AI_4_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защиты по дискретным входам
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].id                                 = CCS_PROT_DI_1_MODE;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_1_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].id                              = CCS_PROT_DI_1_PREVENT;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_DI_1_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_DI_1_ACTIV_DELAY;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_DI_1_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_DI_1_TRIP_DELAY;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_DI_1_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_DI_1_RESTART_DELAY;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_DI_1_RESTART_LIMIT;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_DI_1_RESTART_RESET;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_DI_1_TRIP_SETPOINT;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_1_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_DI_1_RESTART_SETPOINT;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_DI_1_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_DI_1_PARAMETER;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_DI_1_PARAMETER - CCS_BEGIN].def                           = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_DI_1_RESTART_FLAG;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].id                                = CCS_PROT_DI_1_STATE;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_DI_1_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].id                                 = CCS_PROT_DI_1_TIME;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_1_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_DI_1_RESTART_COUNT;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_1_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_DI_1_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_DI_1_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защита дискретный вход 2
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].id                                 = CCS_PROT_DI_2_MODE;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_2_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].id                              = CCS_PROT_DI_2_PREVENT;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_DI_2_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_DI_2_ACTIV_DELAY;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_DI_2_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_DI_2_TRIP_DELAY;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_DI_2_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_DI_2_RESTART_DELAY;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_DI_2_RESTART_LIMIT;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_DI_2_RESTART_RESET;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_DI_2_TRIP_SETPOINT;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_2_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_DI_2_RESTART_SETPOINT;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_DI_2_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_DI_2_PARAMETER;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_DI_2_PARAMETER - CCS_BEGIN].def                           = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_DI_2_RESTART_FLAG;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].id                                = CCS_PROT_DI_2_STATE;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_DI_2_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].id                                 = CCS_PROT_DI_2_TIME;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_2_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_DI_2_RESTART_COUNT;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_2_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_DI_2_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_DI_2_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защита дискретный вход 3
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].id                                 = CCS_PROT_DI_3_MODE;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_3_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].id                              = CCS_PROT_DI_3_PREVENT;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_DI_3_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_DI_3_ACTIV_DELAY;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_DI_3_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_DI_3_TRIP_DELAY;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_DI_3_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_DI_3_RESTART_DELAY;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_DI_3_RESTART_LIMIT;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_DI_3_RESTART_RESET;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_DI_3_TRIP_SETPOINT;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_3_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_DI_3_RESTART_SETPOINT;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_DI_3_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_DI_3_PARAMETER;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_DI_3_PARAMETER - CCS_BEGIN].def                           = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_DI_3_RESTART_FLAG;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].id                                = CCS_PROT_DI_3_STATE;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_DI_3_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].id                                 = CCS_PROT_DI_3_TIME;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_3_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_DI_3_RESTART_COUNT;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_3_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_DI_3_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_DI_3_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защита дискретный вход 4
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].id                                 = CCS_PROT_DI_4_MODE;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_4_MODE - CCS_BEGIN].def                                = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].id                              = CCS_PROT_DI_4_PREVENT;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].operation                       = 0;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].physic                          = 0;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PROT_DI_4_PREVENT - CCS_BEGIN].def                             = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].id                          = CCS_PROT_DI_4_ACTIV_DELAY;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_DI_4_ACTIV_DELAY - CCS_BEGIN].def                         = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].id                           = CCS_PROT_DI_4_TRIP_DELAY;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_DI_4_TRIP_DELAY - CCS_BEGIN].def                          = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].id                        = CCS_PROT_DI_4_RESTART_DELAY;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_DELAY - CCS_BEGIN].def                       = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].id                        = CCS_PROT_DI_4_RESTART_LIMIT;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_LIMIT - CCS_BEGIN].def                       = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].id                        = CCS_PROT_DI_4_RESTART_RESET;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_RESET - CCS_BEGIN].def                       = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].id                        = CCS_PROT_DI_4_TRIP_SETPOINT;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_4_TRIP_SETPOINT - CCS_BEGIN].def                       = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].id                     = CCS_PROT_DI_4_RESTART_SETPOINT;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_DI_4_RESTART_SETPOINT - CCS_BEGIN].def                    = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].id                            = CCS_PROT_DI_4_PARAMETER;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_DI_4_PARAMETER - CCS_BEGIN].def                           = 0;
  // Текущий параметр Флаг что защита в АПВ
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].id                         = CCS_PROT_DI_4_RESTART_FLAG;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FLAG - CCS_BEGIN].def                        = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].id                                = CCS_PROT_DI_4_STATE;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].operation                         = 0;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].physic                            = 0;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PROT_DI_4_STATE - CCS_BEGIN].def                               = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].id                                 = CCS_PROT_DI_4_TIME;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].operation                          = 0;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].physic                             = 0;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PROT_DI_4_TIME - CCS_BEGIN].def                                = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].id                        = CCS_PROT_DI_4_RESTART_COUNT;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].operation                 = 0;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].physic                    = 0;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].min                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].max                       = 0;
  parameters_[CCS_PROT_DI_4_RESTART_COUNT - CCS_BEGIN].def                       = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].id                   = CCS_PROT_DI_4_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_DI_4_RESTART_FIRST_TIME - CCS_BEGIN].def                  = 0;
  // Защита "Превышения числа пусков"
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].id                  = CCS_PROT_OTHER_LIMIT_RESTART_MODE;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].operation           = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].physic              = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_MODE - CCS_BEGIN].def                 = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].id               = CCS_PROT_OTHER_LIMIT_RESTART_PREVENT;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].physic           = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PREVENT - CCS_BEGIN].def              = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].id           = CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].access       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].operation    = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].physic       = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].validity     = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].min          = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].max          = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_ACTIV_DELAY - CCS_BEGIN].def          = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].id            = CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].operation     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].physic        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].min           = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].max           = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_DELAY - CCS_BEGIN].def           = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].id         = CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].operation  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_DELAY - CCS_BEGIN].def        = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].id         = CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].operation  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_LIMIT - CCS_BEGIN].def        = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].id         = CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].operation  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_RESET - CCS_BEGIN].def        = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].id         = CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].operation  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TRIP_SETPOINT - CCS_BEGIN].def        = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].id      = CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].physic  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].min     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].max     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_SETPOINT - CCS_BEGIN].def     = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].id             = CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_PARAMETER - CCS_BEGIN].def            = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].id          = CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].operation   = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].physic      = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_FLAG - CCS_BEGIN].def         = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].id                 = CCS_PROT_OTHER_LIMIT_RESTART_STATE;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_STATE - CCS_BEGIN].def                = 0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].id                  = CCS_PROT_OTHER_LIMIT_RESTART_TIME;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].operation           = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].physic              = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].min                 = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].max                 = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_TIME - CCS_BEGIN].def                 = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].id         = CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].operation  = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].physic     = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].min        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].max        = 0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_RESTART_COUNT - CCS_BEGIN].def        = 0;
  // Защита "Блокировка силового отсека"
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].id                      = CCS_PROT_OTHER_LOCK_DOOR_MODE;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].min                     = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].max                     = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_MODE - CCS_BEGIN].def                     = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].id                   = CCS_PROT_OTHER_LOCK_DOOR_PREVENT;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PREVENT - CCS_BEGIN].def                  = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].id               = CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].operation        = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].min              = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].max              = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_ACTIV_DELAY - CCS_BEGIN].def              = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].id                = CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].operation         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_DELAY - CCS_BEGIN].def               = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].id             = CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].physic         = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_DELAY - CCS_BEGIN].def            = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].id             = CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_LIMIT - CCS_BEGIN].def            = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].id             = CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_RESET - CCS_BEGIN].def            = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].id             = CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TRIP_SETPOINT - CCS_BEGIN].def            = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].id          = CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].operation   = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].physic      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].min         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].max         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_SETPOINT - CCS_BEGIN].def         = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].id                 = CCS_PROT_OTHER_LOCK_DOOR_PARAMETER;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].operation          = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].physic             = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].min                = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].max                = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_PARAMETER - CCS_BEGIN].def                = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].id              = CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].operation       = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].physic          = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FLAG - CCS_BEGIN].def             = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].id                     = CCS_PROT_OTHER_LOCK_DOOR_STATE;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_STATE - CCS_BEGIN].def                    = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].id                      = CCS_PROT_OTHER_LOCK_DOOR_TIME;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].operation               = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].physic                  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].min                     = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].max                     = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_TIME - CCS_BEGIN].def                     = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].id             = CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].operation      = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].physic         = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].min            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].max            = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_COUNT - CCS_BEGIN].def            = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].id        = CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].operation = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].physic    = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].min       = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].max       = 0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_RESTART_FIRST_TIME - CCS_BEGIN].def       = 0;
  // Защита "Аппаратные защиты ЧРП"
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].id                            = CCS_PROT_OTHER_VSD_MODE;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_OTHER_VSD_MODE - CCS_BEGIN].def                           = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].id                         = CCS_PROT_OTHER_VSD_PREVENT;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].operation                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].physic                     = 0;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_OTHER_VSD_PREVENT - CCS_BEGIN].def                        = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].id                     = CCS_PROT_OTHER_VSD_ACTIV_DELAY;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].operation              = 0;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].physic                 = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_OTHER_VSD_ACTIV_DELAY - CCS_BEGIN].def                    = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].id                      = CCS_PROT_OTHER_VSD_TRIP_DELAY;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].operation               = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].physic                  = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].min                     = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].max                     = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_DELAY - CCS_BEGIN].def                     = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].id                   = CCS_PROT_OTHER_VSD_RESTART_DELAY;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].physic               = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_DELAY - CCS_BEGIN].def                  = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].id                   = CCS_PROT_OTHER_VSD_RESTART_LIMIT;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_LIMIT - CCS_BEGIN].def                  = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].id                   = CCS_PROT_OTHER_VSD_RESTART_RESET;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_RESET - CCS_BEGIN].def                  = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].id                   = CCS_PROT_OTHER_VSD_TRIP_SETPOINT;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_TRIP_SETPOINT - CCS_BEGIN].def                  = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].id                = CCS_PROT_OTHER_VSD_RESTART_SETPOINT;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].operation         = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].physic            = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_SETPOINT - CCS_BEGIN].def               = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].id                       = CCS_PROT_OTHER_VSD_PARAMETER;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].operation                = 0;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].physic                   = 0;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].value.float_t            = 0;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].min                      = 0;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].max                      = 0;
  parameters_[CCS_PROT_OTHER_VSD_PARAMETER - CCS_BEGIN].def                      = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].id                    = CCS_PROT_OTHER_VSD_RESTART_FLAG;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].operation             = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].physic                = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].max                   = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FLAG - CCS_BEGIN].def                   = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].id                           = CCS_PROT_OTHER_VSD_STATE;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_OTHER_VSD_STATE - CCS_BEGIN].def                          = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].id                            = CCS_PROT_OTHER_VSD_TIME;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_OTHER_VSD_TIME - CCS_BEGIN].def                           = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].id                   = CCS_PROT_OTHER_VSD_RESTART_COUNT;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].operation            = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_COUNT - CCS_BEGIN].def                  = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].id              = CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].operation       = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].physic          = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_OTHER_VSD_RESTART_FIRST_TIME - CCS_BEGIN].def             = 0;
  // Защита "Контроль УКИ"
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].id                            = CCS_PROT_OTHER_IMB_MODE;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].physic                        = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_OTHER_IMB_MODE - CCS_BEGIN].def                           = 0;
  // Параметр запрещающий запуск
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].id                         = CCS_PROT_OTHER_IMB_PREVENT;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].physic                     = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].min                        = 0;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].max                        = 0;
  parameters_[CCS_PROT_OTHER_IMB_PREVENT - CCS_BEGIN].def                        = 0;
  // Задержка активации уставка
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].id                     = CCS_PROT_OTHER_IMB_ACTIV_DELAY;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].physic                 = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_OTHER_IMB_ACTIV_DELAY - CCS_BEGIN].def                    = 0;
  // Задержка срабатывания уставка
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].id                      = CCS_PROT_OTHER_IMB_TRIP_DELAY;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].physic                  = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].min                     = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].max                     = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_DELAY - CCS_BEGIN].def                     = 0;
  // Задержка АПВ уставка
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].id                   = CCS_PROT_OTHER_IMB_RESTART_DELAY;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].physic               = PHYSIC_TIME;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_DELAY - CCS_BEGIN].def                  = 0;
  // Количество АПВ уставка
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].id                   = CCS_PROT_OTHER_IMB_RESTART_LIMIT;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_LIMIT - CCS_BEGIN].def                  = 0;
  // Автосброс счетчика АПВ
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].id                   = CCS_PROT_OTHER_IMB_RESTART_RESET;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_RESET - CCS_BEGIN].def                  = 0;
  // Уставка срабатывания защиты
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].id                   = CCS_PROT_OTHER_IMB_TRIP_SETPOINT;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].physic               = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_TRIP_SETPOINT - CCS_BEGIN].def                  = 0;
  // Условие АПВ уставка
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].id                = CCS_PROT_OTHER_IMB_RESTART_SETPOINT;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].physic            = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].min               = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].max               = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_SETPOINT - CCS_BEGIN].def               = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].id                       = CCS_PROT_OTHER_IMB_PARAMETER;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].physic                   = 0;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].value.float_t            = 0;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].min                      = 0;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].max                      = 0;
  parameters_[CCS_PROT_OTHER_IMB_PARAMETER - CCS_BEGIN].def                      = 0;
  // Уставка параметр защиты
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].id                    = CCS_PROT_OTHER_IMB_RESTART_FLAG;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].physic                = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].max                   = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FLAG - CCS_BEGIN].def                   = 0;
  // Текущий параметр состояние автомата
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].id                           = CCS_PROT_OTHER_IMB_STATE;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].min                          = 0;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].max                          = 0;
  parameters_[CCS_PROT_OTHER_IMB_STATE - CCS_BEGIN].def                          = 0;
  // Текущий параметр Фиксированное время
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].id                            = CCS_PROT_OTHER_IMB_TIME;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].min                           = 0;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].max                           = 0;
  parameters_[CCS_PROT_OTHER_IMB_TIME - CCS_BEGIN].def                           = 0;
  // Текущий параметр Количество АПВ
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].id                   = CCS_PROT_OTHER_IMB_RESTART_COUNT;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_COUNT - CCS_BEGIN].def                  = 0;
  // Текущий параметр Время первого АПВ
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].id              = CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].physic          = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].value.float_t   = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].min             = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].max             = 0;
  parameters_[CCS_PROT_OTHER_IMB_RESTART_FIRST_TIME - CCS_BEGIN].def             = 0;
  // Режим периодический
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].id                              = CCS_RGM_PERIODIC_MODE;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].min                             = 0;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].max                             = 0;
  parameters_[CCS_RGM_PERIODIC_MODE - CCS_BEGIN].def                             = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].id                             = CCS_RGM_PERIODIC_STATE;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].operation                      = 0;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].physic                         = 0;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].min                            = 0;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].max                            = 0;
  parameters_[CCS_RGM_PERIODIC_STATE - CCS_BEGIN].def                            = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].id                        = CCS_RGM_PERIODIC_RUN_PERIOD;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].physic                    = PHYSIC_TIME;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].min                       = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].max                       = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_PERIOD - CCS_BEGIN].def                       = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].id                       = CCS_RGM_PERIODIC_STOP_PERIOD;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].physic                   = PHYSIC_TIME;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].value.float_t            = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].min                      = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].max                      = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_PERIOD - CCS_BEGIN].def                      = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].id                    = CCS_RGM_PERIODIC_RUN_BEGIN_TIME;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].physic                = PHYSIC_DATE_TIME;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].min                   = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].max                   = 4294967296;
  parameters_[CCS_RGM_PERIODIC_RUN_BEGIN_TIME - CCS_BEGIN].def                   = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].id                   = CCS_RGM_PERIODIC_RUN_TIME_TO_END;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].min                  = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].max                  = 0;
  parameters_[CCS_RGM_PERIODIC_RUN_TIME_TO_END - CCS_BEGIN].def                  = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].id                   = CCS_RGM_PERIODIC_STOP_BEGIN_TIME;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].physic               = PHYSIC_DATE_TIME;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].min                  = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].max                  = 4294967296;
  parameters_[CCS_RGM_PERIODIC_STOP_BEGIN_TIME - CCS_BEGIN].def                  = 0;
  // 
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].id                  = CCS_RGM_PERIODIC_STOP_TIME_TO_END;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].value.float_t       = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].min                 = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].max                 = 0;
  parameters_[CCS_RGM_PERIODIC_STOP_TIME_TO_END - CCS_BEGIN].def                 = 0;
  // Режим чередования частот
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].id                      = CCS_RGM_ALTERNATION_FREQ_MODE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].value.float_t           = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].max                     = 1.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_MODE - CCS_BEGIN].def                     = 0.0;
  // Режим чередования частот частота 1
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].id                    = CCS_RGM_ALTERNATION_FREQ_FREQ_1;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].physic                = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].min                   = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].max                   = 500.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_1 - CCS_BEGIN].def                   = 0.0;
  // Режим чередования частот время работы на частоте 1
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].id                   = CCS_RGM_ALTERNATION_FREQ_TIMER_1;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].physic               = PHYSIC_TIME;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].max                  = 86400.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1 - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].id               = CCS_RGM_ALTERNATION_FREQ_TIMER_1_END;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].physic           = PHYSIC_DATE_TIME;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].value.float_t    = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].min              = 0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].max              = 4294967296;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_1_END - CCS_BEGIN].def              = 0;
  // Режим чередования частот уставка ЗСП
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].id               = CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].physic           = PHYSIC_PERCENT;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].value.float_t    = 60.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].max              = 100.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_1 - CCS_BEGIN].def              = 60.0;
  // Режим чередования частот частота 2
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].id                    = CCS_RGM_ALTERNATION_FREQ_FREQ_2;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].physic                = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].min                   = 1.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].max                   = 500.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_FREQ_2 - CCS_BEGIN].def                   = 0.0;
  // Режим чередования частот время работы на частоте 2
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].id                   = CCS_RGM_ALTERNATION_FREQ_TIMER_2;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].physic               = PHYSIC_TIME;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].max                  = 86400.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2 - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].id               = CCS_RGM_ALTERNATION_FREQ_TIMER_2_END;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].physic           = PHYSIC_DATE_TIME;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].value.float_t    = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].min              = 0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].max              = 4294967296;
  parameters_[CCS_RGM_ALTERNATION_FREQ_TIMER_2_END - CCS_BEGIN].def              = 0;
  // Режим чередования частот уставка ЗСП 2
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].id               = CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].physic           = PHYSIC_PERCENT;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].value.float_t    = 60.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].min              = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].max              = 100.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_UNDERLOAD_2 - CCS_BEGIN].def              = 60.0;
  // Режим программного изменения частоты
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].id                           = CCS_RGM_CHANGE_FREQ_MODE;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].max                          = 2.0;
  parameters_[CCS_RGM_CHANGE_FREQ_MODE - CCS_BEGIN].def                          = 0.0;
  // Начальная частота
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].id                     = CCS_RGM_CHANGE_FREQ_BEGIN_FREQ;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].physic                 = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].value.float_t          = 35.0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].min                    = 35.0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].max                    = 500.0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_FREQ - CCS_BEGIN].def                    = 35.0;
  // Конечная частота
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].id                       = CCS_RGM_CHANGE_FREQ_END_FREQ;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].physic                   = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].value.float_t            = 35.0;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].min                      = 35.0;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].max                      = 500.0;
  parameters_[CCS_RGM_CHANGE_FREQ_END_FREQ - CCS_BEGIN].def                      = 35.0;
  // Время вывода на режим
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].id                         = CCS_RGM_CHANGE_FREQ_PERIOD;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].physic                     = PHYSIC_TIME;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].value.float_t              = 60.0;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].min                        = 60.0;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].max                        = 86400.0;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD - CCS_BEGIN].def                        = 60.0;
  // Зафиксированное время начала отсчета текущего шага частоты
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].id                     = CCS_RGM_CHANGE_FREQ_BEGIN_TIME;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].physic                 = PHYSIC_DATE_TIME;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].max                    = 4294967296;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_TIME - CCS_BEGIN].def                    = 0;
  // Период шага частоты
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].id                = CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].value.float_t     = 5.0;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].min               = 5.0;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].max               = 86400.0;
  parameters_[CCS_RGM_CHANGE_FREQ_PERIOD_ONE_STEP - CCS_BEGIN].def               = 5.0;
  // Параметры ВНР
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].id                             = CCS_RGM_MODE_DATE_TIME;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].operation                      = OPERATION_READ;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].physic                         = PHYSIC_DATE_TIME;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].min                            = 0;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].max                            = 4294967296;
  parameters_[CCS_RGM_MODE_DATE_TIME - CCS_BEGIN].def                            = 0;
  // 
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].id                               = CCS_RGM_MODE_CURRENT;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].operation                        = OPERATION_READ;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].physic                           = PHYSIC_CURRENT;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].min                              = 0;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].max                              = 0;
  parameters_[CCS_RGM_MODE_CURRENT - CCS_BEGIN].def                              = 0;
  // 
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].id                               = CCS_RGM_MODE_VOLTAGE;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].operation                        = OPERATION_READ;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].physic                           = PHYSIC_VOLTAGE;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].min                              = 0;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].max                              = 0;
  parameters_[CCS_RGM_MODE_VOLTAGE - CCS_BEGIN].def                              = 0;
  // 
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].id                                  = CCS_RGM_MODE_LOAD;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].operation                           = OPERATION_READ;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].physic                              = PHYSIC_PERCENT;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_RGM_MODE_LOAD - CCS_BEGIN].def                                 = 0;
  // Режим поддержания параметра. Включение
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].id                     = CCS_RGM_MAINTENANCE_PARAM_MODE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].operation              = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].max                    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MODE - CCS_BEGIN].def                    = 0;
  // Режим поддержания параметра. Тип параметра
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].id                     = CCS_RGM_MAINTENANCE_PARAM_TYPE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].operation              = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].max                    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_TYPE - CCS_BEGIN].def                    = 0;
  // Режим поддержания параметра. Зависимость
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].id               = CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].operation        = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].physic           = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].min              = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].max              = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_DEPENDENCE - CCS_BEGIN].def              = 0;
  // Режим поддержания параметра. Поддержка значения - Ток
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].id         = CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].operation  = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].physic     = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].min        = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].max        = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_CURRENT - CCS_BEGIN].def        = 0;
  // Режим поддержания параметра. Период регулирования
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].id                   = CCS_RGM_MAINTENANCE_PARAM_PERIOD;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].operation            = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].physic               = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].min                  = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].max                  = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PERIOD - CCS_BEGIN].def                  = 0;
  // Режим поддержания параметра. Пропорциональный коэффициент
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].id                     = CCS_RGM_MAINTENANCE_PARAM_PROP;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].operation              = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].physic                 = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].max                    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_PROP - CCS_BEGIN].def                    = 0;
  // Режим поддержания параметра. Интегральный коэффициент
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].id                      = CCS_RGM_MAINTENANCE_PARAM_INT;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].operation               = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].physic                  = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].min                     = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].max                     = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_INT - CCS_BEGIN].def                     = 0;
  // Режим поддержания параметра. Мин рабочая частота
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].id                 = CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].operation          = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].physic             = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].min                = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].max                = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MIN_FREQ - CCS_BEGIN].def                = 0;
  // Режим поддержания параметра. Макс рабочая частота
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].id                 = CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].operation          = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].physic             = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].value.float_t      = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].min                = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].max                = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_MAX_FREQ - CCS_BEGIN].def                = 0;
  // Режим встряхивания
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].id                               = CCS_RGM_JARRING_MODE;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].operation                        = 0;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].physic                           = 0;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].min                              = 0;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].max                              = 0;
  parameters_[CCS_RGM_JARRING_MODE - CCS_BEGIN].def                              = 0;
  // Период экскурсий частоты режима встряхивания.
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].id                             = CCS_RGM_JARRING_PERIOD;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].operation                      = 0;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].physic                         = 0;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].min                            = 0;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].max                            = 0;
  parameters_[CCS_RGM_JARRING_PERIOD - CCS_BEGIN].def                            = 0;
  // Величина прибавки частоты вращения выше уставки в режиме встряхивания
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].id                            = CCS_RGM_JARRING_UPDFREQ;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].min                           = 0;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].max                           = 0;
  parameters_[CCS_RGM_JARRING_UPDFREQ - CCS_BEGIN].def                           = 0;
  // Время прибавки частоты вращения выше уставки в режиме встряхивания
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].id                             = CCS_RGM_JARRING_UPTIME;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].operation                      = 0;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].physic                         = 0;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].min                            = 0;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].max                            = 0;
  parameters_[CCS_RGM_JARRING_UPTIME - CCS_BEGIN].def                            = 0;
  // Величина уменьшения частоты вращения ниже уставки в режиме встряхивания
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].id                          = CCS_RGM_JARRING_DOWNDFREQ;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].min                         = 0;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].max                         = 0;
  parameters_[CCS_RGM_JARRING_DOWNDFREQ - CCS_BEGIN].def                         = 0;
  // Время уменьшения частоты вращения ниже уставки в режиме встряхивания
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].id                           = CCS_RGM_JARRING_DOWNTIME;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].min                          = 0;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].max                          = 0;
  parameters_[CCS_RGM_JARRING_DOWNTIME - CCS_BEGIN].def                          = 0;
  // Режим Учёт нагрева кабеля
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].id                            = CCS_RGM_HEAT_CABLE_MODE;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].physic                        = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].min                           = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].max                           = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE - CCS_BEGIN].def                           = 0;
  // Режим Учёт нагрева кабеля сопротивление при 20с
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].id                   = CCS_RGM_HEAT_CABLE_RESISTANCE_20;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].physic               = PHYSIC_RESIST_CABLE;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].min                  = 0;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].max                  = 0;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_20 - CCS_BEGIN].def                  = 0;
  // Режим Учёт нагрева кабеля сопротивление при 80с
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].id                   = CCS_RGM_HEAT_CABLE_RESISTANCE_80;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].physic               = PHYSIC_RESIST_CABLE;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].min                  = 0;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].max                  = 0;
  parameters_[CCS_RGM_HEAT_CABLE_RESISTANCE_80 - CCS_BEGIN].def                  = 0;
  // Режим Учёт нагрева кабеля номинальный ток кабеля
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].id                    = CCS_RGM_HEAT_CABLE_MODE_CURRENT;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].physic                = PHYSIC_CURRENT;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].min                   = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].max                   = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_CURRENT - CCS_BEGIN].def                   = 0;
  // Режим Учёт нагрева кабеля время нагрева
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].id             = CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].physic         = PHYSIC_TIME;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].value.float_t  = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].min            = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].max            = 0;
  parameters_[CCS_RGM_HEAT_CABLE_MODE_DELAY_REACTION - CCS_BEGIN].def            = 0;
  // Режим оптимизации напряжения вкл
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].id                         = CCS_RGM_OPTIM_VOLTAGE_MODE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].physic                     = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].min                        = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].max                        = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_MODE - CCS_BEGIN].def                        = 0;
  // Режим оптимизации напряжения диапазон
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].id                        = CCS_RGM_OPTIM_VOLTAGE_SCALE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].physic                    = PHYSIC_VOLTAGE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].value.float_t             = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].min                       = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].max                       = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_SCALE - CCS_BEGIN].def                       = 0;
  // Режим оптимизации напряжения шаг
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].id                         = CCS_RGM_OPTIM_VOLTAGE_STEP;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].physic                     = PHYSIC_VOLTAGE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].min                        = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].max                        = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_STEP - CCS_BEGIN].def                        = 0;
  // Режим оптимизации напряжения первый цикл после запуска
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].id               = CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].min              = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].max              = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_REACTION - CCS_BEGIN].def              = 0;
  // Режим оптимизации напряжения периодичность оптимизации
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].id                = CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].min               = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].max               = 0;
  parameters_[CCS_RGM_OPTIM_VOLTAGE_DELAY_RESTART - CCS_BEGIN].def               = 0;
  // Режим прокачки газа
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].id                              = CCS_RGM_PUMP_GAS_MODE;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].min                             = 0;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].max                             = 0;
  parameters_[CCS_RGM_PUMP_GAS_MODE - CCS_BEGIN].def                             = 0;
  // Режим прокачки газа
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].id                          = CCS_RGM_PUMP_GAS_SETPOINT;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].min                         = 0;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].max                         = 0;
  parameters_[CCS_RGM_PUMP_GAS_SETPOINT - CCS_BEGIN].def                         = 0;
  // Режим прокачки газа
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].id                    = CCS_RGM_PUMP_GAS_DELAY_REACTION;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].physic                = PHYSIC_TIME;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].min                   = 0;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].max                   = 0;
  parameters_[CCS_RGM_PUMP_GAS_DELAY_REACTION - CCS_BEGIN].def                   = 0;
  // Режим прокачки газа
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].id                     = CCS_RGM_PUMP_GAS_LIMIT_RESTART;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].max                    = 0;
  parameters_[CCS_RGM_PUMP_GAS_LIMIT_RESTART - CCS_BEGIN].def                    = 0;
  // Режим ограничения тока
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].id                         = CCS_RGM_CURRENT_LIMIT_MODE;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].physic                     = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].min                        = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].max                        = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_MODE - CCS_BEGIN].def                        = 0;
  // Режим ограничения тока уставка
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].id                     = CCS_RGM_CURRENT_LIMIT_SETPOINT;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].physic                 = PHYSIC_PERCENT;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].max                    = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_SETPOINT - CCS_BEGIN].def                    = 0;
  // Режим ограничения тока шаг снижения частоты
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].id                     = CCS_RGM_CURRENT_LIMIT_STEPDOWN;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].physic                 = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].min                    = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].max                    = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_STEPDOWN - CCS_BEGIN].def                    = 0;
  // Режим ограничения тока задержка срабатывания
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].id               = CCS_RGM_CURRENT_LIMIT_DELAY_REACTION;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].access           = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].operation        = OPERATION_WRITE;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].physic           = PHYSIC_TIME;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].validity         = VALIDITY_OK;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].value.float_t    = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].min              = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].max              = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_REACTION - CCS_BEGIN].def              = 0;
  // Режим ограничения тока задержка АПВ
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].id                = CCS_RGM_CURRENT_LIMIT_DELAY_RESTART;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].physic            = PHYSIC_TIME;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].value.float_t     = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].min               = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].max               = 0;
  parameters_[CCS_RGM_CURRENT_LIMIT_DELAY_RESTART - CCS_BEGIN].def               = 0;
  // Коэффициент корректировки входного напряжения
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].id                              = CCS_COEF_VOLTAGE_IN_A;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].access                          = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].min                             = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].max                             = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_A - CCS_BEGIN].def                             = 0;
  // 
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].id                              = CCS_COEF_VOLTAGE_IN_B;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].access                          = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].min                             = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].max                             = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_B - CCS_BEGIN].def                             = 0;
  // 
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].id                              = CCS_COEF_VOLTAGE_IN_C;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].access                          = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].min                             = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].max                             = 0;
  parameters_[CCS_COEF_VOLTAGE_IN_C - CCS_BEGIN].def                             = 0;
  // Коэффициент корректировки выходного тока фаза U
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].id                             = CCS_COEF_OUT_CURRENT_1;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].access                         = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].min                            = 0;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].max                            = 0;
  parameters_[CCS_COEF_OUT_CURRENT_1 - CCS_BEGIN].def                            = 0;
  // Коэффициент корректировки выходного тока фаза V
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].id                             = CCS_COEF_OUT_CURRENT_2;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].access                         = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].min                            = 0;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].max                            = 0;
  parameters_[CCS_COEF_OUT_CURRENT_2 - CCS_BEGIN].def                            = 0;
  // Коэффициент корректировки выходного тока фаза W
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].id                             = CCS_COEF_OUT_CURRENT_3;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].access                         = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].min                            = 0;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].max                            = 0;
  parameters_[CCS_COEF_OUT_CURRENT_3 - CCS_BEGIN].def                            = 0;
  // Коэффициент корректировки сопротивления изоляции
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].id                      = CCS_COEF_RESISTANCE_ISOLATION;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].access                  = ACCESS_TECHNOLOG;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].physic                  = PHYSIC_RESISTANCE;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].min                     = 0;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].max                     = 0;
  parameters_[CCS_COEF_RESISTANCE_ISOLATION - CCS_BEGIN].def                     = 0;
  // Номер ЦДНГ
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].id                                    = CCS_NUMBER_CDNG;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].validity                              = VALIDITY_OK;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].value.float_t                         = 0;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].min                                   = 0;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].max                                   = 0;
  parameters_[CCS_NUMBER_CDNG - CCS_BEGIN].def                                   = 0;
  // Номер куста
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].id                                    = CCS_NUMBER_BUSH;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].validity                              = VALIDITY_OK;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].value.float_t                         = 0;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].min                                   = 0;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].max                                   = 0;
  parameters_[CCS_NUMBER_BUSH - CCS_BEGIN].def                                   = 0;
  // Номер скважины
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].id                                    = CCS_NUMBER_WELL;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].validity                              = VALIDITY_OK;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].value.float_t                         = 0;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].min                                   = 0;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].max                                   = 0;
  parameters_[CCS_NUMBER_WELL - CCS_BEGIN].def                                   = 0;
  // Количество пусков
  parameters_[CCS_COUNT_START - CCS_BEGIN].id                                    = CCS_COUNT_START;
  parameters_[CCS_COUNT_START - CCS_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[CCS_COUNT_START - CCS_BEGIN].operation                             = OPERATION_READ;
  parameters_[CCS_COUNT_START - CCS_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[CCS_COUNT_START - CCS_BEGIN].validity                              = VALIDITY_OK;
  parameters_[CCS_COUNT_START - CCS_BEGIN].value.float_t                         = 0;
  parameters_[CCS_COUNT_START - CCS_BEGIN].min                                   = 0;
  parameters_[CCS_COUNT_START - CCS_BEGIN].max                                   = 0;
  parameters_[CCS_COUNT_START - CCS_BEGIN].def                                   = 0;
  // Количество отключений по перезрузу
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].id                       = CCS_PROT_OVERLOAD_COUNT_STOP;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].operation                = OPERATION_READ;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].value.float_t            = 0;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].min                      = 0;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].max                      = 0;
  parameters_[CCS_PROT_OVERLOAD_COUNT_STOP - CCS_BEGIN].def                      = 0;
  // Количество отключений по недогрузу
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].id                      = CCS_PROT_UNDERLOAD_COUNT_STOP;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].operation               = OPERATION_READ;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].value.float_t           = 0;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].min                     = 0;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].max                     = 0;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_STOP - CCS_BEGIN].def                     = 0;
  // Количество отключений по другим защитам
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].id                          = CCS_PROT_OTHER_COUNT_STOP;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].operation                   = OPERATION_READ;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].physic                      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].min                         = 0;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].max                         = 0;
  parameters_[CCS_PROT_OTHER_COUNT_STOP - CCS_BEGIN].def                         = 0;
  // Количество АПВ после остановов по напряжению
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].id                     = CCS_PROT_VOLTAGE_COUNT_RESTART;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].operation              = OPERATION_READ;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].value.float_t          = 0;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].min                    = 0;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].max                    = 0;
  parameters_[CCS_PROT_VOLTAGE_COUNT_RESTART - CCS_BEGIN].def                    = 0;
  // Количество АПВ после остановов по перегрузу
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].id                    = CCS_PROT_OVERLOAD_COUNT_RESTART;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].operation             = OPERATION_READ;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].max                   = 0;
  parameters_[CCS_PROT_OVERLOAD_COUNT_RESTART - CCS_BEGIN].def                   = 0;
  // Количество АПВ после остановов по недогрузу
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].id                   = CCS_PROT_UNDERLOAD_COUNT_RESTART;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].operation            = OPERATION_READ;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].value.float_t        = 0;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].min                  = 0;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].max                  = 0;
  parameters_[CCS_PROT_UNDERLOAD_COUNT_RESTART - CCS_BEGIN].def                  = 0;
  // Количество АПВ после остановов по дисбалансу токов
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].id     = CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].operation = OPERATION_READ;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].min    = 0;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].max    = 0;
  parameters_[CCS_PROT_IMBALANCE_CURRENT_MOTOR_COUNT_RESTART - CCS_BEGIN].def    = 0;
  // Общее время работы СУ
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].id                          = CCS_GENERAL_RUN_DATE_TIME;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].operation                   = OPERATION_READ;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].physic                      = PHYSIC_TIME;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].min                         = 0;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].max                         = 0;
  parameters_[CCS_GENERAL_RUN_DATE_TIME - CCS_BEGIN].def                         = 0;
  // Общее время простоя СУ
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].id                         = CCS_GENERAL_STOP_DATE_TIME;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].operation                  = OPERATION_READ;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].physic                     = PHYSIC_TIME;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].value.float_t              = 0;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].min                        = 0;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].max                        = 0;
  parameters_[CCS_GENERAL_STOP_DATE_TIME - CCS_BEGIN].def                        = 0;
  // Текущая наработка
  parameters_[CCS_RUN_TIME - CCS_BEGIN].id                                       = CCS_RUN_TIME;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].operation                                = OPERATION_READ;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].validity                                 = VALIDITY_OK;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].value.float_t                            = 0;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].min                                      = 0;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].max                                      = 0;
  parameters_[CCS_RUN_TIME - CCS_BEGIN].def                                      = 0;
  // Текущий простой
  parameters_[CCS_STOP_TIME - CCS_BEGIN].id                                      = CCS_STOP_TIME;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].operation                               = OPERATION_READ;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].physic                                  = PHYSIC_TIME;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].value.float_t                           = 0;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].min                                     = 0;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].max                                     = 0;
  parameters_[CCS_STOP_TIME - CCS_BEGIN].def                                     = 0;
  // Время до изменения режима
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].id                                      = CCS_RGM_TIMER;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].operation                               = OPERATION_READ;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].physic                                  = PHYSIC_TIME;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].value.float_t                           = 0;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].min                                     = 0;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].max                                     = 0;
  parameters_[CCS_RGM_TIMER - CCS_BEGIN].def                                     = 0;
  // Время до запуска
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].id                                  = CCS_RESTART_TIMER;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].operation                           = OPERATION_READ;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].physic                              = PHYSIC_TIME;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_RESTART_TIMER - CCS_BEGIN].def                                 = 0;
  // Дата время последнего включения
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].id                             = CCS_LAST_RUN_DATE_TIME;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].operation                      = OPERATION_READ;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].physic                         = PHYSIC_DATE_TIME;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].min                            = 0;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].max                            = 4294967296;
  parameters_[CCS_LAST_RUN_DATE_TIME - CCS_BEGIN].def                            = 0;
  // Причина последнего пуска
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].id                                = CCS_LAST_RUN_REASON;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].operation                         = OPERATION_READ;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].min                               = 0;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].max                               = 0;
  parameters_[CCS_LAST_RUN_REASON - CCS_BEGIN].def                               = 0;
  // Дата время последнего отключения
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].id                            = CCS_LAST_STOP_DATE_TIME;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].operation                     = OPERATION_READ;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].physic                        = PHYSIC_DATE_TIME;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].min                           = 0;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].max                           = 4294967296;
  parameters_[CCS_LAST_STOP_DATE_TIME - CCS_BEGIN].def                           = 0;
  // Причина носледнего отключения
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].id                               = CCS_LAST_STOP_REASON;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].operation                        = OPERATION_READ;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].min                              = 0;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].max                              = 0;
  parameters_[CCS_LAST_STOP_REASON - CCS_BEGIN].def                              = 0;
  // Дата время изменения частоты
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].id                    = CCS_PREVIEW_FREQUENCY_DATE_TIME;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].operation             = OPERATION_READ;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].physic                = PHYSIC_DATE_TIME;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].min                   = 0;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].max                   = 4294967296;
  parameters_[CCS_PREVIEW_FREQUENCY_DATE_TIME - CCS_BEGIN].def                   = 0;
  // Предпоследняя частота
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].id                              = CCS_PREVIEW_FREQUENCY;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].operation                       = OPERATION_READ;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].physic                          = PHYSIC_FREQUENCY;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].min                             = 0;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].max                             = 0;
  parameters_[CCS_PREVIEW_FREQUENCY - CCS_BEGIN].def                             = 0;
  // Тип КСУ
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].id                                       = CCS_TYPE_CCS;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].operation                                = OPERATION_READ;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].validity                                 = VALIDITY_OK;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].value.float_t                            = 0;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].min                                      = 0;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].max                                      = 0;
  parameters_[CCS_TYPE_CCS - CCS_BEGIN].def                                      = 0;
  // Код производителя КСУ
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].id                            = CCS_CODE_PRODUCTION_CCS;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].operation                     = OPERATION_READ;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].physic                        = PHYSIC_NUMERIC;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].min                           = 0;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].max                           = 0;
  parameters_[CCS_CODE_PRODUCTION_CCS - CCS_BEGIN].def                           = 0;
  // Заводской номер КСУ
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].id                             = CCS_NUM_PRODUCTION_CCS;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].operation                      = OPERATION_READ;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].min                            = 0;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].max                            = 0;
  parameters_[CCS_NUM_PRODUCTION_CCS - CCS_BEGIN].def                            = 0;
  // Версия ПО КСУ
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].id                                 = CCS_VERSION_SW_CCS;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].operation                          = OPERATION_READ;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].min                                = 0;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].max                                = 0;
  parameters_[CCS_VERSION_SW_CCS - CCS_BEGIN].def                                = 0;
  // Версия ПО МС
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].id                                  = CCS_VERSION_SW_MS;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].operation                           = OPERATION_READ;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_VERSION_SW_MS - CCS_BEGIN].def                                 = 0;
  // Версия ПО ПЧ
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].id                                 = CCS_VERSION_SW_VSD;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].operation                          = OPERATION_READ;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].min                                = 0;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].max                                = 0;
  parameters_[CCS_VERSION_SW_VSD - CCS_BEGIN].def                                = 0;
  // Дата изготовления КСУ
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].id                            = CCS_DATE_PRODUCTION_CCS;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].operation                     = OPERATION_READ;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].physic                        = PHYSIC_DATE_TIME;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].min                           = 0;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].max                           = 4294967296;
  parameters_[CCS_DATE_PRODUCTION_CCS - CCS_BEGIN].def                           = 0;
  // Дата установки ПО КСУ
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].id                            = CCS_DATE_INSTALL_SW_CCS;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].operation                     = OPERATION_READ;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].physic                        = PHYSIC_DATE_TIME;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].min                           = 0;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].max                           = 4294967296;
  parameters_[CCS_DATE_INSTALL_SW_CCS - CCS_BEGIN].def                           = 0;
  // ДАта генерации ПО КСУ
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].id                             = CCS_DATE_CREATE_SW_CCS;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].operation                      = OPERATION_READ;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].physic                         = PHYSIC_DATE_TIME;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].min                            = 0;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].max                            = 4294967296;
  parameters_[CCS_DATE_CREATE_SW_CCS - CCS_BEGIN].def                            = 0;
  // Дата установки ПО ПЧ
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].id                            = CCS_DATE_INSTALL_SW_VSD;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].operation                     = OPERATION_READ;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].physic                        = PHYSIC_DATE_TIME;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].min                           = 0;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].max                           = 4294967296;
  parameters_[CCS_DATE_INSTALL_SW_VSD - CCS_BEGIN].def                           = 0;
  // Тип СУ
  parameters_[CCS_TYPE_SU - CCS_BEGIN].id                                        = CCS_TYPE_SU;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].validity                                  = VALIDITY_OK;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].value.float_t                             = 0;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].min                                       = 0;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].max                                       = 0;
  parameters_[CCS_TYPE_SU - CCS_BEGIN].def                                       = 0;
  // Код завода изготовителя СУ
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].id                             = CCS_CODE_PRODUCTION_SU;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].min                            = 0;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].max                            = 0;
  parameters_[CCS_CODE_PRODUCTION_SU - CCS_BEGIN].def                            = 0;
  // Заводской номер СУ
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].id                              = CCS_NUM_PRODUCTION_SU;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].min                             = 0;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].max                             = 0;
  parameters_[CCS_NUM_PRODUCTION_SU - CCS_BEGIN].def                             = 0;
  // Дата изготовления СУ
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].id                             = CCS_DATE_PRODUCTION_SU;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].physic                         = PHYSIC_DATE_TIME;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].value.float_t                  = 0;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].min                            = 0;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].max                            = 4294967296;
  parameters_[CCS_DATE_PRODUCTION_SU - CCS_BEGIN].def                            = 0;
  // Примечание 1
  parameters_[CCS_NOTE_1 - CCS_BEGIN].id                                         = CCS_NOTE_1;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_1 - CCS_BEGIN].def                                        = 0;
  // Примечание 2
  parameters_[CCS_NOTE_2 - CCS_BEGIN].id                                         = CCS_NOTE_2;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_2 - CCS_BEGIN].def                                        = 0;
  // Примечание 3
  parameters_[CCS_NOTE_3 - CCS_BEGIN].id                                         = CCS_NOTE_3;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_3 - CCS_BEGIN].def                                        = 0;
  // Примечание 4
  parameters_[CCS_NOTE_4 - CCS_BEGIN].id                                         = CCS_NOTE_4;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_4 - CCS_BEGIN].def                                        = 0;
  // Примечание 5
  parameters_[CCS_NOTE_5 - CCS_BEGIN].id                                         = CCS_NOTE_5;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_5 - CCS_BEGIN].def                                        = 0;
  // Примечание 6
  parameters_[CCS_NOTE_6 - CCS_BEGIN].id                                         = CCS_NOTE_6;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_6 - CCS_BEGIN].def                                        = 0;
  // Примечание 7
  parameters_[CCS_NOTE_7 - CCS_BEGIN].id                                         = CCS_NOTE_7;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_7 - CCS_BEGIN].def                                        = 0;
  // Примечание 8
  parameters_[CCS_NOTE_8 - CCS_BEGIN].id                                         = CCS_NOTE_8;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_8 - CCS_BEGIN].def                                        = 0;
  // Примечание 9
  parameters_[CCS_NOTE_9 - CCS_BEGIN].id                                         = CCS_NOTE_9;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].validity                                   = VALIDITY_OK;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].value.float_t                              = 0;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].min                                        = 0;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].max                                        = 0;
  parameters_[CCS_NOTE_9 - CCS_BEGIN].def                                        = 0;
  // Примечание 10
  parameters_[CCS_NOTE_10 - CCS_BEGIN].id                                        = CCS_NOTE_10;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].validity                                  = VALIDITY_OK;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].value.float_t                             = 0;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].min                                       = 0;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].max                                       = 0;
  parameters_[CCS_NOTE_10 - CCS_BEGIN].def                                       = 0;
  // Дата время в формате POSIX
  parameters_[CCS_DATE_TIME - CCS_BEGIN].id                                      = CCS_DATE_TIME;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].operation                               = OPERATION_READ;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].physic                                  = PHYSIC_DATE_TIME;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].value.float_t                           = 0;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].min                                     = 0;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].max                                     = 4294967296;
  parameters_[CCS_DATE_TIME - CCS_BEGIN].def                                     = 0;
  // Дата время год
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].id                                 = CCS_DATE_TIME_YEAR;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].min                                = 0;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].max                                = 0;
  parameters_[CCS_DATE_TIME_YEAR - CCS_BEGIN].def                                = 0;
  // Дата время месяц
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].id                                = CCS_DATE_TIME_MONTH;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].min                               = 0;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].max                               = 0;
  parameters_[CCS_DATE_TIME_MONTH - CCS_BEGIN].def                               = 0;
  // Дата время дни
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].id                                  = CCS_DATE_TIME_DAY;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_DATE_TIME_DAY - CCS_BEGIN].def                                 = 0;
  // Дата время часы
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].id                                 = CCS_DATE_TIME_HOUR;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].min                                = 0;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].max                                = 0;
  parameters_[CCS_DATE_TIME_HOUR - CCS_BEGIN].def                                = 0;
  // Дата время минуты
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].id                                  = CCS_DATE_TIME_MIN;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_DATE_TIME_MIN - CCS_BEGIN].def                                 = 0;
  // Дата время секунды
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].id                                  = CCS_DATE_TIME_SEC;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_DATE_TIME_SEC - CCS_BEGIN].def                                 = 0;
  // Дата время мс
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].id                                   = CCS_DATE_TIME_MS;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].validity                             = VALIDITY_OK;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].value.float_t                        = 0;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].min                                  = 0;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].max                                  = 0;
  parameters_[CCS_DATE_TIME_MS - CCS_BEGIN].def                                  = 0;
  // Язык интерфейса
  parameters_[CCS_LANGUAGE - CCS_BEGIN].id                                       = CCS_LANGUAGE;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].validity                                 = VALIDITY_OK;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].value.float_t                            = 0;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].min                                      = 0;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].max                                      = 0;
  parameters_[CCS_LANGUAGE - CCS_BEGIN].def                                      = 0;
  // Включение системы паролей
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].id                                = CCS_PASSWORD_ENEBLE;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].validity                          = VALIDITY_OK;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].value.float_t                     = 0;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].min                               = 0;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].max                               = 0;
  parameters_[CCS_PASSWORD_ENEBLE - CCS_BEGIN].def                               = 0;
  // Текущий уровень доступа
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].id                                 = CCS_PASSWORD_LEVEL;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].min                                = 0;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].max                                = 0;
  parameters_[CCS_PASSWORD_LEVEL - CCS_BEGIN].def                                = 0;
  // Пароль 1 уровня
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].id                               = CCS_PASSWORD_LEVEL_1;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].min                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].max                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_1 - CCS_BEGIN].def                              = 0;
  // Пароль 2 уровня
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].id                               = CCS_PASSWORD_LEVEL_2;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].access                           = ACCESS_TECHNOLOG;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].min                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].max                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_2 - CCS_BEGIN].def                              = 0;
  // Пароль 3 уровня
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].id                               = CCS_PASSWORD_LEVEL_3;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].access                           = ACCESS_SERVICE;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].min                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].max                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_3 - CCS_BEGIN].def                              = 0;
  // Пароль 4 уровня
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].id                               = CCS_PASSWORD_LEVEL_4;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].access                           = ACCESS_GOD;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].min                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].max                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_4 - CCS_BEGIN].def                              = 0;
  // Пароль 5 уровня
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].id                               = CCS_PASSWORD_LEVEL_5;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].min                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].max                              = 0;
  parameters_[CCS_PASSWORD_LEVEL_5 - CCS_BEGIN].def                              = 0;
  // Протокол телемеханики
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].id                                     = CCS_SCADA_TYPE;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].operation                              = 0;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].physic                                 = 0;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_SCADA_TYPE - CCS_BEGIN].def                                    = 0;
  // Версия протокола телемеханики
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].id                                     = CCS_SCADA_CODE;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].operation                              = OPERATION_WRITE;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_SCADA_CODE - CCS_BEGIN].def                                    = 0;
  // Адресу СУ в телемеханике
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].id                                  = CCS_SCADA_ADDRESS;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_SCADA_ADDRESS - CCS_BEGIN].def                                 = 0;
  // Скорость опроса в телемеханике
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].id                                 = CCS_SCADA_BYTERATE;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].min                                = 0;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].max                                = 0;
  parameters_[CCS_SCADA_BYTERATE - CCS_BEGIN].def                                = 0;
  // Чётность в телемеханике
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].id                                   = CCS_SCADA_PARITY;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].validity                             = VALIDITY_OK;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].value.float_t                        = 0;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].min                                  = 0;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].max                                  = 0;
  parameters_[CCS_SCADA_PARITY - CCS_BEGIN].def                                  = 0;
  // Количество стоп-бит в телемеханике
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].id                                  = CCS_SCADA_STOPBIT;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_SCADA_STOPBIT - CCS_BEGIN].def                                 = 0;
  // Задержка ответа в телемеханкие
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].id                                    = CCS_SCADA_DELAY;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].physic                                = PHYSIC_TIME;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].validity                              = VALIDITY_OK;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].value.float_t                         = 0;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].min                                   = 0;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].max                                   = 0;
  parameters_[CCS_SCADA_DELAY - CCS_BEGIN].def                                   = 0;
  // Единицы измерения давления
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].id                                  = CCS_UNIT_PRESSURE;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_UNIT_PRESSURE - CCS_BEGIN].def                                 = 0;
  // Единицы измерения давления
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].id                               = CCS_UNIT_TEMPERATURE;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].validity                         = VALIDITY_OK;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].value.float_t                    = 0;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].min                              = 0;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].max                              = 0;
  parameters_[CCS_UNIT_TEMPERATURE - CCS_BEGIN].def                              = 0;
  // Единицы измерения вибрации
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].id                                 = CCS_UNIT_VIBRATION;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].min                                = 0;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].max                                = 0;
  parameters_[CCS_UNIT_VIBRATION - CCS_BEGIN].def                                = 0;
  // Единицы измерения длины
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].id                                    = CCS_UNIT_LENGHT;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].validity                              = VALIDITY_OK;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].value.float_t                         = 0;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].min                                   = 0;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].max                                   = 0;
  parameters_[CCS_UNIT_LENGHT - CCS_BEGIN].def                                   = 0;
  // Единицы измерения расхода
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].id                                      = CCS_UNIT_FLOW;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].physic                                  = PHYSIC_NUMERIC;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].value.float_t                           = 0;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].min                                     = 0;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].max                                     = 0;
  parameters_[CCS_UNIT_FLOW - CCS_BEGIN].def                                     = 0;
  // Единицы измерения площади
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].id                                     = CCS_UNIT_PLACE;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].operation                              = OPERATION_WRITE;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].validity                               = VALIDITY_OK;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].value.float_t                          = 0;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].min                                    = 0;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].max                                    = 0;
  parameters_[CCS_UNIT_PLACE - CCS_BEGIN].def                                    = 0;
  // Состояние ЧРП
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].id                                  = CCS_VSD_CONDITION;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].operation                           = 0;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].physic                              = 0;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].validity                            = VALIDITY_OK;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].value.float_t                       = 0;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].min                                 = 0;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].max                                 = 0;
  parameters_[CCS_VSD_CONDITION - CCS_BEGIN].def                                 = 0;
  // Команда остановки
  parameters_[CCS_CMD_STOP - CCS_BEGIN].id                                       = CCS_CMD_STOP;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].validity                                 = VALIDITY_OK;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].value.float_t                            = 0.0;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].min                                      = 0.0;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].max                                      = 1.0;
  parameters_[CCS_CMD_STOP - CCS_BEGIN].def                                      = 0.0;
  // Команда запуска
  parameters_[CCS_CMD_START - CCS_BEGIN].id                                      = CCS_CMD_START;
  parameters_[CCS_CMD_START - CCS_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[CCS_CMD_START - CCS_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[CCS_CMD_START - CCS_BEGIN].physic                                  = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_START - CCS_BEGIN].validity                                = VALIDITY_OK;
  parameters_[CCS_CMD_START - CCS_BEGIN].value.float_t                           = 0.0;
  parameters_[CCS_CMD_START - CCS_BEGIN].min                                     = 0.0;
  parameters_[CCS_CMD_START - CCS_BEGIN].max                                     = 1.0;
  parameters_[CCS_CMD_START - CCS_BEGIN].def                                     = 0.0;
  // 
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].id                                   = CCS_CMD_LOG_COPY;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].validity                             = VALIDITY_OK;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].value.float_t                        = 0.0;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].min                                  = 0.0;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].max                                  = 1.0;
  parameters_[CCS_CMD_LOG_COPY - CCS_BEGIN].def                                  = 0.0;
  // 
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].id                                 = CCS_CMD_LOG_DELETE;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].value.float_t                      = 0.0;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].min                                = 0.0;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].max                                = 1.0;
  parameters_[CCS_CMD_LOG_DELETE - CCS_BEGIN].def                                = 0.0;
  // 
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].id                         = CCS_CMD_SERVICE_LOG_DELETE;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].physic                     = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].value.float_t              = 0.0;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].min                        = 0.0;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].max                        = 1.0;
  parameters_[CCS_CMD_SERVICE_LOG_DELETE - CCS_BEGIN].def                        = 0.0;
  // 
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].id                              = CCS_CMD_DHS_TYPE_AUTO;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].value.float_t                   = 0.0;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].min                             = 0.0;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].max                             = 1.0;
  parameters_[CCS_CMD_DHS_TYPE_AUTO - CCS_BEGIN].def                             = 0.0;
  // 
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].id                        = CCS_CMD_PROT_ALL_UNBLOCKING;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].physic                    = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].value.float_t             = 0.0;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].min                       = 0.0;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].max                       = 1.0;
  parameters_[CCS_CMD_PROT_ALL_UNBLOCKING - CCS_BEGIN].def                       = 0.0;
  // 
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].id                    = CCS_CMD_PROT_ALL_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].min                   = 0.0;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].max                   = 1.0;
  parameters_[CCS_CMD_PROT_ALL_SETPOINT_RESET - CCS_BEGIN].def                   = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].id                     = CCS_CMD_PROT_SUPPLY_UNBLOCKING;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].value.float_t          = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].min                    = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].max                    = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_UNBLOCKING - CCS_BEGIN].def                    = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].id                 = CCS_CMD_PROT_SUPPLY_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].physic             = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].value.float_t      = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].max                = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_SETPOINT_RESET - CCS_BEGIN].def                = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].id     = CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].min    = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].max    = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_OVERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].def    = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].id    = CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].min   = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].max   = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_UNDERVOLTAGE_SETPOINT_RESET - CCS_BEGIN].def   = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].id = CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].min = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].max = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_VOLTAGE_SETPOINT_RESET - CCS_BEGIN].def = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].id = CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].min = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].max = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].def = 0.0;
  // 
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].id  = CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].min = 0.0;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].max = 1.0;
  parameters_[CCS_CMD_PROT_SUPPLY_PHASE_ROTATION_SETPOINT_RESET - CCS_BEGIN].def = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].id                      = CCS_CMD_PROT_MOTOR_UNBLOCKING;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].value.float_t           = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].max                     = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_UNBLOCKING - CCS_BEGIN].def                     = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].id                  = CCS_CMD_PROT_MOTOR_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].value.float_t       = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].max                 = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_SETPOINT_RESET - CCS_BEGIN].def                 = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].id         = CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].physic     = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].max        = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_OVERLOAD_SETPOINT_RESET - CCS_BEGIN].def        = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].id        = CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].physic    = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].min       = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].max       = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_UNDERLOAD_SETPOINT_RESET - CCS_BEGIN].def       = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].id = CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].min = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].max = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_IMBALANCE_CURRENT_SETPOINT_RESET - CCS_BEGIN].def = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].id            = CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].physic        = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].min           = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].max           = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_ASYNC_SETPOINT_RESET - CCS_BEGIN].def           = 0.0;
  // 
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].id      = CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].physic  = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].min     = 0.0;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].max     = 1.0;
  parameters_[CCS_CMD_PROT_MOTOR_OUT_OF_SYNC_SETPOINT_RESET - CCS_BEGIN].def     = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].id                        = CCS_CMD_PROT_DHS_UNBLOCKING;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].physic                    = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].validity                  = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].value.float_t             = 0.0;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].min                       = 0.0;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].max                       = 1.0;
  parameters_[CCS_CMD_PROT_DHS_UNBLOCKING - CCS_BEGIN].def                       = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].id                    = CCS_CMD_PROT_DHS_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].min                   = 0.0;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].max                   = 1.0;
  parameters_[CCS_CMD_PROT_DHS_SETPOINT_RESET - CCS_BEGIN].def                   = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].id    = CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].min   = 0.0;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].max   = 1.0;
  parameters_[CCS_CMD_PROT_DHS_PRESSURE_INTAKE_SETPOINT_RESET - CCS_BEGIN].def   = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].id  = CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].min = 0.0;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].max = 1.0;
  parameters_[CCS_CMD_PROT_DHS_TEMPERATURE_MOTOR_SETPOINT_RESET - CCS_BEGIN].def = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].id         = CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].access     = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].operation  = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].physic     = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].validity   = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].min        = 0.0;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].max        = 1.0;
  parameters_[CCS_CMD_PROT_DHS_RESISTANCE_SETPOINT_RESET - CCS_BEGIN].def        = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].id          = CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].physic      = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].min         = 0.0;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].max         = 1.0;
  parameters_[CCS_CMD_PROT_DHS_VIBRATION_SETPOINT_RESET - CCS_BEGIN].def         = 0.0;
  // 
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].id                     = CCS_CMD_PROT_AI_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].value.float_t          = 0.0;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].min                    = 0.0;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].max                    = 1.0;
  parameters_[CCS_CMD_PROT_AI_SETPOINT_RESET - CCS_BEGIN].def                    = 0.0;
  // 
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_AI_1_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_AI_1_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_AI_2_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_AI_2_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_AI_3_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_AI_3_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_AI_4_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_AI_4_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].id                     = CCS_CMD_PROT_DI_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].value.float_t          = 0.0;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].min                    = 0.0;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].max                    = 1.0;
  parameters_[CCS_CMD_PROT_DI_SETPOINT_RESET - CCS_BEGIN].def                    = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_DI_1_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_DI_1_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_DI_2_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_DI_2_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_DI_3_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_DI_3_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].id                   = CCS_CMD_PROT_DI_4_SETPOINT_RESET;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].access               = ACCESS_OPERATOR;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].operation            = OPERATION_WRITE;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].physic               = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].validity             = VALIDITY_OK;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].value.float_t        = 0.0;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].min                  = 0.0;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].max                  = 1.0;
  parameters_[CCS_CMD_PROT_DI_4_SETPOINT_RESET - CCS_BEGIN].def                  = 0.0;
  // 
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].id                              = CCS_CMD_RGM_MODE_SAVE;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].value.float_t                   = 0.0;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].min                             = 0.0;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].max                             = 1.0;
  parameters_[CCS_CMD_RGM_MODE_SAVE - CCS_BEGIN].def                             = 0.0;
  // 
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].id                          = CCS_CMD_COUNTER_ALL_RESET;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].physic                      = PHYSIC_NUMERIC;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].max                         = 1.0;
  parameters_[CCS_CMD_COUNTER_ALL_RESET - CCS_BEGIN].def                         = 0.0;
  // 
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].id                              = CCS_VOLTAGE_TRANS_OUT;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].operation                       = OPERATION_READ;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].physic                          = PHYSIC_VOLTAGE;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].min                             = 0;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].max                             = 0;
  parameters_[CCS_VOLTAGE_TRANS_OUT - CCS_BEGIN].def                             = 0;
  // 
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].id                                 = CCS_CONDITION_FLAG;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].validity                           = VALIDITY_OK;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].value.float_t                      = 0;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].min                                = 0;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].max                                = 0;
  parameters_[CCS_CONDITION_FLAG - CCS_BEGIN].def                                = 0;
  // Причина последнего пуска - регистр временного хранения значения
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].id                            = CCS_LAST_RUN_REASON_TMP;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].min                           = 0;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].max                           = 0;
  parameters_[CCS_LAST_RUN_REASON_TMP - CCS_BEGIN].def                           = 0;
  // Наличие хотя бы одного запрещающего параметра
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].id                                   = CCS_PROT_PREVENT;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].operation                            = 0;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].physic                               = 0;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].validity                             = VALIDITY_OK;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].value.float_t                        = 0;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].min                                  = 0;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].max                                  = 0;
  parameters_[CCS_PROT_PREVENT - CCS_BEGIN].def                                  = 0;
  // Уставка ВРП (время разновременного пуска)
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].id                          = CCS_TIMER_DIFFERENT_START;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].operation                   = 0;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].physic                      = 0;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].value.float_t               = 0;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].min                         = 0;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].max                         = 0;
  parameters_[CCS_TIMER_DIFFERENT_START - CCS_BEGIN].def                         = 0;
  // Защита ЗСП: Прогрессивная задержка АПВ
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].id     = CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].physic = PHYSIC_TIME;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].value.float_t = 7200.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].min    = 60.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].max    = 3599940.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_DELAY - CCS_BEGIN].def    = 7200.0;
  // Защита ЗСП: Счётчик АПВ для вычисления прогрессивной задержки
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].id     = CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].min    = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].max    = 1000.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_COUNT - CCS_BEGIN].def    = 0.0;
  // 
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].id             = CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].access         = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].operation      = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].physic         = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].validity       = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].value.float_t  = 0.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].min            = 0.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].max            = 1.0;
  parameters_[CCS_PROT_SUPPLY_OVERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].def            = 0.0;
  // 
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].id            = CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].physic        = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].min           = 0.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].max           = 1.0;
  parameters_[CCS_PROT_SUPPLY_UNDERVOLTAGE_BLOCK_FLAG - CCS_BEGIN].def           = 0.0;
  // 
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].id       = CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].physic   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].max      = 1.0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_VOLTAGE_BLOCK_FLAG - CCS_BEGIN].def      = 0.0;
  // 
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].id       = CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].physic   = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].min      = 0.0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].max      = 1.0;
  parameters_[CCS_PROT_SUPPLY_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].def      = 0.0;
  // 
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].id          = CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].physic      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].min         = 0.0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].max         = 1.0;
  parameters_[CCS_PROT_SUPPLY_PHASE_ROTATION_BLOCK_FLAG - CCS_BEGIN].def         = 0.0;
  // 
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].id                 = CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].physic             = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].value.float_t      = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].max                = 1.0;
  parameters_[CCS_PROT_MOTOR_OVERLOAD_BLOCK_FLAG - CCS_BEGIN].def                = 0.0;
  // 
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].id                = CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].physic            = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].value.float_t     = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].max               = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_BLOCK_FLAG - CCS_BEGIN].def               = 0.0;
  // 
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].id                  = CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].value.float_t       = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].max                 = 1.0;
  parameters_[CCS_PROT_MOTOR_CURRENT_BLOCK_FLAG - CCS_BEGIN].def                 = 0.0;
  // 
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].id        = CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].physic    = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].min       = 0.0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].max       = 1.0;
  parameters_[CCS_PROT_MOTOR_IMBALANCE_CURRENT_BLOCK_FLAG - CCS_BEGIN].def       = 0.0;
  // 
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].id                    = CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].value.float_t         = 0.0;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].min                   = 0.0;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].max                   = 1.0;
  parameters_[CCS_PROT_MOTOR_ASYNC_BLOCK_FLAG - CCS_BEGIN].def                   = 0.0;
  // 
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].id              = CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].access          = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].operation       = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].physic          = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].validity        = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].value.float_t   = 0.0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].min             = 0.0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].max             = 1.0;
  parameters_[CCS_PROT_MOTOR_OUT_OF_SYNC_BLOCK_FLAG - CCS_BEGIN].def             = 0.0;
  // 
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].id            = CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].physic        = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].min           = 0.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].max           = 1.0;
  parameters_[CCS_PROT_DHS_PRESSURE_INTAKE_BLOCK_FLAG - CCS_BEGIN].def           = 0.0;
  // 
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].id          = CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].access      = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].operation   = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].physic      = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].validity    = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].min         = 0.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].max         = 1.0;
  parameters_[CCS_PROT_DHS_TEMPERATURE_MOTOR_BLOCK_FLAG - CCS_BEGIN].def         = 0.0;
  // 
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].id                 = CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].access             = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].operation          = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].physic             = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].validity           = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].value.float_t      = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].min                = 0.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].max                = 1.0;
  parameters_[CCS_PROT_DHS_RESISTANCE_BLOCK_FLAG - CCS_BEGIN].def                = 0.0;
  // 
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].id                  = CCS_PROT_DHS_VIBRATION_BLOCK_FLAG;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].operation           = OPERATION_WRITE;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].physic              = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].validity            = VALIDITY_OK;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].value.float_t       = 0.0;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].min                 = 0.0;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].max                 = 1.0;
  parameters_[CCS_PROT_DHS_VIBRATION_BLOCK_FLAG - CCS_BEGIN].def                 = 0.0;
  // 
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_AI_1_BLOCK_FLAG;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_AI_1_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_AI_2_BLOCK_FLAG;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_AI_2_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_AI_3_BLOCK_FLAG;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_AI_3_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_AI_4_BLOCK_FLAG;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_AI_4_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_DI_1_BLOCK_FLAG;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_DI_1_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_DI_2_BLOCK_FLAG;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_DI_2_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_DI_3_BLOCK_FLAG;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_DI_3_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].id                           = CCS_PROT_DI_4_BLOCK_FLAG;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].value.float_t                = 0.0;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].min                          = 0.0;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].max                          = 1.0;
  parameters_[CCS_PROT_DI_4_BLOCK_FLAG - CCS_BEGIN].def                          = 0.0;
  // 
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].id            = CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].access        = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].operation     = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].physic        = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].validity      = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].min           = 0.0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].max           = 1.0;
  parameters_[CCS_PROT_OTHER_LIMIT_RESTART_BLOCK_FLAG - CCS_BEGIN].def           = 0.0;
  // 
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].id                = CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].physic            = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].value.float_t     = 0.0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].max               = 1.0;
  parameters_[CCS_PROT_OTHER_LOCK_DOOR_BLOCK_FLAG - CCS_BEGIN].def               = 0.0;
  // 
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].id                      = CCS_PROT_OTHER_VSD_BLOCK_FLAG;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].value.float_t           = 0.0;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].max                     = 1.0;
  parameters_[CCS_PROT_OTHER_VSD_BLOCK_FLAG - CCS_BEGIN].def                     = 0.0;
  // 
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].id                      = CCS_PROT_OTHER_IMB_BLOCK_FLAG;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].operation               = OPERATION_WRITE;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].physic                  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].validity                = VALIDITY_OK;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].value.float_t           = 0.0;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].min                     = 0.0;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].max                     = 1.0;
  parameters_[CCS_PROT_OTHER_IMB_BLOCK_FLAG - CCS_BEGIN].def                     = 0.0;
  // Общее состояние
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].id                              = CCS_GENERAL_CONDITION;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].operation                       = OPERATION_READ;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].value.float_t                   = 0;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].min                             = 0;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].max                             = 0;
  parameters_[CCS_GENERAL_CONDITION - CCS_BEGIN].def                             = 0;
  // Коэффициент трансформации
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].id                            = CCS_COEF_TRANSFORMATION;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].operation                     = 0;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].physic                        = 0;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].value.float_t                 = 0;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].min                           = 0;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].max                           = 0;
  parameters_[CCS_COEF_TRANSFORMATION - CCS_BEGIN].def                           = 0;
  // Причина последнего останова - регистр временного хранения значения
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].id                           = CCS_LAST_STOP_REASON_TMP;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].operation                    = 0;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].physic                       = 0;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].value.float_t                = 0;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].min                          = 0;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].max                          = 0;
  parameters_[CCS_LAST_STOP_REASON_TMP - CCS_BEGIN].def                          = 0;
  // Работа с пониженным сопротивлением изоляции
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].id                       = CCS_WORK_WITH_LOW_RESISTANCE;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].operation                = OPERATION_WRITE;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].validity                 = VALIDITY_OK;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].value.float_t            = 0.0;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].min                      = 0.0;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].max                      = 1.0;
  parameters_[CCS_WORK_WITH_LOW_RESISTANCE - CCS_BEGIN].def                      = 0.0;
  // Защита ЗСП: Флаг использования прогрессивной задержки АПВ
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].id      = CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].access  = ACCESS_OPERATOR;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].physic  = PHYSIC_NUMERIC;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].value.float_t = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].min     = 0.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].max     = 1.0;
  parameters_[CCS_PROT_MOTOR_UNDERLOAD_PROGRES_RESTART_FLAG - CCS_BEGIN].def     = 0.0;
  // Состояние автомата режима "Программного изменения частоты"
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].id                          = CCS_RGM_CHANGE_FREQ_STATE;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].physic                      = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].max                         = 1.0;
  parameters_[CCS_RGM_CHANGE_FREQ_STATE - CCS_BEGIN].def                         = 0.0;
  // Начальная уставка ЗСП режима "Программного изменения частоты"
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].id                = CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].access            = ACCESS_OPERATOR;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].operation         = OPERATION_WRITE;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].physic            = PHYSIC_PERCENT;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].validity          = VALIDITY_OK;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].value.float_t     = 60.0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].min               = 0.0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].max               = 100.0;
  parameters_[CCS_RGM_CHANGE_FREQ_BEGIN_UNDERLOAD - CCS_BEGIN].def               = 60.0;
  // Действие режима пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].id                              = CCS_RGM_RUN_PUSH_MODE;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].value.float_t                   = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].min                             = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].max                             = 2.0;
  parameters_[CCS_RGM_RUN_PUSH_MODE - CCS_BEGIN].def                             = 0.0;
  // Состояние автомата режима пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].id                             = CCS_RGM_RUN_PUSH_STATE;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].value.float_t                  = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].min                            = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].max                            = 10.0;
  parameters_[CCS_RGM_RUN_PUSH_STATE - CCS_BEGIN].def                            = 0.0;
  // Частота толчка в режиме пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].id                              = CCS_RGM_RUN_PUSH_FREQ;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].physic                          = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].value.float_t                   = 5.0;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].min                             = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].max                             = 20.0;
  parameters_[CCS_RGM_RUN_PUSH_FREQ - CCS_BEGIN].def                             = 5.0;
  // Время толчка в режиме пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].id                              = CCS_RGM_RUN_PUSH_TIME;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].physic                          = PHYSIC_TIME;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].validity                        = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].value.float_t                   = 0.005;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].min                             = 0.001;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].max                             = 0.005;
  parameters_[CCS_RGM_RUN_PUSH_TIME - CCS_BEGIN].def                             = 0.005;
  // Время между толчками в режиме пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].id                            = CCS_RGM_RUN_PUSH_PERIOD;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].physic                        = PHYSIC_TIME;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].value.float_t                 = 1.0;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].min                           = 0.001;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].max                           = 100.0;
  parameters_[CCS_RGM_RUN_PUSH_PERIOD - CCS_BEGIN].def                           = 1.0;
  // Напряжение толчка в режиме пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].id                           = CCS_RGM_RUN_PUSH_VOLTAGE;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].physic                       = PHYSIC_PERCENT;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].validity                     = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].value.float_t                = 100.0;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].min                          = 100.0;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].max                          = 150.0;
  parameters_[CCS_RGM_RUN_PUSH_VOLTAGE - CCS_BEGIN].def                          = 100.0;
  // Количество толчков в режиме пуска "Толчковый"
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].id                          = CCS_RGM_RUN_PUSH_QUANTITY;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].physic                      = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].value.float_t               = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].min                         = 0.0;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].max                         = 20.0;
  parameters_[CCS_RGM_RUN_PUSH_QUANTITY - CCS_BEGIN].def                         = 0.0;
  // Действие режима пуска "Раскачка"
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].id                             = CCS_RGM_RUN_SWING_MODE;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].value.float_t                  = 0.0;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].min                            = 0.0;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].max                            = 2.0;
  parameters_[CCS_RGM_RUN_SWING_MODE - CCS_BEGIN].def                            = 0.0;
  // Состояние автомата режима пуска "Раскачка"
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].id                            = CCS_RGM_RUN_SWING_STATE;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].physic                        = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].validity                      = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].value.float_t                 = 0.0;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].min                           = 0.0;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].max                           = 10.0;
  parameters_[CCS_RGM_RUN_SWING_STATE - CCS_BEGIN].def                           = 0.0;
  // Частота толчка в режиме пуска "Раскачка"
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].id                             = CCS_RGM_RUN_SWING_FREQ;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].physic                         = PHYSIC_FREQUENCY;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].validity                       = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].value.float_t                  = 5.0;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].min                            = 0.0;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].max                            = 20.0;
  parameters_[CCS_RGM_RUN_SWING_FREQ - CCS_BEGIN].def                            = 5.0;
  // Напряжение толчка в режиме пуска "Раскачка"
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].id                          = CCS_RGM_RUN_SWING_VOLTAGE;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].physic                      = PHYSIC_PERCENT;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].validity                    = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].value.float_t               = 100.0;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].min                         = 100.0;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].max                         = 150.0;
  parameters_[CCS_RGM_RUN_SWING_VOLTAGE - CCS_BEGIN].def                         = 100.0;
  // Количество толчков в режиме пуска "Раскачка"
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].id                         = CCS_RGM_RUN_SWING_QUANTITY;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].physic                     = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].validity                   = VALIDITY_OK;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].value.float_t              = 0.0;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].min                        = 0.0;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].max                        = 20.0;
  parameters_[CCS_RGM_RUN_SWING_QUANTITY - CCS_BEGIN].def                        = 0.0;
  // Тип подключенного ЧРП
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].id                                       = CCS_TYPE_VSD;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].validity                                 = VALIDITY_OK;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].value.float_t                            = 0.0;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].min                                      = 0.0;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].max                                      = 3.0;
  parameters_[CCS_TYPE_VSD - CCS_BEGIN].def                                      = 0.0;
  // Режим поддержания параметра. Состояние автомата
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].id                    = CCS_RGM_MAINTENANCE_PARAM_STATE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].operation             = OPERATION_WRITE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].physic                = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].validity              = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].value.float_t         = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].min                   = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].max                   = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_STATE - CCS_BEGIN].def                   = 0;
  // 
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].id                     = CCS_RGM_ALTERNATION_FREQ_STATE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].operation              = OPERATION_WRITE;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].physic                 = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].validity               = VALIDITY_OK;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].value.float_t          = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].min                    = 0.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].max                    = 100.0;
  parameters_[CCS_RGM_ALTERNATION_FREQ_STATE - CCS_BEGIN].def                    = 0.0;
  // Режим поддержания параметра. Поддержка значения - Давление
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].id        = CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].access    = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].physic    = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].validity  = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].min       = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].max       = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_PRESSURE - CCS_BEGIN].def       = 0;
  // Режим поддержания параметра. Поддержка значения - Температура
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].id     = CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].access = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].physic = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].min    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].max    = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_TEMPERATURE - CCS_BEGIN].def    = 0;
  // Режим поддержания параметра. Поддержка значения - Аналоговый вход
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].id       = CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].access   = ACCESS_OPERATOR;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].operation = OPERATION_WRITE;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].physic   = PHYSIC_NUMERIC;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].validity = VALIDITY_OK;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].value.float_t = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].min      = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].max      = 0;
  parameters_[CCS_RGM_MAINTENANCE_PARAM_SETPOINT_ANALOG_IN - CCS_BEGIN].def      = 0;
}


#include "vsd.h"

void Vsd::initParameters()
{
  // Первый параметр ЧРП
  parameters_[VSD_BEGIN - VSD_BEGIN].id                                          = VSD_BEGIN;
  parameters_[VSD_BEGIN - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_BEGIN - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_BEGIN - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_BEGIN - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_BEGIN - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_BEGIN - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_BEGIN - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_BEGIN - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_BEGIN - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_BEGIN - VSD_BEGIN].code                                        = 0;
  // Выходная частота ПЧ
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].id                                  = VSD_FREQUENCY_NOW;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].operation                           = OPERATION_READ;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].physic                              = PHYSIC_FREQUENCY;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].discret                             = 100;
  parameters_[VSD_FREQUENCY_NOW - VSD_BEGIN].code                                = 0;
  // Фиксированная скорость Danfoss 3-11 Уставка частоты, основной задаваемый параметр Novomet 0х0034 IREG_FREQ_REF
  parameters_[VSD_FREQUENCY - VSD_BEGIN].id                                      = VSD_FREQUENCY;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].physic                                  = PHYSIC_FREQUENCY;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].max                                     = 200.0;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].def                                     = 50.0;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].discret                                 = 100;
  parameters_[VSD_FREQUENCY - VSD_BEGIN].code                                    = 13;
  // Обороты двигателя
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].id                                  = VSD_SPEED_RPM_NOW;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].operation                           = OPERATION_READ;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_SPEED_RPM_NOW - VSD_BEGIN].code                                = 0;
  // Напряжение на выходе ПЧ
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].id                              = VSD_OUT_VOLTAGE_MOTOR;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].operation                       = OPERATION_READ;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].physic                          = PHYSIC_VOLTAGE;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].def                             = 0;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].discret                         = 10;
  parameters_[VSD_OUT_VOLTAGE_MOTOR - VSD_BEGIN].code                            = 0;
  // Конструкция двигателя Danfoss 1-10
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].id                                     = VSD_MOTOR_TYPE;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].operation                              = OPERATION_WRITE;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].value.float_t                          = 0.0;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].max                                    = 1.0;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].def                                    = 0.0;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_MOTOR_TYPE - VSD_BEGIN].code                                   = 0;
  // Принцип управления двигателем Danfoss 1-01 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].id                                  = VSD_MOTOR_CONTROL;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].value.float_t                       = 0.0;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].max                                 = 1.0;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].def                                 = 0.0;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_MOTOR_CONTROL - VSD_BEGIN].code                                = 13;
  // Направления вращения Danfoss 4-10 Не используется в проекте, только при конфигурировании
  parameters_[VSD_ROTATION - VSD_BEGIN].id                                       = VSD_ROTATION;
  parameters_[VSD_ROTATION - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_ROTATION - VSD_BEGIN].operation                                = OPERATION_READ;
  parameters_[VSD_ROTATION - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_ROTATION - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_ROTATION - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_ROTATION - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_ROTATION - VSD_BEGIN].max                                      = 1.0;
  parameters_[VSD_ROTATION - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_ROTATION - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_ROTATION - VSD_BEGIN].code                                     = 13;
  // Выходной ток ПЧ фаза U
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].id                            = VSD_CURRENT_OUT_PHASE_1;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].operation                     = OPERATION_READ;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].physic                        = PHYSIC_CURRENT;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].max                           = 2500.0;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].def                           = 0;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].discret                       = 10;
  parameters_[VSD_CURRENT_OUT_PHASE_1 - VSD_BEGIN].code                          = 0;
  // Выходной ток ПЧ фаза V
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].id                            = VSD_CURRENT_OUT_PHASE_2;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].operation                     = OPERATION_READ;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].physic                        = PHYSIC_CURRENT;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].max                           = 2500.0;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].def                           = 0;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].discret                       = 10;
  parameters_[VSD_CURRENT_OUT_PHASE_2 - VSD_BEGIN].code                          = 0;
  // Выходной ток ПЧ фаза W
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].id                            = VSD_CURRENT_OUT_PHASE_3;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].operation                     = OPERATION_READ;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].physic                        = PHYSIC_CURRENT;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].max                           = 2500.0;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].def                           = 0;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].discret                       = 10;
  parameters_[VSD_CURRENT_OUT_PHASE_3 - VSD_BEGIN].code                          = 0;
  // Ток звена постоянного тока
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].id                                     = VSD_CURRENT_DC;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].operation                              = OPERATION_READ;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].physic                                 = PHYSIC_CURRENT;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].max                                    = 2500.0;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].discret                                = 10;
  parameters_[VSD_CURRENT_DC - VSD_BEGIN].code                                   = 0;
  // Напряжение цепи пост.тока Danfoss 16-30 Используется в проекте Novomet 0х008B IREG_UD
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].id                                     = VSD_VOLTAGE_DC;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].operation                              = OPERATION_READ;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].physic                                 = PHYSIC_VOLTAGE;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_VOLTAGE_DC - VSD_BEGIN].code                                   = 0;
  // Активная мощность Danfoss 16-10 Используется в проекте Novomet 0х0071 IREG_POUT
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].id                                   = VSD_POWER_ACTIVE;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].operation                            = OPERATION_READ;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].physic                               = PHYSIC_ACTIVE_POWER;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].value.float_t                        = 0.0;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].max                                  = 9999000.0;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].def                                  = 0.0;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].discret                              = 10;
  parameters_[VSD_POWER_ACTIVE - VSD_BEGIN].code                                 = 0;
  // Полная мощность
  parameters_[VSD_POWER_FULL - VSD_BEGIN].id                                     = VSD_POWER_FULL;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].operation                              = OPERATION_READ;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].physic                                 = PHYSIC_FULL_POWER;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].discret                                = 10;
  parameters_[VSD_POWER_FULL - VSD_BEGIN].code                                   = 0;
  // Мощность двигателя Danfoss 1-20 Используется в проекте, интерфейс
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].id                                    = VSD_MOTOR_POWER;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].physic                                = PHYSIC_POWER;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].value.float_t                         = 125000.0;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].def                                   = 125000.0;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_MOTOR_POWER - VSD_BEGIN].code                                  = 13;
  // Напряжение двигателя Danfoss 1-22 Используется в проекте, интерфейс Novomet 0х0045 IREG_MOTOR_U_MAх
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].id                                  = VSD_MOTOR_VOLTAGE;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].physic                              = PHYSIC_VOLTAGE;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].value.float_t                       = 380.0;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].max                                 = 5000.0;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].def                                 = 380.0;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_MOTOR_VOLTAGE - VSD_BEGIN].code                                = 13;
  // Номинальный ток двигателя Danfoss 1-24 Используется в проекте, интерфейс Novomet 0х0044 IREG_MOTOR_I_MAх
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].id                                  = VSD_MOTOR_CURRENT;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].physic                              = PHYSIC_CURRENT;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].value.float_t                       = 26.5;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].max                                 = 9999.0;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].def                                 = 26.5;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].discret                             = 10;
  parameters_[VSD_MOTOR_CURRENT - VSD_BEGIN].code                                = 13;
  // Скорость двигателя Danfoss 1-25 Используется в проекте, интерфейс
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].id                                    = VSD_MOTOR_SPEED;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].physic                                = PHYSIC_RPM;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].value.float_t                         = 2895.0;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].max                                   = 10000.0;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].def                                   = 2895.0;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_MOTOR_SPEED - VSD_BEGIN].code                                  = 13;
  // Частота двигателя Danfoss 1-23 Используется в проекте, интерфейс Novomet 0х0043 IREG_MOTOR_F_MAх
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].id                                = VSD_MOTOR_FREQUENCY;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].physic                            = PHYSIC_FREQUENCY;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].value.float_t                     = 50.0;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].max                               = 200.0;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].def                               = 50.0;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_MOTOR_FREQUENCY - VSD_BEGIN].code                              = 13;
  // Номинальный косинус Фи Danfoss 14-43 Используется в проекте
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].id                                  = VSD_MOTOR_COS_PHI;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].value.float_t                       = 0.85;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].max                                 = 1.0;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].def                                 = 0.85;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].discret                             = 100;
  parameters_[VSD_MOTOR_COS_PHI - VSD_BEGIN].code                                = 13;
  // Индуктивности по оси D Danfoss 1-37 Используется в проекте
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].id                             = VSD_D_AXIS_INDUNSTANCE;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].physic                         = PHYSIC_INDUNCTANCE;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].value.float_t                  = 0.0;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].max                            = 1000.0;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].def                            = 0.0;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].discret                        = 10;
  parameters_[VSD_D_AXIS_INDUNSTANCE - VSD_BEGIN].code                           = 13;
  // Противо эдс Danfoss 1-40 Используется в проекте
  parameters_[VSD_BACK_EMF - VSD_BEGIN].id                                       = VSD_BACK_EMF;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].operation                                = 0;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].physic                                   = 0;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].value.float_t                            = 0;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].max                                      = 999999.0;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].def                                      = 0;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_BACK_EMF - VSD_BEGIN].code                                     = 0;
  // Ток холостого хода
  parameters_[VSD_UF_UHH - VSD_BEGIN].id                                         = VSD_UF_UHH;
  parameters_[VSD_UF_UHH - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_UF_UHH - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_UF_UHH - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_UF_UHH - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_UF_UHH - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_UF_UHH - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_UF_UHH - VSD_BEGIN].max                                        = 1000.0;
  parameters_[VSD_UF_UHH - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_UF_UHH - VSD_BEGIN].discret                                    = 10;
  parameters_[VSD_UF_UHH - VSD_BEGIN].code                                       = 0;
  // Число полюсов двигателя Danfoss 1-39 Используется в проекте
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].id                                    = VSD_MOTOR_POLES;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_MOTOR_POLES - VSD_BEGIN].code                                  = 13;
  // Нижний предел скорости Danfoss 4-12 Гц Используется в проекте
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].id                            = VSD_LOW_LIM_SPEED_MOTOR;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].physic                        = PHYSIC_FREQUENCY;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].value.float_t                 = 40.0;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].max                           = 200.0;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].def                           = 40.0;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].discret                       = 100;
  parameters_[VSD_LOW_LIM_SPEED_MOTOR - VSD_BEGIN].code                          = 13;
  // Верхний передел скорости Danfoss 4-14 Используется в проекте Novomet 0х0037 IREG_FREQ_REF_MAх
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].id                           = VSD_HIGH_LIM_SPEED_MOTOR;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].physic                       = PHYSIC_FREQUENCY;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].value.float_t                = 60.0;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].max                          = 200.0;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].def                          = 60.0;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].discret                      = 100;
  parameters_[VSD_HIGH_LIM_SPEED_MOTOR - VSD_BEGIN].code                         = 13;
  // Период нарастания частоты Novomet 0х0038 IREG_T_SPEEDUP
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].id                                      = VSD_T_SPEEDUP;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].physic                                  = PHYSIC_TIME;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].value.float_t                           = 100.0;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].def                                     = 100.0;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].discret                                 = 10;
  parameters_[VSD_T_SPEEDUP - VSD_BEGIN].code                                    = 13;
  // Период Период снижения частоты Novomet 0х0039 IREG_T_SPEEDDOWN
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].id                                    = VSD_T_SPEEDDOWN;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].physic                                = PHYSIC_TIME;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].value.float_t                         = 0.0;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].def                                   = 0.0;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].discret                               = 10;
  parameters_[VSD_T_SPEEDDOWN - VSD_BEGIN].code                                  = 13;
  // U/f характеристика
  parameters_[VSD_UF_TYPE - VSD_BEGIN].id                                        = VSD_UF_TYPE;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].value.float_t                             = 0.0;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].max                                       = 1.0;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].def                                       = 0.0;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_UF_TYPE - VSD_BEGIN].code                                      = 0;
  // Первая точка напряжения U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_U_1;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].value.float_t               = 10.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].max                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].def                         = 10.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_1 - VSD_BEGIN].code                        = 13;
  // Первая точка частоты U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_F_1;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].value.float_t               = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].max                         = 200.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].def                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].discret                     = 100;
  parameters_[VSD_UF_CHARACTERISTIC_F_1 - VSD_BEGIN].code                        = 13;
  // Вторая точка напряжения U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_U_2;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].value.float_t               = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].max                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].def                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_2 - VSD_BEGIN].code                        = 13;
  // Вторая точка частоты U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_F_2;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].value.float_t               = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].max                         = 200.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].def                         = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].discret                     = 100;
  parameters_[VSD_UF_CHARACTERISTIC_F_2 - VSD_BEGIN].code                        = 13;
  // Третья точка напряжения U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_U_3;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].value.float_t               = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].max                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].def                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_3 - VSD_BEGIN].code                        = 13;
  // Третья точка частоты U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_F_3;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].value.float_t               = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].max                         = 200.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].def                         = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].discret                     = 100;
  parameters_[VSD_UF_CHARACTERISTIC_F_3 - VSD_BEGIN].code                        = 13;
  // Четвертая точка напряжения U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_U_4;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].value.float_t               = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].max                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].def                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_4 - VSD_BEGIN].code                        = 13;
  // Четвертая точка частоты U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_F_4;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].value.float_t               = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].max                         = 200.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].def                         = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].discret                     = 100;
  parameters_[VSD_UF_CHARACTERISTIC_F_4 - VSD_BEGIN].code                        = 13;
  // Пятая точка напряжения U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_U_5;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].value.float_t               = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].max                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].def                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_5 - VSD_BEGIN].code                        = 13;
  // Пятая точка частоты U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_F_5;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].value.float_t               = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].max                         = 200.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].def                         = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].discret                     = 100;
  parameters_[VSD_UF_CHARACTERISTIC_F_5 - VSD_BEGIN].code                        = 13;
  // Шестая точка напряжения U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_U_6;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].value.float_t               = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].max                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].def                         = 380.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_6 - VSD_BEGIN].code                        = 13;
  // Шестая точка частоты U/f характеристика
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].id                          = VSD_UF_CHARACTERISTIC_F_6;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].physic                      = PHYSIC_FREQUENCY;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].value.float_t               = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].max                         = 200.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].def                         = 50.0;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].discret                     = 100;
  parameters_[VSD_UF_CHARACTERISTIC_F_6 - VSD_BEGIN].code                        = 13;
  // Угол управления тиристорами;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].id                           = VSD_THYR_ANGLE_REFERENCE;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].def                          = 0;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_THYR_ANGLE_REFERENCE - VSD_BEGIN].code                         = 0;
  // Статус платы выпрямителя.
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_5;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_5 - VSD_BEGIN].code                                = 0;
  // Регистр управления тиристорами;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].id                                   = VSD_THYR_CONTROL;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_THYR_CONTROL - VSD_BEGIN].code                                 = 0;
  // Напряжение защиты от КЗ инвертора.
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].id                          = VSD_THYR_VOLT_SHORT_CUILT;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].def                         = 0;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_THYR_VOLT_SHORT_CUILT - VSD_BEGIN].code                        = 0;
  // Статус индикатора
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_6;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_6 - VSD_BEGIN].code                                = 0;
  // Маска состояния цифровых выходов.
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].id                                       = VSD_DOUTPUTS;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].max                                      = 65535.0;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_DOUTPUTS - VSD_BEGIN].code                                     = 0;
  // Маска состояния цифровых входов.
  parameters_[VSD_DINPUTS - VSD_BEGIN].id                                        = VSD_DINPUTS;
  parameters_[VSD_DINPUTS - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_DINPUTS - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_DINPUTS - VSD_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[VSD_DINPUTS - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_DINPUTS - VSD_BEGIN].value.float_t                             = 0.0;
  parameters_[VSD_DINPUTS - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_DINPUTS - VSD_BEGIN].max                                       = 65535.0;
  parameters_[VSD_DINPUTS - VSD_BEGIN].def                                       = 0.0;
  parameters_[VSD_DINPUTS - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_DINPUTS - VSD_BEGIN].code                                      = 0;
  // Маска включения цифровых выходов.
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].id                                = VSD_DOUTPUTS_ENABLE;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].value.float_t                     = 0.0;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].max                               = 65535.0;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].def                               = 0.0;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_DOUTPUTS_ENABLE - VSD_BEGIN].code                              = 0;
  // Маска выключения цифровых выходов.
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].id                               = VSD_DOUTPUTS_DISABLE;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].value.float_t                    = 0.0;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].max                              = 65535.0;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].def                              = 0.0;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_DOUTPUTS_DISABLE - VSD_BEGIN].code                             = 0;
  // Температура включения главного вентилятора.
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].id                            = VSD_VENT_ON_TEMPERATURE;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].physic                        = PHYSIC_TEMPERATURE;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].value.float_t                 = 80.0;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].max                           = 120.0;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].def                           = 80.0;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_VENT_ON_TEMPERATURE - VSD_BEGIN].code                          = 13;
  // Температура выключения главного вентилятора.
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].id                           = VSD_VENT_OFF_TEMPERATURE;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].physic                       = PHYSIC_TEMPERATURE;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].value.float_t                = 60.0;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].max                          = 120.0;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].def                          = 60.0;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_VENT_OFF_TEMPERATURE - VSD_BEGIN].code                         = 13;
  // Период проверки температуры радиаторов
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].id                                    = VSD_VENT_PERIOD;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].physic                                = PHYSIC_TIME;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].value.float_t                         = 5.0;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].min                                   = 3.0;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].max                                   = 60.0;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].def                                   = 5.0;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_VENT_PERIOD - VSD_BEGIN].code                                  = 13;
  // Температура срабатывания тепловой защиты радиаторов
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].id                         = VSD_VENT_TEMPERATURE_FAULT;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].operation                  = OPERATION_WRITE;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].physic                     = PHYSIC_TEMPERATURE;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].value.float_t              = 105.0;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].min                        = 80.0;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].max                        = 110.0;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].def                        = 105.0;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_VENT_TEMPERATURE_FAULT - VSD_BEGIN].code                       = 13;
  // Флаговый регистр управления
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].id                                 = VSD_CONTROL_WORD_1;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].def                                = 0;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_CONTROL_WORD_1 - VSD_BEGIN].code                               = 0;
  // Регистр состояния инвертора
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_1;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_1 - VSD_BEGIN].code                                = 0;
  // Уставка частоты "тревожного" режима
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].id                                = VSD_FREQUENCY_ERROR;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].def                               = 0;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_FREQUENCY_ERROR - VSD_BEGIN].code                              = 0;
  // Период снижения частоты при токоограничении.
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].id                             = VSD_T_ILIMIT_SPEEDDOWN;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].operation                      = 0;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].physic                         = 0;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].value.float_t                  = 0;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].max                            = 999999.0;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].def                            = 0;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_T_ILIMIT_SPEEDDOWN - VSD_BEGIN].code                           = 0;
  // Период снижения частоты при нехватке напряжения на инверторе
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].id                               = VSD_T_ULOW_SPEEDDOWN;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].def                              = 0;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_T_ULOW_SPEEDDOWN - VSD_BEGIN].code                             = 0;
  // Тип текущего алгоритма управления (регулятора)
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].id                              = VSD_CURRENT_REGULATOR;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].def                             = 0;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_CURRENT_REGULATOR - VSD_BEGIN].code                            = 0;
  // Напряжение форсировки
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].id                                     = VSD_UF_U_FORCE;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_UF_U_FORCE - VSD_BEGIN].code                                   = 0;
  // Частота форсировки
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].id                                     = VSD_UF_F_FORCE;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_UF_F_FORCE - VSD_BEGIN].code                                   = 0;
  // Постоянная времени компенсации индуктивности
  parameters_[VSD_IFB_COMP - VSD_BEGIN].id                                       = VSD_IFB_COMP;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].operation                                = 0;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].physic                                   = 0;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].value.float_t                            = 0;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].max                                      = 999999.0;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].def                                      = 0;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_IFB_COMP - VSD_BEGIN].code                                     = 0;
  // Пропорциональный коэффициент ОС частотного контура регулирования
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].id                                     = VSD_VUOUT_PROP;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_VUOUT_PROP - VSD_BEGIN].code                                   = 0;
  // Максимальный порог ограничения тока на выходе ПЧ, абс. вел (Токоограничение)
  parameters_[VSD_ILIMIT - VSD_BEGIN].id                                         = VSD_ILIMIT;
  parameters_[VSD_ILIMIT - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_ILIMIT - VSD_BEGIN].operation                                  = 0;
  parameters_[VSD_ILIMIT - VSD_BEGIN].physic                                     = 0;
  parameters_[VSD_ILIMIT - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_ILIMIT - VSD_BEGIN].value.float_t                              = 0;
  parameters_[VSD_ILIMIT - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_ILIMIT - VSD_BEGIN].max                                        = 999999.0;
  parameters_[VSD_ILIMIT - VSD_BEGIN].def                                        = 0;
  parameters_[VSD_ILIMIT - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_ILIMIT - VSD_BEGIN].code                                       = 0;
  // Интегральный коэффициент ОС частотного контура регулирования
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].id                                    = VSD_VUOUT_INTEG;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_VUOUT_INTEG - VSD_BEGIN].code                                  = 0;
  // Коэффициент постоянной времени обратного перехода с вектора на U/f
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].id                                    = VSD_VTOUF_INTEG;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_VTOUF_INTEG - VSD_BEGIN].code                                  = 0;
  // Суммарная индуктивность на выходе ПЧ, фазное значение
  parameters_[VSD_LOUT - VSD_BEGIN].id                                           = VSD_LOUT;
  parameters_[VSD_LOUT - VSD_BEGIN].access                                       = ACCESS_OPERATOR;
  parameters_[VSD_LOUT - VSD_BEGIN].operation                                    = 0;
  parameters_[VSD_LOUT - VSD_BEGIN].physic                                       = 0;
  parameters_[VSD_LOUT - VSD_BEGIN].validity                                     = VALIDITY_ERROR;
  parameters_[VSD_LOUT - VSD_BEGIN].value.float_t                                = 0;
  parameters_[VSD_LOUT - VSD_BEGIN].min                                          = 0.0;
  parameters_[VSD_LOUT - VSD_BEGIN].max                                          = 999999.0;
  parameters_[VSD_LOUT - VSD_BEGIN].def                                          = 0;
  parameters_[VSD_LOUT - VSD_BEGIN].discret                                      = 1;
  parameters_[VSD_LOUT - VSD_BEGIN].code                                         = 0;
  // Режим раскачки: частота
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].id                           = VSD_SW_STARTUP_FREQUENCY;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].def                          = 0;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_SW_STARTUP_FREQUENCY - VSD_BEGIN].code                         = 0;
  // Режим раскачки: угол качания
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].id                           = VSD_SW_STARTUP_ANGLE_OSC;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].def                          = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_SW_STARTUP_ANGLE_OSC - VSD_BEGIN].code                         = 0;
  // Режим раскачки: угол сдвига
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].id                         = VSD_SW_STARTUP_ANGLE_SHIFT;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].def                        = 0;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_SW_STARTUP_ANGLE_SHIFT - VSD_BEGIN].code                       = 0;
  // Режим раскачки: количество качаний на угол
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].id                           = VSD_SW_STARTUP_OSC_COUNT;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].def                          = 0;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_SW_STARTUP_OSC_COUNT - VSD_BEGIN].code                         = 0;
  // Режим раскачки: количество оборотов двигателя
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].id                           = VSD_SW_STARTUP_ROTATIONS;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].def                          = 0;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_SW_STARTUP_ROTATIONS - VSD_BEGIN].code                         = 0;
  // Режим раскачки: кратность напряжения импульса расклинки
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].id                             = VSD_SW_STARTUP_U_PULSE;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].operation                      = 0;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].physic                         = 0;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].value.float_t                  = 0;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].max                            = 999999.0;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].def                            = 0;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_SW_STARTUP_U_PULSE - VSD_BEGIN].code                           = 0;
  // Режим раскачки: токоограничение
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].id                               = VSD_SW_STARTUP_I_LIM;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].def                              = 0;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_SW_STARTUP_I_LIM - VSD_BEGIN].code                             = 0;
  // Порог токоограничения импульса расклинки в режиме с раскачкой
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].id                         = VSD_SW_STARTUP_I_LIM_PULSE;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].def                        = 0;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_SW_STARTUP_I_LIM_PULSE - VSD_BEGIN].code                       = 0;
  // Интегральный коэффициент ОС фазового контура регулирования
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].id                                    = VSD_VFREQ_INTEG;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].physic                                = PHYSIC_NUMERIC;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].value.float_t                         = 0.007;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].max                                   = 0.1;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].def                                   = 0.007;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].discret                               = 10000;
  parameters_[VSD_VFREQ_INTEG - VSD_BEGIN].code                                  = 0;
  // Регистры рабочей очереди алгоритмов управления
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].id                              = VSD_REGULATOR_QUEUE_1;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].def                             = 0;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_REGULATOR_QUEUE_1 - VSD_BEGIN].code                            = 0;
  // Регистры рабочей очереди алгоритмов управления
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].id                              = VSD_REGULATOR_QUEUE_2;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].def                             = 0;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_REGULATOR_QUEUE_2 - VSD_BEGIN].code                            = 0;
  // Регистры рабочей очереди алгоритмов управления
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].id                              = VSD_REGULATOR_QUEUE_3;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].def                             = 0;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_REGULATOR_QUEUE_3 - VSD_BEGIN].code                            = 0;
  // Регистры рабочей очереди алгоритмов управления
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].id                              = VSD_REGULATOR_QUEUE_4;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].def                             = 0;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_REGULATOR_QUEUE_4 - VSD_BEGIN].code                            = 0;
  // Регистры рабочей очереди алгоритмов управления
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].id                              = VSD_REGULATOR_QUEUE_5;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].def                             = 0;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_REGULATOR_QUEUE_5 - VSD_BEGIN].code                            = 0;
  // Порог защиты ПЧ по снижению напряжения на инверторе
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].id                                   = VSD_DELETE_10083;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_DELETE_10083 - VSD_BEGIN].code                                 = 0;
  // Порог защиты ПЧ по превыщению напряжения на инверторе
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].id                                  = VSD_UD_HIGH_FAULT;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_UD_HIGH_FAULT - VSD_BEGIN].code                                = 0;
  // Порог защиты ПЧ по несимметрии входного напряжения на инверторе
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].id                                 = VSD_UIN_ASYM_LEVEL;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].def                                = 0;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_UIN_ASYM_LEVEL - VSD_BEGIN].code                               = 0;
  // Время срабатывания защиты ПЧ по несимметрии входного напряжения на инверторе
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].id                                 = VSD_UIN_ASYM_DELAY;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].def                                = 0;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_UIN_ASYM_DELAY - VSD_BEGIN].code                               = 0;
  // Частота перехода на векторный алгоритм
  parameters_[VSD_F_VECT - VSD_BEGIN].id                                         = VSD_F_VECT;
  parameters_[VSD_F_VECT - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_F_VECT - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_F_VECT - VSD_BEGIN].physic                                     = PHYSIC_FREQUENCY;
  parameters_[VSD_F_VECT - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_F_VECT - VSD_BEGIN].value.float_t                              = 13.0;
  parameters_[VSD_F_VECT - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_F_VECT - VSD_BEGIN].max                                        = 500.0;
  parameters_[VSD_F_VECT - VSD_BEGIN].def                                        = 13.0;
  parameters_[VSD_F_VECT - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_F_VECT - VSD_BEGIN].code                                       = 0;
  // Пропорциональный коэффициент ОС фазового контура регулирования
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].id                                     = VSD_VFREQ_GAIN;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].operation                              = OPERATION_WRITE;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].value.float_t                          = 0.03;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].max                                    = 0.5;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].def                                    = 0.03;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].discret                                = 10000;
  parameters_[VSD_VFREQ_GAIN - VSD_BEGIN].code                                   = 0;
  // Фазовый коэффициент усиления системы подавления резонанса
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].id                                  = VSD_RES_PROP_GAIN;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_RES_PROP_GAIN - VSD_BEGIN].code                                = 0;
  // Постоянная времени системы подавления резонанса
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].id                                  = VSD_RES_TIMECONST;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_RES_TIMECONST - VSD_BEGIN].code                                = 0;
  // Служебный регистр для отладки алгоритмов управления
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].id                                 = VSD_RES_IAMP_VALID;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].def                                = 0;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_RES_IAMP_VALID - VSD_BEGIN].code                               = 0;
  // Выходной ток ПЧ по фазе В. (амплитудное значение)
  parameters_[VSD_IB - VSD_BEGIN].id                                             = VSD_IB;
  parameters_[VSD_IB - VSD_BEGIN].access                                         = ACCESS_OPERATOR;
  parameters_[VSD_IB - VSD_BEGIN].operation                                      = 0;
  parameters_[VSD_IB - VSD_BEGIN].physic                                         = 0;
  parameters_[VSD_IB - VSD_BEGIN].validity                                       = VALIDITY_ERROR;
  parameters_[VSD_IB - VSD_BEGIN].value.float_t                                  = 0;
  parameters_[VSD_IB - VSD_BEGIN].min                                            = 0.0;
  parameters_[VSD_IB - VSD_BEGIN].max                                            = 999999.0;
  parameters_[VSD_IB - VSD_BEGIN].def                                            = 0;
  parameters_[VSD_IB - VSD_BEGIN].discret                                        = 1;
  parameters_[VSD_IB - VSD_BEGIN].code                                           = 0;
  // Фаза выходного тока В
  parameters_[VSD_PHB - VSD_BEGIN].id                                            = VSD_PHB;
  parameters_[VSD_PHB - VSD_BEGIN].access                                        = ACCESS_OPERATOR;
  parameters_[VSD_PHB - VSD_BEGIN].operation                                     = 0;
  parameters_[VSD_PHB - VSD_BEGIN].physic                                        = 0;
  parameters_[VSD_PHB - VSD_BEGIN].validity                                      = VALIDITY_ERROR;
  parameters_[VSD_PHB - VSD_BEGIN].value.float_t                                 = 0;
  parameters_[VSD_PHB - VSD_BEGIN].min                                           = 0.0;
  parameters_[VSD_PHB - VSD_BEGIN].max                                           = 999999.0;
  parameters_[VSD_PHB - VSD_BEGIN].def                                           = 0;
  parameters_[VSD_PHB - VSD_BEGIN].discret                                       = 1;
  parameters_[VSD_PHB - VSD_BEGIN].code                                          = 0;
  // Выходной ток ПЧ по фазе C. (амплитудное значение)
  parameters_[VSD_IC - VSD_BEGIN].id                                             = VSD_IC;
  parameters_[VSD_IC - VSD_BEGIN].access                                         = ACCESS_OPERATOR;
  parameters_[VSD_IC - VSD_BEGIN].operation                                      = 0;
  parameters_[VSD_IC - VSD_BEGIN].physic                                         = 0;
  parameters_[VSD_IC - VSD_BEGIN].validity                                       = VALIDITY_ERROR;
  parameters_[VSD_IC - VSD_BEGIN].value.float_t                                  = 0;
  parameters_[VSD_IC - VSD_BEGIN].min                                            = 0.0;
  parameters_[VSD_IC - VSD_BEGIN].max                                            = 999999.0;
  parameters_[VSD_IC - VSD_BEGIN].def                                            = 0;
  parameters_[VSD_IC - VSD_BEGIN].discret                                        = 1;
  parameters_[VSD_IC - VSD_BEGIN].code                                           = 0;
  // Фаза выходного тока C
  parameters_[VSD_PHC - VSD_BEGIN].id                                            = VSD_PHC;
  parameters_[VSD_PHC - VSD_BEGIN].access                                        = ACCESS_OPERATOR;
  parameters_[VSD_PHC - VSD_BEGIN].operation                                     = 0;
  parameters_[VSD_PHC - VSD_BEGIN].physic                                        = 0;
  parameters_[VSD_PHC - VSD_BEGIN].validity                                      = VALIDITY_ERROR;
  parameters_[VSD_PHC - VSD_BEGIN].value.float_t                                 = 0;
  parameters_[VSD_PHC - VSD_BEGIN].min                                           = 0.0;
  parameters_[VSD_PHC - VSD_BEGIN].max                                           = 999999.0;
  parameters_[VSD_PHC - VSD_BEGIN].def                                           = 0;
  parameters_[VSD_PHC - VSD_BEGIN].discret                                       = 1;
  parameters_[VSD_PHC - VSD_BEGIN].code                                          = 0;
  // Время снижения уставки в режиме остановки турбинного вращения
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].id                                = VSD_DECEL_SPEEDDOWN;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].physic                            = PHYSIC_TIME;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].value.float_t                     = 100.0;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].def                               = 100.0;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].discret                           = 10;
  parameters_[VSD_DECEL_SPEEDDOWN - VSD_BEGIN].code                              = 13;
  // Напряжение остаточного напряжения на шине (окончания разряда) в режиме остановки турбинного вращения (для ВД)
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].id                                  = VSD_DECEL_VOLTAGE;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].physic                              = PHYSIC_VOLTAGE;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].value.float_t                       = 10.0;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].min                                 = 10.0;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].max                                 = 100.0;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].def                                 = 10.0;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_DECEL_VOLTAGE - VSD_BEGIN].code                                = 13;
  // Начальная частота режима остановки турбинного вращения (для АД)
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].id                                    = VSD_DECEL_F_MAX;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].physic                                = PHYSIC_FREQUENCY;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].value.float_t                         = 1.0;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].min                                   = 1.0;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].max                                   = 500.0;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].def                                   = 1.0;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_DECEL_F_MAX - VSD_BEGIN].code                                  = 13;
  // Время секунды
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].id                                    = VSD_TIME_SECOND;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_TIME_SECOND - VSD_BEGIN].code                                  = 0;
  // Время минуты
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].id                                    = VSD_TIME_MINUTE;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_TIME_MINUTE - VSD_BEGIN].code                                  = 0;
  // Время часы
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].id                                      = VSD_TIME_HOUR;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].operation                               = 0;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].physic                                  = 0;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].def                                     = 0;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_TIME_HOUR - VSD_BEGIN].code                                    = 0;
  // Время дни
  parameters_[VSD_TIME_DAY - VSD_BEGIN].id                                       = VSD_TIME_DAY;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].operation                                = 0;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].physic                                   = 0;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].value.float_t                            = 0;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].max                                      = 999999.0;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].def                                      = 0;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_TIME_DAY - VSD_BEGIN].code                                     = 0;
  // Время месяцы
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].id                                     = VSD_TIME_MONTH;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_TIME_MONTH - VSD_BEGIN].code                                   = 0;
  // Время годы
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].id                                      = VSD_TIME_YEAR;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].operation                               = 0;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].physic                                  = 0;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].def                                     = 0;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_TIME_YEAR - VSD_BEGIN].code                                    = 0;
  // Величина измерительного тока автонастройки
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].id                                      = VSD_AST_IMEAS;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].operation                               = 0;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].physic                                  = 0;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].def                                     = 0;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_AST_IMEAS - VSD_BEGIN].code                                    = 0;
  // Величина измерительного напряжения автонастройки
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].id                                      = VSD_AST_UMEAS;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].operation                               = 0;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].physic                                  = 0;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].def                                     = 0;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_AST_UMEAS - VSD_BEGIN].code                                    = 0;
  // Измеренная величина выходной индуктивности автонастройки
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].id                                   = VSD_AST_LOUT_1_0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_AST_LOUT_1_0 - VSD_BEGIN].code                                 = 0;
  // Дополнительный регистр автонастройки, зарезервирован
  parameters_[VSD_AST_STANDING - VSD_BEGIN].id                                   = VSD_AST_STANDING;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_AST_STANDING - VSD_BEGIN].code                                 = 0;
  // Расширенный регистр состояния инвертора
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_2;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_2 - VSD_BEGIN].code                                = 0;
  // Период экскурсий частоты режима встряхивания.
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].id                                 = VSD_JARRING_PERIOD;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].def                                = 0;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_JARRING_PERIOD - VSD_BEGIN].code                               = 0;
  // Величина прибавки частоты вращения выше уставки в режиме встряхивания
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].id                                = VSD_JARRING_UPDFREQ;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].def                               = 0;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_JARRING_UPDFREQ - VSD_BEGIN].code                              = 0;
  // Время прибавки частоты вращения выше уставки в режиме встряхивания
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].id                                 = VSD_JARRING_UPTIME;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].def                                = 0;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_JARRING_UPTIME - VSD_BEGIN].code                               = 0;
  // Величина уменьшения частоты вращения ниже уставки в режиме встряхивания
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].id                              = VSD_JARRING_DOWNDFREQ;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].def                             = 0;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_JARRING_DOWNDFREQ - VSD_BEGIN].code                            = 0;
  // Время уменьшения частоты вращения ниже уставки в режиме встряхивания
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].id                               = VSD_JARRING_DOWNTIME;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].def                              = 0;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_JARRING_DOWNTIME - VSD_BEGIN].code                             = 0;
  // Регистры обслуживания внутренних нужд режима встряхивания
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].id                                   = VSD_JARRING_MODE;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].value.float_t                        = 0.0;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].max                                  = 1.0;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].def                                  = 0.0;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_JARRING_MODE - VSD_BEGIN].code                                 = 0;
  // Регистры обслуживания внутренних нужд режима встряхивания
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].id                               = VSD_JARRING_TICK_CNT;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].def                              = 0;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_JARRING_TICK_CNT - VSD_BEGIN].code                             = 0;
  // Регистры обслуживания внутренних нужд режима встряхивания
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].id                             = VSD_JARRING_SECOND_CNT;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].operation                      = 0;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].physic                         = 0;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].value.float_t                  = 0;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].max                            = 999999.0;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].def                            = 0;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_JARRING_SECOND_CNT - VSD_BEGIN].code                           = 0;
  // Стартовая частота вращения двигателя в основном режиме регулирования
  parameters_[VSD_START_FREQ - VSD_BEGIN].id                                     = VSD_START_FREQ;
  parameters_[VSD_START_FREQ - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_START_FREQ - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_START_FREQ - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_START_FREQ - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_START_FREQ - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_START_FREQ - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_START_FREQ - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_START_FREQ - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_START_FREQ - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_START_FREQ - VSD_BEGIN].code                                   = 0;
  // Выходной ток ПЧ по фазе A. (амплитудное значение)
  parameters_[VSD_IA - VSD_BEGIN].id                                             = VSD_IA;
  parameters_[VSD_IA - VSD_BEGIN].access                                         = ACCESS_OPERATOR;
  parameters_[VSD_IA - VSD_BEGIN].operation                                      = 0;
  parameters_[VSD_IA - VSD_BEGIN].physic                                         = 0;
  parameters_[VSD_IA - VSD_BEGIN].validity                                       = VALIDITY_ERROR;
  parameters_[VSD_IA - VSD_BEGIN].value.float_t                                  = 0;
  parameters_[VSD_IA - VSD_BEGIN].min                                            = 0.0;
  parameters_[VSD_IA - VSD_BEGIN].max                                            = 999999.0;
  parameters_[VSD_IA - VSD_BEGIN].def                                            = 0;
  parameters_[VSD_IA - VSD_BEGIN].discret                                        = 1;
  parameters_[VSD_IA - VSD_BEGIN].code                                           = 0;
  // Фаза выходного тока A
  parameters_[VSD_PHA - VSD_BEGIN].id                                            = VSD_PHA;
  parameters_[VSD_PHA - VSD_BEGIN].access                                        = ACCESS_OPERATOR;
  parameters_[VSD_PHA - VSD_BEGIN].operation                                     = 0;
  parameters_[VSD_PHA - VSD_BEGIN].physic                                        = 0;
  parameters_[VSD_PHA - VSD_BEGIN].validity                                      = VALIDITY_ERROR;
  parameters_[VSD_PHA - VSD_BEGIN].value.float_t                                 = 0;
  parameters_[VSD_PHA - VSD_BEGIN].min                                           = 0.0;
  parameters_[VSD_PHA - VSD_BEGIN].max                                           = 999999.0;
  parameters_[VSD_PHA - VSD_BEGIN].def                                           = 0;
  parameters_[VSD_PHA - VSD_BEGIN].discret                                       = 1;
  parameters_[VSD_PHA - VSD_BEGIN].code                                          = 0;
  // Усредненная фаза выходного тока ПЧ
  parameters_[VSD_PHOUT - VSD_BEGIN].id                                          = VSD_PHOUT;
  parameters_[VSD_PHOUT - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_PHOUT - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_PHOUT - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_PHOUT - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_PHOUT - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_PHOUT - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_PHOUT - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_PHOUT - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_PHOUT - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_PHOUT - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 0
  parameters_[VSD_TEST0 - VSD_BEGIN].id                                          = VSD_TEST0;
  parameters_[VSD_TEST0 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST0 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST0 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST0 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST0 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST0 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST0 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST0 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST0 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST0 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 1
  parameters_[VSD_TEST1 - VSD_BEGIN].id                                          = VSD_TEST1;
  parameters_[VSD_TEST1 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST1 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST1 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST1 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST1 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST1 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST1 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST1 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST1 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST1 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 2
  parameters_[VSD_TEST2 - VSD_BEGIN].id                                          = VSD_TEST2;
  parameters_[VSD_TEST2 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST2 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST2 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST2 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST2 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST2 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST2 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST2 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST2 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST2 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 3
  parameters_[VSD_TEST3 - VSD_BEGIN].id                                          = VSD_TEST3;
  parameters_[VSD_TEST3 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST3 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST3 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST3 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST3 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST3 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST3 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST3 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST3 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST3 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 4
  parameters_[VSD_TEST4 - VSD_BEGIN].id                                          = VSD_TEST4;
  parameters_[VSD_TEST4 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST4 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST4 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST4 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST4 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST4 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST4 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST4 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST4 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST4 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 5
  parameters_[VSD_TEST5 - VSD_BEGIN].id                                          = VSD_TEST5;
  parameters_[VSD_TEST5 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST5 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST5 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST5 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST5 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST5 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST5 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST5 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST5 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST5 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 6
  parameters_[VSD_TEST6 - VSD_BEGIN].id                                          = VSD_TEST6;
  parameters_[VSD_TEST6 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST6 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST6 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST6 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST6 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST6 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST6 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST6 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST6 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST6 - VSD_BEGIN].code                                        = 0;
  // Тестовый регистр 7
  parameters_[VSD_TEST7 - VSD_BEGIN].id                                          = VSD_TEST7;
  parameters_[VSD_TEST7 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_TEST7 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_TEST7 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_TEST7 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_TEST7 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_TEST7 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_TEST7 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_TEST7 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_TEST7 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_TEST7 - VSD_BEGIN].code                                        = 0;
  // Выходной ток ПЧ
  parameters_[VSD_IOUT - VSD_BEGIN].id                                           = VSD_IOUT;
  parameters_[VSD_IOUT - VSD_BEGIN].access                                       = ACCESS_OPERATOR;
  parameters_[VSD_IOUT - VSD_BEGIN].operation                                    = 0;
  parameters_[VSD_IOUT - VSD_BEGIN].physic                                       = 0;
  parameters_[VSD_IOUT - VSD_BEGIN].validity                                     = VALIDITY_ERROR;
  parameters_[VSD_IOUT - VSD_BEGIN].value.float_t                                = 0;
  parameters_[VSD_IOUT - VSD_BEGIN].min                                          = 0.0;
  parameters_[VSD_IOUT - VSD_BEGIN].max                                          = 999999.0;
  parameters_[VSD_IOUT - VSD_BEGIN].def                                          = 0;
  parameters_[VSD_IOUT - VSD_BEGIN].discret                                      = 1;
  parameters_[VSD_IOUT - VSD_BEGIN].code                                         = 0;
  // Регистр ошибок инвертора
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_7;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_7 - VSD_BEGIN].code                                = 0;
  // Текущая выходная полная мощность ПЧ
  parameters_[VSD_SOUT - VSD_BEGIN].id                                           = VSD_SOUT;
  parameters_[VSD_SOUT - VSD_BEGIN].access                                       = ACCESS_OPERATOR;
  parameters_[VSD_SOUT - VSD_BEGIN].operation                                    = 0;
  parameters_[VSD_SOUT - VSD_BEGIN].physic                                       = 0;
  parameters_[VSD_SOUT - VSD_BEGIN].validity                                     = VALIDITY_ERROR;
  parameters_[VSD_SOUT - VSD_BEGIN].value.float_t                                = 0;
  parameters_[VSD_SOUT - VSD_BEGIN].min                                          = 0.0;
  parameters_[VSD_SOUT - VSD_BEGIN].max                                          = 999999.0;
  parameters_[VSD_SOUT - VSD_BEGIN].def                                          = 0;
  parameters_[VSD_SOUT - VSD_BEGIN].discret                                      = 1;
  parameters_[VSD_SOUT - VSD_BEGIN].code                                         = 0;
  // Уставка срабатывания защиты (ЗП)
  parameters_[VSD_M_IRMS - VSD_BEGIN].id                                         = VSD_M_IRMS;
  parameters_[VSD_M_IRMS - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_M_IRMS - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_M_IRMS - VSD_BEGIN].physic                                     = PHYSIC_PERCENT;
  parameters_[VSD_M_IRMS - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_M_IRMS - VSD_BEGIN].value.float_t                              = 200.0;
  parameters_[VSD_M_IRMS - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_M_IRMS - VSD_BEGIN].max                                        = 200.0;
  parameters_[VSD_M_IRMS - VSD_BEGIN].def                                        = 110.0;
  parameters_[VSD_M_IRMS - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_M_IRMS - VSD_BEGIN].code                                       = 0;
  // Постоянная времени защиты i2t двигателя
  parameters_[VSD_M_TRMS - VSD_BEGIN].id                                         = VSD_M_TRMS;
  parameters_[VSD_M_TRMS - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_M_TRMS - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_M_TRMS - VSD_BEGIN].physic                                     = PHYSIC_NUMERIC;
  parameters_[VSD_M_TRMS - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_M_TRMS - VSD_BEGIN].value.float_t                              = 30.0;
  parameters_[VSD_M_TRMS - VSD_BEGIN].min                                        = 2.0;
  parameters_[VSD_M_TRMS - VSD_BEGIN].max                                        = 4000.0;
  parameters_[VSD_M_TRMS - VSD_BEGIN].def                                        = 30.0;
  parameters_[VSD_M_TRMS - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_M_TRMS - VSD_BEGIN].code                                       = 0;
  // Максимальный угол остановки вектора в режиме
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].id                                 = VSD_OVERPWM2_ANGLE;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].def                                = 0;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_OVERPWM2_ANGLE - VSD_BEGIN].code                               = 0;
  // Степень постоянной времени отработки
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].id                                   = VSD_OVERPWM_GAIN;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_OVERPWM_GAIN - VSD_BEGIN].code                                 = 0;
  // Стартовое напряжение торможения авторотации
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].id                                    = VSD_DECEL_U_MAX;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].physic                                = PHYSIC_VOLTAGE;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].value.float_t                         = 5.0;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].min                                   = 5.0;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].max                                   = 500.0;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].def                                   = 5.0;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_DECEL_U_MAX - VSD_BEGIN].code                                  = 13;
  // Ток тепловой защиты ПЧ длительный
  parameters_[VSD_FC_IRMS - VSD_BEGIN].id                                        = VSD_FC_IRMS;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].operation                                 = 0;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].physic                                    = 0;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].value.float_t                             = 0;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].max                                       = 999999.0;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].def                                       = 0;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_FC_IRMS - VSD_BEGIN].code                                      = 0;
  // 
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].id                                  = VSD_FC_T_OVERLOAD;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].validity                            = 0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_FC_T_OVERLOAD - VSD_BEGIN].code                                = 0;
  // Ограничение тока для импульсов
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].id                                   = VSD_FC_ILIM_LONG;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_FC_ILIM_LONG - VSD_BEGIN].code                                 = 0;
  // Время импульса с общим (максимальным) токоограничением
  parameters_[VSD_FC_TLIM - VSD_BEGIN].id                                        = VSD_FC_TLIM;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].operation                                 = 0;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].physic                                    = 0;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].value.float_t                             = 0;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].max                                       = 999999.0;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].def                                       = 0;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_FC_TLIM - VSD_BEGIN].code                                      = 0;
  // Масштаб измеряемого напряжения ПЧ отн. базового 250А
  parameters_[VSD_U_SCALE - VSD_BEGIN].id                                        = VSD_U_SCALE;
  parameters_[VSD_U_SCALE - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_U_SCALE - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_U_SCALE - VSD_BEGIN].physic                                    = PHYSIC_PERCENT;
  parameters_[VSD_U_SCALE - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_U_SCALE - VSD_BEGIN].value.float_t                             = 100.0;
  parameters_[VSD_U_SCALE - VSD_BEGIN].min                                       = 10.0;
  parameters_[VSD_U_SCALE - VSD_BEGIN].max                                       = 1000.0;
  parameters_[VSD_U_SCALE - VSD_BEGIN].def                                       = 100.0;
  parameters_[VSD_U_SCALE - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_U_SCALE - VSD_BEGIN].code                                      = 13;
  // Масштаб измеряемого тока ПЧ отн. базового 250А
  parameters_[VSD_I_SCALE - VSD_BEGIN].id                                        = VSD_I_SCALE;
  parameters_[VSD_I_SCALE - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_I_SCALE - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_I_SCALE - VSD_BEGIN].physic                                    = PHYSIC_PERCENT;
  parameters_[VSD_I_SCALE - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_I_SCALE - VSD_BEGIN].value.float_t                             = 100.0;
  parameters_[VSD_I_SCALE - VSD_BEGIN].min                                       = 10.0;
  parameters_[VSD_I_SCALE - VSD_BEGIN].max                                       = 1000.0;
  parameters_[VSD_I_SCALE - VSD_BEGIN].def                                       = 100.0;
  parameters_[VSD_I_SCALE - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_I_SCALE - VSD_BEGIN].code                                      = 13;
  // Уровень быстрой токовой защиты двигателя
  parameters_[VSD_M_I_FAST - VSD_BEGIN].id                                       = VSD_M_I_FAST;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].operation                                = 0;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].physic                                   = 0;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].value.float_t                            = 0;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].max                                      = 999999.0;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].def                                      = 0;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_M_I_FAST - VSD_BEGIN].code                                     = 0;
  // Время отключения защиты двигателя после старта
  parameters_[VSD_T_BLANK - VSD_BEGIN].id                                        = VSD_T_BLANK;
  parameters_[VSD_T_BLANK - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_T_BLANK - VSD_BEGIN].operation                                 = 0;
  parameters_[VSD_T_BLANK - VSD_BEGIN].physic                                    = 0;
  parameters_[VSD_T_BLANK - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_T_BLANK - VSD_BEGIN].value.float_t                             = 0;
  parameters_[VSD_T_BLANK - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_T_BLANK - VSD_BEGIN].max                                       = 999999.0;
  parameters_[VSD_T_BLANK - VSD_BEGIN].def                                       = 0;
  parameters_[VSD_T_BLANK - VSD_BEGIN].discret                                   = 1;
  parameters_[VSD_T_BLANK - VSD_BEGIN].code                                      = 0;
  // Уровень уставки тока для ПИД-регулятора
  parameters_[VSD_PID_I_REF - VSD_BEGIN].id                                      = VSD_PID_I_REF;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].operation                               = 0;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].physic                                  = 0;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].def                                     = 0;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_PID_I_REF - VSD_BEGIN].code                                    = 0;
  // Постоянная времени для ПИД-регулятора
  parameters_[VSD_PID_T_REG - VSD_BEGIN].id                                      = VSD_PID_T_REG;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].operation                               = 0;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].physic                                  = 0;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].value.float_t                           = 0;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].max                                     = 999999.0;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].def                                     = 0;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_PID_T_REG - VSD_BEGIN].code                                    = 0;
  // Постоянная времени для ПИД-регулятора
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].id                                    = VSD_PID_T_REG_1;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_PID_T_REG_1 - VSD_BEGIN].code                                  = 0;
  // Расширенный регистр состояния инвертора 3
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_3;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_3 - VSD_BEGIN].code                                = 0;
  // Режим конфигурирования Danfoss 1-00 Не используется в проекте, только при конфигурировании
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].id                                    = VSD_CONFIG_MODE;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_CONFIG_MODE - VSD_BEGIN].code                                  = 0;
  // Время разгона Danfoss 3-41 % Активно используется в проекте
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].id                                = VSD_TIMER_DISPERSAL;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].physic                            = PHYSIC_TIME;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].value.float_t                     = 30.0;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].max                               = 1000.0;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].def                               = 30.0;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_TIMER_DISPERSAL - VSD_BEGIN].code                              = 0;
  // Время замедления Danfoss 3-42 % Активно используется в проекте
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].id                                    = VSD_TIMER_DELAY;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].physic                                = PHYSIC_TIME;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].value.float_t                         = 30.0;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].max                                   = 1000.0;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].def                                   = 30.0;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_TIMER_DELAY - VSD_BEGIN].code                                  = 0;
  // Указатель индекса для массивных параметров Danfoss 0х0008 используется для массивов параметров
  parameters_[VSD_INDEX - VSD_BEGIN].id                                          = VSD_INDEX;
  parameters_[VSD_INDEX - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_INDEX - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_INDEX - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_INDEX - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_INDEX - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_INDEX - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_INDEX - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_INDEX - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_INDEX - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_INDEX - VSD_BEGIN].code                                        = 0;
  // Единицы измерения скорости Danfoss 0-02 Не используется в проекте, только при конфигурировании
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].id                                     = VSD_UNIT_SPEED;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_UNIT_SPEED - VSD_BEGIN].code                                   = 0;
  // Характеристика момента нагрузки Danfoss 1-03 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].id                          = VSD_TORQUE_CHARACTERISTIC;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].def                         = 0;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_TORQUE_CHARACTERISTIC - VSD_BEGIN].code                        = 0;
  // Режим перегрузки Danfoss 1-04 Не используется в проекте, только при конфигурировании
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].id                                  = VSD_OVERLOAD_MODE;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_OVERLOAD_MODE - VSD_BEGIN].code                                = 0;
  // Усиление демпфирования Danfoss 1-14 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].id                                   = VSD_DAMPING_GANE;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_DAMPING_GANE - VSD_BEGIN].code                                 = 0;
  // Время фильтрации при низкой скорости Danfoss 1-15 Используется в режиме автоадаптации
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].id                          = VSD_LOW_SPEED_FILTER_TIME;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].def                         = 0;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_LOW_SPEED_FILTER_TIME - VSD_BEGIN].code                        = 0;
  // Время фильтрации при высокой скорости Danfoss 1-16 Используется в режиме автоадаптации
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].id                         = VSD_HIGH_SPEED_FILTER_TIME;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].def                        = 0;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_HIGH_SPEED_FILTER_TIME - VSD_BEGIN].code                       = 0;
  // Длительный номинальный момент двигателе Danfoss 1-26 Записывается в проекте один раз
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].id                              = VSD_RATE_TORQUE_MOTOR;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].def                             = 0;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_RATE_TORQUE_MOTOR - VSD_BEGIN].code                            = 0;
  // Сопротивление статора Danfoss 1-30 Используется в режиме автоадаптации
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].id                              = VSD_RESISTANCE_STATOR;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].def                             = 0;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_RESISTANCE_STATOR - VSD_BEGIN].code                            = 0;
  // Характеристика Uf - U Danfoss 1-55
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].id                            = VSD_UF_CHARACTERISTIC_U;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].def                           = 0;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U - VSD_BEGIN].code                          = 0;
  // Характеристика Uf - f Danfoss 1-56
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].id                            = VSD_UF_CHARACTERISTIC_F;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].def                           = 0;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_UF_CHARACTERISTIC_F - VSD_BEGIN].code                          = 0;
  // Подавление резонанса % Danfoss 1-64 Не используется в проекте, только при конфигурировании
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].id                               = VSD_RESONANCE_REMOVE;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].def                              = 0;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_RESONANCE_REMOVE - VSD_BEGIN].code                             = 0;
  // Постаянная времени подавления Danfoss 1-65 Не используется в проекте, только при конфигурировании Novomet 0х0067
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].id                                 = VSD_RESONANCE_TIME;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].def                                = 0;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_RESONANCE_TIME - VSD_BEGIN].code                               = 0;
  // Минимальный ток при низкой скорости Danfoss 1-66 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].id                          = VSD_MIN_CURRENT_LOW_SPEED;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].def                         = 0;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_MIN_CURRENT_LOW_SPEED - VSD_BEGIN].code                        = 0;
  // Тип запуска вентиля Danfoss 1-70 Не используется в проекте, только при конфигурировании
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].id                                  = VSD_PM_START_MODE;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_PM_START_MODE - VSD_BEGIN].code                                = 0;
  // Задержка запуска Danfoss 1-71 Используется в защите от невыхода на заданную частоту
  parameters_[VSD_START_DELAY - VSD_BEGIN].id                                    = VSD_START_DELAY;
  parameters_[VSD_START_DELAY - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_START_DELAY - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_START_DELAY - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_START_DELAY - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_START_DELAY - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_START_DELAY - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_START_DELAY - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_START_DELAY - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_START_DELAY - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_START_DELAY - VSD_BEGIN].code                                  = 0;
  // Функция запуска Danfoss 1-72 Не используется в проекте, только при конфигурировании
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].id                                 = VSD_START_FUNCTION;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].def                                = 0;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_START_FUNCTION - VSD_BEGIN].code                               = 0;
  // Функция при остановке Danfoss 1-80 Не используется в проекте, только при конфигурировании
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].id                                  = VSD_STOP_FUNCTION;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STOP_FUNCTION - VSD_BEGIN].code                                = 0;
  // Минимальная скорость для функции при останове Danfoss 1-82 Не используется в проекте, только при конфигурировании
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].id                                     = VSD_STOP_SPEED;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_STOP_SPEED - VSD_BEGIN].code                                   = 0;
  // Контроль термистора двигателя Danfoss 1-90 Не используется в проекте, только при конфигурировании
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].id                          = VSD_CONTROL_TERMISTOR_MTR;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].def                         = 0;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_CONTROL_TERMISTOR_MTR - VSD_BEGIN].code                        = 0;
  // Вход термистора Danfoss 1-93 Не используется в проекте, только при конфигурировании
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].id                            = VSD_THERMISTOR_RESOURCE;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].def                           = 0;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_THERMISTOR_RESOURCE - VSD_BEGIN].code                          = 0;
  // Начальный ток Danfoss 2-06 Не используется в проекте, только при конфигурировании
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].id                                = VSD_PARKING_CURRENT;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].def                               = 0;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_PARKING_CURRENT - VSD_BEGIN].code                              = 0;
  // Длительность действия начального ток Danfoss 2-07 В проекте есть, но отключено, используется при конфигурировании
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].id                                   = VSD_PARKING_TIME;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].physic                               = PHYSIC_TIME;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].value.float_t                        = 3.0;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].min                                  = 0.1;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].max                                  = 60.0;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].def                                  = 3.0;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].discret                              = 10;
  parameters_[VSD_PARKING_TIME - VSD_BEGIN].code                                 = 13;
  // Контроль перенапряжения Danfoss 2-17 Не используется в проекте, только при конфигурировании
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].id                            = VSD_OVERVOLTAGE_CONTROL;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].def                           = 0;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_OVERVOLTAGE_CONTROL - VSD_BEGIN].code                          = 0;
  // Минимальное задание Danfoss 3-02 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].id                                  = VSD_MIN_REFERENCE;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_MIN_REFERENCE - VSD_BEGIN].code                                = 0;
  // Максимальное задани Danfoss 3-03 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].id                                  = VSD_MAX_REFERENCE;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_MAX_REFERENCE - VSD_BEGIN].code                                = 0;
  // Ресурс задания 1 Danfoss 3-15 Не используется в проекте, только при конфигурировании
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].id                                = VSD_RESOURCE_TASK_1;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].def                               = 0;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_RESOURCE_TASK_1 - VSD_BEGIN].code                              = 0;
  // Ресурс задания 2 Danfoss 3-16 Не используется в проекте, только при конфигурировании
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].id                                = VSD_RESOURCE_TASK_2;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].def                               = 0;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_RESOURCE_TASK_2 - VSD_BEGIN].code                              = 0;
  // Ресурс задания 3 Danfoss 3-17 Не используется в проекте, только при конфигурировании
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].id                                = VSD_RESOURCE_TASK_3;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].def                               = 0;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_RESOURCE_TASK_3 - VSD_BEGIN].code                              = 0;
  // Тип изменения скорости Danfoss 3-40 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].id                              = VSD_TYPE_SPEED_CHANGE;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].def                             = 0;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_TYPE_SPEED_CHANGE - VSD_BEGIN].code                            = 0;
  // Время разгона фиксированной скорости Danfoss 3-80 Используется в проекте один раз
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].id                           = VSD_TIMER_DISP_FIX_SPEED;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].def                          = 0;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_TIMER_DISP_FIX_SPEED - VSD_BEGIN].code                         = 0;
  // Время замедления фиксированной скорости Danfoss 3-81 Используется в проекте один раз
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].id                          = VSD_TIMER_DELAY_FIX_SPEED;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].def                         = 0;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_TIMER_DELAY_FIX_SPEED - VSD_BEGIN].code                        = 0;
  // Ограничение момента Danfoss 4-16 % Используется в защитах ЧРП. Интерфейс
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].id                                   = VSD_TORQUE_LIMIT;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].physic                               = PHYSIC_PERCENT;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].value.float_t                        = 160.0;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].max                                  = 1000.0;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].def                                  = 160.0;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].discret                              = 10;
  parameters_[VSD_TORQUE_LIMIT - VSD_BEGIN].code                                 = 13;
  // Ограничение момента в режиме генератора Danfoss 4-17 % Не используется в проекте, только при конфигурировании
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].id                               = VSD_TORQUE_LIMIT_GEN;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].def                              = 0;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_TORQUE_LIMIT_GEN - VSD_BEGIN].code                             = 0;
  // Предел тока Danfoss 4-18 %
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].id                                  = VSD_CURRENT_LIMIT;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].physic                              = PHYSIC_PERCENT;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].value.float_t                       = 160.0;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].max                                 = 1000.0;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].def                                 = 160.0;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].discret                             = 10;
  parameters_[VSD_CURRENT_LIMIT - VSD_BEGIN].code                                = 0;
  // Максимальная выходная частота Danfoss 4-19 Используется в проекте
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].id                           = VSD_MAX_OUTPUT_FREQUENCY;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].def                          = 0;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_MAX_OUTPUT_FREQUENCY - VSD_BEGIN].code                         = 0;
  // Реакция на ошибку обратной связи Danfoss 4-30 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].id                         = VSD_MTR_FEEDBACK_LOSS_FUNC;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].def                        = 0;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_MTR_FEEDBACK_LOSS_FUNC - VSD_BEGIN].code                       = 0;
  // Реакция на ошибку задания частоты Danfoss 4-34 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].id                           = VSD_TRACK_ERROR_FUNCTION;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].def                          = 0;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_TRACK_ERROR_FUNCTION - VSD_BEGIN].code                         = 0;
  // Величина несоответствия частота Danfoss 4-35 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].id                                    = VSD_TRACK_ERROR;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_TRACK_ERROR - VSD_BEGIN].code                                  = 0;
  // Величина несоответствия частоты Danfoss 4-36 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].id                            = VSD_TRACK_ERROR_TIMEOUT;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].def                           = 0;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_TRACK_ERROR_TIMEOUT - VSD_BEGIN].code                          = 0;
  // Величина несоответствия частоты при разгоне Danfoss 4-37 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].id                            = VSD_TRACK_ERROR_RAMPING;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].def                           = 0;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_TRACK_ERROR_RAMPING - VSD_BEGIN].code                          = 0;
  // Задержка срабатывания при несоответствии частоты при разгоне Danfoss 4-38 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].id                          = VSD_TRACK_ERROR_RAMP_TIME;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].def                         = 0;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_TRACK_ERROR_RAMP_TIME - VSD_BEGIN].code                        = 0;
  // Tracking Error After Ramping Timeout Danfoss 4-39 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].id                         = VSD_TRACK_ERROR_AFTER_RAMP;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].def                        = 0;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_TRACK_ERROR_AFTER_RAMP - VSD_BEGIN].code                       = 0;
  // Danfoss 4-50 Не используется в проекте, только при конфигурировании
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].id                            = VSD_WARNING_CURRENT_LOW;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].def                           = 0;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_WARNING_CURRENT_LOW - VSD_BEGIN].code                          = 0;
  // Danfoss 4-51 Не используется в проекте, только при конфигурировании
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].id                           = VSD_WARNING_CURRENT_HIGH;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].physic                       = 0;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].def                          = 0;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_WARNING_CURRENT_HIGH - VSD_BEGIN].code                         = 0;
  // Минимальная скорость Danfoss 4-52 об/мин Не используется в проекте, только при конфигурировании
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].id                              = VSD_WARNING_SPEED_LOW;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].def                             = 0;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_WARNING_SPEED_LOW - VSD_BEGIN].code                            = 0;
  // Режим клеммы 27 Danfoss 5-01 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].id                               = VSD_TERMINAL_27_MODE;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].def                              = 0;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_TERMINAL_27_MODE - VSD_BEGIN].code                             = 0;
  // Режим клеммы 29 Danfoss 5-02 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].id                               = VSD_TERMINAL_29_MODE;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].operation                        = 0;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].physic                           = 0;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].value.float_t                    = 0;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].max                              = 999999.0;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].def                              = 0;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_TERMINAL_29_MODE - VSD_BEGIN].code                             = 0;
  // Цифровой вход 18 Danfoss 5-10 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DI_18 - VSD_BEGIN].id                                          = VSD_DI_18;
  parameters_[VSD_DI_18 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_DI_18 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_DI_18 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_DI_18 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_DI_18 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_DI_18 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_DI_18 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_DI_18 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_DI_18 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_DI_18 - VSD_BEGIN].code                                        = 0;
  // Цифровой вход 19 Danfoss 5-11 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DI_19 - VSD_BEGIN].id                                          = VSD_DI_19;
  parameters_[VSD_DI_19 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_DI_19 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_DI_19 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_DI_19 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_DI_19 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_DI_19 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_DI_19 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_DI_19 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_DI_19 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_DI_19 - VSD_BEGIN].code                                        = 0;
  // Цифровой вход 27 Danfoss 5-12 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DI_27 - VSD_BEGIN].id                                          = VSD_DI_27;
  parameters_[VSD_DI_27 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_DI_27 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_DI_27 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_DI_27 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_DI_27 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_DI_27 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_DI_27 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_DI_27 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_DI_27 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_DI_27 - VSD_BEGIN].code                                        = 0;
  // Цифровой вход 32 Danfoss 5-14 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DI_32 - VSD_BEGIN].id                                          = VSD_DI_32;
  parameters_[VSD_DI_32 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_DI_32 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_DI_32 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_DI_32 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_DI_32 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_DI_32 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_DI_32 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_DI_32 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_DI_32 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_DI_32 - VSD_BEGIN].code                                        = 0;
  // Цифровой вход 33 Danfoss 5-15 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DI_33 - VSD_BEGIN].id                                          = VSD_DI_33;
  parameters_[VSD_DI_33 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_DI_33 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_DI_33 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_DI_33 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_DI_33 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_DI_33 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_DI_33 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_DI_33 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_DI_33 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_DI_33 - VSD_BEGIN].code                                        = 0;
  // Клемма 27 Цифровой вход Danfoss 5-30 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].id                                 = VSD_TERMINAL_27_DI;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].def                                = 0;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_TERMINAL_27_DI - VSD_BEGIN].code                               = 0;
  // Клемма 29 Цифровой вход Danfoss 5-31 Не используется в проекте, только при конфигурировании
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].id                                 = VSD_TERMINAL_29_DI;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].def                                = 0;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_TERMINAL_29_DI - VSD_BEGIN].code                               = 0;
  // Реле функций Danfoss 5-40 Не используется в проекте, только при конфигурировании
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].id                                  = VSD_FUNCTION_RELE;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_FUNCTION_RELE - VSD_BEGIN].code                                = 0;
  // Нипонятно Danfoss 5-41 Не используется в проекте, только при конфигурировании
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].id                                 = VSD_ON_DELAY_RELAY;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].def                                = 0;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_ON_DELAY_RELAY - VSD_BEGIN].code                               = 0;
  // Клемма 42 аналоговый вход Danfoss 6-50 Не используется в проекте, только при конфигурировании
  parameters_[VSD_42_AO - VSD_BEGIN].id                                          = VSD_42_AO;
  parameters_[VSD_42_AO - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_42_AO - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_42_AO - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_42_AO - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_42_AO - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_42_AO - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_42_AO - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_42_AO - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_42_AO - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_42_AO - VSD_BEGIN].code                                        = 0;
  // Режим контроллера SL Danfoss 13-00 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].id                             = VSD_SL_CONTROLLER_MODE;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].operation                      = 0;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].physic                         = 0;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].value.float_t                  = 0;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].max                            = 999999.0;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].def                            = 0;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_SL_CONTROLLER_MODE - VSD_BEGIN].code                           = 0;
  // Событие запуска Danfoss 13-01 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].id                                 = VSD_SL_START_EVENT;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].def                                = 0;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_SL_START_EVENT - VSD_BEGIN].code                               = 0;
  // Событие останова Danfoss 13-02 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].id                                  = VSD_SL_STOP_EVENT;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_SL_STOP_EVENT - VSD_BEGIN].code                                = 0;
  // Сброс настроек компараторов Danfoss 13-03 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_RESET - VSD_BEGIN].id                                       = VSD_SL_RESET;
  parameters_[VSD_SL_RESET - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_SL_RESET - VSD_BEGIN].operation                                = 0;
  parameters_[VSD_SL_RESET - VSD_BEGIN].physic                                   = 0;
  parameters_[VSD_SL_RESET - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_SL_RESET - VSD_BEGIN].value.float_t                            = 0;
  parameters_[VSD_SL_RESET - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_SL_RESET - VSD_BEGIN].max                                      = 999999.0;
  parameters_[VSD_SL_RESET - VSD_BEGIN].def                                      = 0;
  parameters_[VSD_SL_RESET - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_SL_RESET - VSD_BEGIN].code                                     = 0;
  // Операнд сравнения компаратора Danfoss 13-10 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_10 - VSD_BEGIN].id                                          = VSD_SL_10;
  parameters_[VSD_SL_10 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_10 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_10 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_10 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_10 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_10 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_10 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_10 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_10 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_10 - VSD_BEGIN].code                                        = 0;
  // Оператор сравнения компаратора Danfoss 13-11 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_11 - VSD_BEGIN].id                                          = VSD_SL_11;
  parameters_[VSD_SL_11 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_11 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_11 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_11 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_11 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_11 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_11 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_11 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_11 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_11 - VSD_BEGIN].code                                        = 0;
  // Значение компаратора Danfoss 13-12 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_12 - VSD_BEGIN].id                                          = VSD_SL_12;
  parameters_[VSD_SL_12 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_12 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_12 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_12 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_12 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_12 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_12 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_12 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_12 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_12 - VSD_BEGIN].code                                        = 0;
  // RS-FF Operand S Danfoss 13-15 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_15 - VSD_BEGIN].id                                          = VSD_SL_15;
  parameters_[VSD_SL_15 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_15 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_15 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_15 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_15 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_15 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_15 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_15 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_15 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_15 - VSD_BEGIN].code                                        = 0;
  // RS-FF Operand R Danfoss 13-16 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_16 - VSD_BEGIN].id                                          = VSD_SL_16;
  parameters_[VSD_SL_16 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_16 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_16 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_16 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_16 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_16 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_16 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_16 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_16 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_16 - VSD_BEGIN].code                                        = 0;
  // Временная задержка Danfoss 13-20 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_20 - VSD_BEGIN].id                                          = VSD_SL_20;
  parameters_[VSD_SL_20 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_20 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_20 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_20 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_20 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_20 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_20 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_20 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_20 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_20 - VSD_BEGIN].code                                        = 0;
  // Булева переменная логического соотношения 1 Danfoss 13-40 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_40 - VSD_BEGIN].id                                          = VSD_SL_40;
  parameters_[VSD_SL_40 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_40 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_40 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_40 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_40 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_40 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_40 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_40 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_40 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_40 - VSD_BEGIN].code                                        = 0;
  // Оператор логического соотношения 1 Danfoss 13-41 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_41 - VSD_BEGIN].id                                          = VSD_SL_41;
  parameters_[VSD_SL_41 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_41 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_41 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_41 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_41 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_41 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_41 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_41 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_41 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_41 - VSD_BEGIN].code                                        = 0;
  // Булева переменная логического соотношения 2 Danfoss 13-42 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_42 - VSD_BEGIN].id                                          = VSD_SL_42;
  parameters_[VSD_SL_42 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_42 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_42 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_42 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_42 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_42 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_42 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_42 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_42 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_42 - VSD_BEGIN].code                                        = 0;
  // Logic Rule Operator 2 Danfoss 13-43 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_43 - VSD_BEGIN].id                                          = VSD_SL_43;
  parameters_[VSD_SL_43 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_43 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_43 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_43 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_43 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_43 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_43 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_43 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_43 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_43 - VSD_BEGIN].code                                        = 0;
  // Logic Rule Boolean 3 Danfoss 13-44 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_44 - VSD_BEGIN].id                                          = VSD_SL_44;
  parameters_[VSD_SL_44 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_44 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_44 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_44 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_44 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_44 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_44 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_44 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_44 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_44 - VSD_BEGIN].code                                        = 0;
  // Событие контроллера SL Danfoss 13-51 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_51 - VSD_BEGIN].id                                          = VSD_SL_51;
  parameters_[VSD_SL_51 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_51 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_51 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_51 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_51 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_51 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_51 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_51 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_51 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_51 - VSD_BEGIN].code                                        = 0;
  // Действие контроллера SL Danfoss 13-52 Не используется в проекте, только при конфигурировании
  parameters_[VSD_SL_52 - VSD_BEGIN].id                                          = VSD_SL_52;
  parameters_[VSD_SL_52 - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_SL_52 - VSD_BEGIN].operation                                   = 0;
  parameters_[VSD_SL_52 - VSD_BEGIN].physic                                      = 0;
  parameters_[VSD_SL_52 - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_SL_52 - VSD_BEGIN].value.float_t                               = 0;
  parameters_[VSD_SL_52 - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_SL_52 - VSD_BEGIN].max                                         = 999999.0;
  parameters_[VSD_SL_52 - VSD_BEGIN].def                                         = 0;
  parameters_[VSD_SL_52 - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_SL_52 - VSD_BEGIN].code                                        = 0;
  // Частота коммутации Danfoss 14-01 Используется в проекте Novomet 0х003C IREG_FREQ_PWM
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].id                            = VSD_SWITCHING_FREQUENCY;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].physic                        = PHYSIC_FREQUENCY;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].value.float_t                 = 1.0;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].def                           = 1.0;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].discret                       = 10;
  parameters_[VSD_SWITCHING_FREQUENCY - VSD_BEGIN].code                          = 0;
  // Сверхмодуляция Danfoss 14-03 Не используется в проекте, только при конфигурировании
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].id                                 = VSD_OVERMODULATION;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].def                                = 0;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_OVERMODULATION - VSD_BEGIN].code                               = 0;
  // Компенсация задержки Danfoss 14-06 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].id                         = VSD_DEAD_TIME_COMPENSATION;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].def                        = 0;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_DEAD_TIME_COMPENSATION - VSD_BEGIN].code                       = 0;
  // Отказ питания Danfoss 14-10 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].id                                  = VSD_MAINS_FAILURE;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].operation                           = 0;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].physic                              = 0;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].value.float_t                       = 0;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].max                                 = 999999.0;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].def                                 = 0;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_MAINS_FAILURE - VSD_BEGIN].code                                = 0;
  // Напряжение сети при отказе питания Danfoss 14-11 Не используется в проекте, только при конфигурировании
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].id                          = VSD_MAINS_VOLTAGE_FAILURE;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].value.float_t               = 250.0;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].min                         = 180.0;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].max                         = 600.0;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].def                         = 250.0;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_MAINS_VOLTAGE_FAILURE - VSD_BEGIN].code                        = 0;
  // Режим сброса Danfoss 14-20 Не используется в проекте, только при конфигурировании
  parameters_[VSD_RESET_MODE - VSD_BEGIN].id                                     = VSD_RESET_MODE;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_RESET_MODE - VSD_BEGIN].code                                   = 0;
  // Время автоматического перезапуск Danfoss 14-21 Не используется в проекте, только при конфигурировании
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].id                                 = VSD_AUTOSTART_TIME;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].def                                = 0;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_AUTOSTART_TIME - VSD_BEGIN].code                               = 0;
  // Задержка перед выключение при пределе тока Danfoss 14-24 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].id                            = VSD_DELAY_CURRENT_LIMIT;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].physic                        = 0;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].def                           = 0;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_DELAY_CURRENT_LIMIT - VSD_BEGIN].code                          = 0;
  // Задержка перед выключение при пределе моменте Danfoss 14-25 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].id                             = VSD_DELAY_TORQUE_LIMIT;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].operation                      = 0;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].physic                         = 0;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].value.float_t                  = 0;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].max                            = 999999.0;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].def                            = 0;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_DELAY_TORQUE_LIMIT - VSD_BEGIN].code                           = 0;
  // Время фильтра регулятора тока Danfoss 14-32 Используется в проекте, CalcParam()
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].id                         = VSD_FIL_TIME_CURRENT_LIMIT;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].def                        = 0;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_FIL_TIME_CURRENT_LIMIT - VSD_BEGIN].code                       = 0;
  // Компенсация напряжения постоянного тока Danfoss 14-51 Не используется в проекте, только при конфигурировании
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].id                                = VSD_DC_COMPENSATION;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].def                               = 0;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_DC_COMPENSATION - VSD_BEGIN].code                              = 0;
  // Управление вентилятором Danfoss 14-52 Не используется в проекте, только при конфигурировании
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].id                                    = VSD_FAN_CONTROL;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].operation                             = 0;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].physic                                = 0;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].value.float_t                         = 0;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].max                                   = 999999.0;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].def                                   = 0;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_FAN_CONTROL - VSD_BEGIN].code                                  = 0;
  // Выходной фильтр Danfoss 14-55 Используется в проекте, интерфейс
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].id                                     = VSD_OUT_FILTER;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_OUT_FILTER - VSD_BEGIN].code                                   = 0;
  // Сброс аварий Danfoss 14-90 Не используется в проекте, только при конфигурировании
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].id                                     = VSD_FAIL_RESET;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_FAIL_RESET - VSD_BEGIN].code                                   = 0;
  // Версия ПО ЧРП Danfoss 15-43 Используется в проекте
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].id                                   = VSD_SOFT_VERSION;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_SOFT_VERSION - VSD_BEGIN].code                                 = 0;
  // Командное слово Danfoss 16-00 Используется в проекте
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].id                                   = VSD_DELETE_10243;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_DELETE_10243 - VSD_BEGIN].code                                 = 0;
  // Слово состояния Danfoss 16-03 Активно используется в проекте
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].id                                   = VSD_DELETE_10244;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_DELETE_10244 - VSD_BEGIN].code                                 = 0;
  // Выходной ток средний
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].id                              = VSD_OUT_CURRENT_MOTOR;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].operation                       = 0;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].physic                          = 0;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].value.float_t                   = 0;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].max                             = 999999.0;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].def                             = 0;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_OUT_CURRENT_MOTOR - VSD_BEGIN].code                            = 0;
  // Температура радиатора Danfoss 16-34 Используется в проекте
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].id                           = VSD_RADIATOR_TEMPERATURE;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].operation                    = 0;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].physic                       = PHYSIC_TEMPERATURE;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].value.float_t                = 0;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].def                          = 0;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_RADIATOR_TEMPERATURE - VSD_BEGIN].code                         = 0;
  // Температура платы управления Danfoss 16-39 Используется в проекте
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].id                            = VSD_CONTROL_TEMPERATURE;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].operation                     = 0;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].physic                        = PHYSIC_TEMPERATURE;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].value.float_t                 = 0;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].max                           = 999999.0;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].def                           = 0;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_CONTROL_TEMPERATURE - VSD_BEGIN].code                          = 0;
  // Цифровоый вход ПЧ Danfoss 16-60 Используется в проекте
  parameters_[VSD_DI_VSD - VSD_BEGIN].id                                         = VSD_DI_VSD;
  parameters_[VSD_DI_VSD - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_DI_VSD - VSD_BEGIN].operation                                  = 0;
  parameters_[VSD_DI_VSD - VSD_BEGIN].physic                                     = 0;
  parameters_[VSD_DI_VSD - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_DI_VSD - VSD_BEGIN].value.float_t                              = 0;
  parameters_[VSD_DI_VSD - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_DI_VSD - VSD_BEGIN].max                                        = 999999.0;
  parameters_[VSD_DI_VSD - VSD_BEGIN].def                                        = 0;
  parameters_[VSD_DI_VSD - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_DI_VSD - VSD_BEGIN].code                                       = 0;
  // Номер последней аварии и предупреждения Danfoss 16-87 Используется в проекте
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].id                                     = VSD_LAST_ALARM;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].operation                              = 0;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].physic                                 = 0;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].value.float_t                          = 0;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].min                                    = 0.0;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].max                                    = 999999.0;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].def                                    = 0;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_LAST_ALARM - VSD_BEGIN].code                                   = 0;
  // Слово Аварии 1 Danfoss 16-90 Используется в проекте
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].id                                   = VSD_ALARM_WORD_1;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_ALARM_WORD_1 - VSD_BEGIN].code                                 = 0;
  // Слово Аварии 2 Danfoss 16-91 Используется в проекте
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].id                                   = VSD_ALARM_WORD_2;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].operation                            = 0;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].physic                               = 0;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].max                                  = 999999.0;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].def                                  = 0;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_ALARM_WORD_2 - VSD_BEGIN].code                                 = 0;
  // Слово предупреждения 1 Danfoss 16-92 Используется в проекте
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].id                                 = VSD_WARNING_WORD_1;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].def                                = 0;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_WARNING_WORD_1 - VSD_BEGIN].code                               = 0;
  // Слово предупреждения 2 Danfoss 16-93 Используется в проекте
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].id                                 = VSD_WARNING_WORD_2;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].operation                          = 0;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].physic                             = 0;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].max                                = 999999.0;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].def                                = 0;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_WARNING_WORD_2 - VSD_BEGIN].code                               = 0;
  // Время применения высокого пускового момента Danfoss 30-20 Не используется в проекте, только при конфигурировании
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].id                         = VSD_HIGH_START_TORQUE_TIME;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].operation                  = 0;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].physic                     = 0;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].def                        = 0;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_HIGH_START_TORQUE_TIME - VSD_BEGIN].code                       = 0;
  // Пусковой ток в % от номинального Danfoss 30-21 Не используется в проекте, только при конфигурировании
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].id                      = VSD_HIGH_START_TORQUE_CURRENT;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].operation               = 0;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].physic                  = 0;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].validity                = VALIDITY_ERROR;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].value.float_t           = 0;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].min                     = 0.0;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].max                     = 999999.0;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].def                     = 0;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].discret                 = 1;
  parameters_[VSD_HIGH_START_TORQUE_CURRENT - VSD_BEGIN].code                    = 0;
  // Защита блокировки ротора Danfoss 30-22 Не используется в проекте, только при конфигурировании
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].id                          = VSD_LOCK_ROTOR_PROTECTION;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].operation                   = 0;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].physic                      = 0;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].def                         = 0;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_LOCK_ROTOR_PROTECTION - VSD_BEGIN].code                        = 0;
  // Время задержки аварии блокировки ротора Danfoss 30-23 Не используется в проекте, только при конфигурировании
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].id                                = VSD_LOCK_ROTOR_TIME;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].operation                         = 0;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].physic                            = 0;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].value.float_t                     = 0;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].max                               = 999999.0;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].def                               = 0;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_LOCK_ROTOR_TIME - VSD_BEGIN].code                              = 0;
  // Темп набора частоты
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].id                                   = VSD_TEMP_SPEEDUP;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].physic                               = PHYSIC_TEMP;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].value.float_t                        = 0;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].max                                  = 100.0;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].def                                  = 1.0;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].discret                              = 100;
  parameters_[VSD_TEMP_SPEEDUP - VSD_BEGIN].code                                 = 0;
  // Темп снижения частоты
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].id                                 = VSD_TEMP_SPEEDDOWN;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].physic                             = PHYSIC_TEMP;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].value.float_t                      = 0;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].max                                = 100.0;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].def                                = 1.0;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].discret                            = 100;
  parameters_[VSD_TEMP_SPEEDDOWN - VSD_BEGIN].code                               = 0;
  // 
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].id                         = VSD_RADIATOR_TEMPERATURE_1;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].operation                  = OPERATION_READ;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].physic                     = PHYSIC_TEMPERATURE;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].value.float_t              = 0;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].min                        = 0.0;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].max                        = 999999.0;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].def                        = 0;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].discret                    = 1;
  parameters_[VSD_RADIATOR_TEMPERATURE_1 - VSD_BEGIN].code                       = 0;
  // 
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].id                          = VSD_CONTROL_TEMPERATURE_1;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].operation                   = OPERATION_READ;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].physic                      = PHYSIC_TEMPERATURE;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].value.float_t               = 0;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].min                         = 0.0;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].max                         = 999999.0;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].def                         = 0;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_CONTROL_TEMPERATURE_1 - VSD_BEGIN].code                        = 0;
  // Состояние работы ЧРП Эталон, 0 останов 1 в работе
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].id                                = VSD_ETALON_ON_STATE;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].operation                         = OPERATION_READ;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].value.float_t                     = 0.0;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].max                               = 1.0;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].def                               = 0.0;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_ETALON_ON_STATE - VSD_BEGIN].code                              = 0;
  // Состояние останова ЧРП Эталон, 0 в работе 1 останов
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].id                               = VSD_ETALON_OFF_STATE;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].operation                        = OPERATION_READ;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].physic                           = PHYSIC_NUMERIC;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].value.float_t                    = 0.0;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].max                              = 1.0;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].def                              = 0.0;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_ETALON_OFF_STATE - VSD_BEGIN].code                             = 0;
  // Коэффициент U по подхвату
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].id                                      = VSD_PICKUP_KU;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].physic                                  = PHYSIC_PERCENT;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].value.float_t                           = 0.4;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].min                                     = 0.3;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].max                                     = 0.8;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].def                                     = 0.4;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].discret                                 = 10;
  parameters_[VSD_PICKUP_KU - VSD_BEGIN].code                                    = 0;
  // Контроль турбинного вращения
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].id                              = VSD_ENGINE_DECEL_MODE;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].value.float_t                   = 1.0;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].max                             = 2.0;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].def                             = 1.0;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_ENGINE_DECEL_MODE - VSD_BEGIN].code                            = 0;
  // Коэффициент мгновенной токовой защиты
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].id                                     = VSD_BLDC_K_MTZ;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].operation                              = OPERATION_WRITE;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].physic                                 = PHYSIC_NUMERIC;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].value.float_t                          = 2.0;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].min                                    = 1.0;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].max                                    = 2.5;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].def                                    = 2.0;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].discret                                = 10;
  parameters_[VSD_BLDC_K_MTZ - VSD_BEGIN].code                                   = 0;
  // Коэффициент коррекции напряжения Uab
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].id                             = VSD_COEF_VOLTAGE_IN_AB;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].max                            = 1.5;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_VOLTAGE_IN_AB - VSD_BEGIN].code                           = 0;
  // Коэффициент коррекции напряжения Ubс
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].id                             = VSD_COEF_VOLTAGE_IN_BC;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].max                            = 1.5;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_VOLTAGE_IN_BC - VSD_BEGIN].code                           = 0;
  // Коэффициент коррекции напряжения Uсa
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].id                             = VSD_COEF_VOLTAGE_IN_CA;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].max                            = 1.5;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_VOLTAGE_IN_CA - VSD_BEGIN].code                           = 0;
  // Коэффициент коррекции напряжения Udc
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].id                             = VSD_COEF_VOLTAGE_IN_DC;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].max                            = 2.0;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_VOLTAGE_IN_DC - VSD_BEGIN].code                           = 0;
  // Коэффициент коррекции тока Idc
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].id                             = VSD_COEF_CURRENT_IN_DC;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].max                            = 1.5;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_CURRENT_IN_DC - VSD_BEGIN].code                           = 0;
  // Коэф. корр. показ.напряжения Uвых
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].id                             = VSD_COEF_VOLTAGE_OUT_1;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].max                            = 1.5;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_VOLTAGE_OUT_1 - VSD_BEGIN].code                           = 0;
  // Коэффициент корр.напряжения Uвых
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].id                             = VSD_COEF_VOLTAGE_OUT_2;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].min                            = 0.5;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].max                            = 1.05;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].discret                        = 100;
  parameters_[VSD_COEF_VOLTAGE_OUT_2 - VSD_BEGIN].code                           = 0;
  // Напряжение отпайки
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].id                          = VSD_TRANS_VOLTAGE_TAP_OFF;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].physic                      = PHYSIC_VOLTAGE;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].value.float_t               = 3950.0;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].min                         = 380.0;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].max                         = 5000.0;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].def                         = 3950.0;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_TRANS_VOLTAGE_TAP_OFF - VSD_BEGIN].code                        = 0;
  // Глубина спуска
  parameters_[VSD_DEPTH - VSD_BEGIN].id                                          = VSD_DEPTH;
  parameters_[VSD_DEPTH - VSD_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[VSD_DEPTH - VSD_BEGIN].operation                                   = OPERATION_WRITE;
  parameters_[VSD_DEPTH - VSD_BEGIN].physic                                      = PHYSIC_LENGHT;
  parameters_[VSD_DEPTH - VSD_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[VSD_DEPTH - VSD_BEGIN].value.float_t                               = 2000.0;
  parameters_[VSD_DEPTH - VSD_BEGIN].min                                         = 0.0;
  parameters_[VSD_DEPTH - VSD_BEGIN].max                                         = 5000.0;
  parameters_[VSD_DEPTH - VSD_BEGIN].def                                         = 2000.0;
  parameters_[VSD_DEPTH - VSD_BEGIN].discret                                     = 1;
  parameters_[VSD_DEPTH - VSD_BEGIN].code                                        = 0;
  // Быстрый останов
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].id                                = VSD_ETALON_FAST_OFF;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].value.float_t                     = 0.0;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].max                               = 1.0;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].def                               = 0.0;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_ETALON_FAST_OFF - VSD_BEGIN].code                              = 0;
  // Сброс аварии
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].id                                  = VSD_ETALON_UNLOCK;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].value.float_t                       = 0.0;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].max                                 = 1.0;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].def                                 = 0.0;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_ETALON_UNLOCK - VSD_BEGIN].code                                = 0;
  // Запуск
  parameters_[VSD_ON - VSD_BEGIN].id                                             = VSD_ON;
  parameters_[VSD_ON - VSD_BEGIN].access                                         = ACCESS_OPERATOR;
  parameters_[VSD_ON - VSD_BEGIN].operation                                      = OPERATION_WRITE;
  parameters_[VSD_ON - VSD_BEGIN].physic                                         = PHYSIC_NUMERIC;
  parameters_[VSD_ON - VSD_BEGIN].validity                                       = VALIDITY_ERROR;
  parameters_[VSD_ON - VSD_BEGIN].value.float_t                                  = 0.0;
  parameters_[VSD_ON - VSD_BEGIN].min                                            = 0.0;
  parameters_[VSD_ON - VSD_BEGIN].max                                            = 1.0;
  parameters_[VSD_ON - VSD_BEGIN].def                                            = 0.0;
  parameters_[VSD_ON - VSD_BEGIN].discret                                        = 1;
  parameters_[VSD_ON - VSD_BEGIN].code                                           = 0;
  // Останов
  parameters_[VSD_OFF - VSD_BEGIN].id                                            = VSD_OFF;
  parameters_[VSD_OFF - VSD_BEGIN].access                                        = ACCESS_OPERATOR;
  parameters_[VSD_OFF - VSD_BEGIN].operation                                     = OPERATION_WRITE;
  parameters_[VSD_OFF - VSD_BEGIN].physic                                        = PHYSIC_NUMERIC;
  parameters_[VSD_OFF - VSD_BEGIN].validity                                      = VALIDITY_ERROR;
  parameters_[VSD_OFF - VSD_BEGIN].value.float_t                                 = 0.0;
  parameters_[VSD_OFF - VSD_BEGIN].min                                           = 0.0;
  parameters_[VSD_OFF - VSD_BEGIN].max                                           = 1.0;
  parameters_[VSD_OFF - VSD_BEGIN].def                                           = 0.0;
  parameters_[VSD_OFF - VSD_BEGIN].discret                                       = 1;
  parameters_[VSD_OFF - VSD_BEGIN].code                                          = 0;
  // Сброс уставок по умолчанию
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].id                                   = VSD_ETALON_RESET;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].value.float_t                        = 0.0;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].max                                  = 1.0;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].def                                  = 0.0;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_ETALON_RESET - VSD_BEGIN].code                                 = 0;
  // Предельная рабочая частота
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].id                             = VSD_BLDC_MAX_WORK_FREQ;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].physic                         = PHYSIC_FREQUENCY;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].value.float_t                  = 50.0;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].max                            = 500.0;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].def                            = 50.0;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].discret                        = 10;
  parameters_[VSD_BLDC_MAX_WORK_FREQ - VSD_BEGIN].code                           = 0;
  // Индуктивность обмотки ВПЭД для ВД
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].id                               = VSD_MOTOR_INDUCTANCE;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].operation                        = OPERATION_WRITE;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].physic                           = PHYSIC_INDUNCTANCE;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].value.float_t                    = 20.0;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].max                              = 10000.0;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].def                              = 20.0;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_MOTOR_INDUCTANCE - VSD_BEGIN].code                             = 0;
  // Активное сопротивление обмотки ВПЭД для ВД
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].id                  = VSD_MOTOR_INDUCTANCE_RESIST_PHASE;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].operation           = OPERATION_WRITE;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].physic              = PHYSIC_RESISTANCE;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].validity            = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].value.float_t       = 1500.0;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].min                 = 0.0;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].max                 = 10000.0;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].def                 = 1500.0;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].discret             = 1;
  parameters_[VSD_MOTOR_INDUCTANCE_RESIST_PHASE - VSD_BEGIN].code                = 0;
  // Нижний предел регулирования для ВД
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].id                                  = VSD_BLDC_DOWN_REG;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].physic                              = PHYSIC_PERCENT;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].value.float_t                       = 15.0;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].min                                 = 5.0;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].max                                 = 25.0;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].def                                 = 15.0;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_BLDC_DOWN_REG - VSD_BEGIN].code                                = 0;
  // Верхний предел регулирования для ВД
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].id                                    = VSD_BLDC_UP_REG;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].physic                                = PHYSIC_PERCENT;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].value.float_t                         = 25.0;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].min                                   = 5.0;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].max                                   = 35.0;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].def                                   = 25.0;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_BLDC_UP_REG - VSD_BEGIN].code                                  = 0;
  // Темп защиты от срыва синхронизации для ВД
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].id                                 = VSD_BLDC_SYNC_RATE;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].value.float_t                      = 20.0;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].min                                = 1.0;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].max                                = 50.0;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].def                                = 20.0;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_BLDC_SYNC_RATE - VSD_BEGIN].code                               = 0;
  // Максимальный угол дельта тета положения ротора для ВД
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].id                                 = VSD_BLDC_MAX_ANGLE;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].physic                             = PHYSIC_ANGLE;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].value.float_t                      = 96.0;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].min                                = 1.0;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].max                                = 360.0;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].def                                = 96.0;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_BLDC_MAX_ANGLE - VSD_BEGIN].code                               = 0;
  // Стабилизация выходного напряжения
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].id                            = VSD_ENGINE_U_OUT_STABLE;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].physic                        = PHYSIC_NUMERIC;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].value.float_t                 = 0.0;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].min                           = 0.0;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].max                           = 1.0;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].def                           = 0.0;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_ENGINE_U_OUT_STABLE - VSD_BEGIN].code                          = 0;
  // Вид пуска {"Плавный": 0, "Толчок": 1, "Расклин": 2}
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].id                              = VSD_ETALON_START_TYPE;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].value.float_t                   = 0.0;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].max                             = 2.0;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].def                             = 0.0;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_ETALON_START_TYPE - VSD_BEGIN].code                            = 0;
  // Время подъема толчка
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].id                            = VSD_RGM_RUN_PUSH_UPTIME;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].physic                        = PHYSIC_TIME;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].value.float_t                 = 30.0;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].min                           = 1.0;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].max                           = 100.0;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].def                           = 30.0;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_RGM_RUN_PUSH_UPTIME - VSD_BEGIN].code                          = 0;
  // Время спада толчка
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].id                          = VSD_RGM_RUN_PUSH_DOWNTIME;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].operation                   = OPERATION_WRITE;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].physic                      = PHYSIC_TIME;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].value.float_t               = 30.0;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].min                         = 1.0;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].max                         = 100.0;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].def                         = 30.0;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].discret                     = 1;
  parameters_[VSD_RGM_RUN_PUSH_DOWNTIME - VSD_BEGIN].code                        = 0;
  // Время паузы между толчками
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].id                            = VSD_RGM_RUN_PUSH_PERIOD;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].physic                        = PHYSIC_TIME;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].value.float_t                 = 5.0;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].min                           = 1.0;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].max                           = 100.0;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].def                           = 5.0;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_RGM_RUN_PUSH_PERIOD - VSD_BEGIN].code                          = 0;
  // Автоматический режим регулирования
  parameters_[VSD_PID_MODE - VSD_BEGIN].id                                       = VSD_PID_MODE;
  parameters_[VSD_PID_MODE - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_PID_MODE - VSD_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[VSD_PID_MODE - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_PID_MODE - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_PID_MODE - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_PID_MODE - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_PID_MODE - VSD_BEGIN].max                                      = 3.0;
  parameters_[VSD_PID_MODE - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_PID_MODE - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_PID_MODE - VSD_BEGIN].code                                     = 0;
  // Коэффициент пропорц. ПИД
  parameters_[VSD_PID_KPR - VSD_BEGIN].id                                        = VSD_PID_KPR;
  parameters_[VSD_PID_KPR - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_PID_KPR - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_PID_KPR - VSD_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[VSD_PID_KPR - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_PID_KPR - VSD_BEGIN].value.float_t                             = 0.0;
  parameters_[VSD_PID_KPR - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_PID_KPR - VSD_BEGIN].max                                       = 99.99;
  parameters_[VSD_PID_KPR - VSD_BEGIN].def                                       = 0.0;
  parameters_[VSD_PID_KPR - VSD_BEGIN].discret                                   = 100;
  parameters_[VSD_PID_KPR - VSD_BEGIN].code                                      = 0;
  // Коэффициент интегральный ПИД
  parameters_[VSD_PID_KINT - VSD_BEGIN].id                                       = VSD_PID_KINT;
  parameters_[VSD_PID_KINT - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_PID_KINT - VSD_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[VSD_PID_KINT - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_PID_KINT - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_PID_KINT - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_PID_KINT - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_PID_KINT - VSD_BEGIN].max                                      = 999.9;
  parameters_[VSD_PID_KINT - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_PID_KINT - VSD_BEGIN].discret                                  = 10;
  parameters_[VSD_PID_KINT - VSD_BEGIN].code                                     = 0;
  // Коэффициент дифференц. ПИД
  parameters_[VSD_PID_KDIF - VSD_BEGIN].id                                       = VSD_PID_KDIF;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].max                                      = 99.99;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].discret                                  = 100;
  parameters_[VSD_PID_KDIF - VSD_BEGIN].code                                     = 0;
  // Характеристика ПИД
  parameters_[VSD_PID_TYPE - VSD_BEGIN].id                                       = VSD_PID_TYPE;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].max                                      = 1.0;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_PID_TYPE - VSD_BEGIN].code                                     = 0;
  // Сдвиг между фазным током и АЦП для ВД
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].id                                 = VSD_BLDC_ADC_SHIFT;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].value.float_t                      = 50.0;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].min                                = 10.0;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].max                                = 300.0;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].def                                = 50.0;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_BLDC_ADC_SHIFT - VSD_BEGIN].code                               = 0;
  // Сдвиг фазы ТМПН и ДЛ
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].id                                = VSD_BLDC_TMPN_SHIFT;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].physic                            = PHYSIC_NUMERIC;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].value.float_t                     = 110.0;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].min                               = 0.0;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].max                               = 300.0;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].def                               = 110.0;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].discret                           = 1;
  parameters_[VSD_BLDC_TMPN_SHIFT - VSD_BEGIN].code                              = 0;
  // Тип торможения
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].id                                      = VSD_TYPE_STOP;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].physic                                  = PHYSIC_NUMERIC;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].value.float_t                           = 0.0;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].max                                     = 1.0;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].def                                     = 0.0;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_TYPE_STOP - VSD_BEGIN].code                                    = 13;
  // Номинальный ток СУ
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].id                                  = VSD_STATION_I_NOM;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].physic                              = PHYSIC_CURRENT;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].value.float_t                       = 630.0;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].min                                 = 50.0;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].max                                 = 2000.0;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].def                                 = 630.0;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATION_I_NOM - VSD_BEGIN].code                                = 0;
  // Режим токоограничения
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].id                                   = VSD_I_LIMIT_MODE;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].value.float_t                        = 0.0;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].max                                  = 2.0;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].def                                  = 0.0;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_I_LIMIT_MODE - VSD_BEGIN].code                                 = 0;
  // Задержка отключения при токоограничении
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].id                                     = VSD_I_LIMIT_TM;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].operation                              = OPERATION_WRITE;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].physic                                 = PHYSIC_TIME;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].value.float_t                          = 50.0;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].min                                    = 1.0;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].max                                    = 300.0;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].def                                    = 50.0;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].discret                                = 1;
  parameters_[VSD_I_LIMIT_TM - VSD_BEGIN].code                                   = 0;
  // Режим пропуска частот
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].id                                 = VSD_FREQ_SKIP_MODE;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].value.float_t                      = 0.0;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].max                                = 1.0;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].def                                = 0.0;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_FREQ_SKIP_MODE - VSD_BEGIN].code                               = 0;
  // Начальная частота пропуска
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].id                           = VSD_FREQ_SKIP_START_FREQ;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].physic                       = PHYSIC_FREQUENCY;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].value.float_t                = 3.5;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].min                          = 3.5;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].max                          = 500.0;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].def                          = 3.5;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].discret                      = 10;
  parameters_[VSD_FREQ_SKIP_START_FREQ - VSD_BEGIN].code                         = 0;
  // Конечная частота пропуска
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].id                            = VSD_FREQ_SKIP_STOP_FREQ;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].physic                        = PHYSIC_FREQUENCY;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].value.float_t                 = 4.8;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].min                           = 3.5;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].max                           = 500.0;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].def                           = 4.8;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].discret                       = 10;
  parameters_[VSD_FREQ_SKIP_STOP_FREQ - VSD_BEGIN].code                          = 0;
  // Скорость изменения частоты при пропуске
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].id                                = VSD_FREQ_SKIP_ACCEL;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].operation                         = OPERATION_WRITE;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].physic                            = PHYSIC_TEMP;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].value.float_t                     = 10.0;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].min                               = 1.0;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].max                               = 15.0;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].def                               = 10.0;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].discret                           = 10;
  parameters_[VSD_FREQ_SKIP_ACCEL - VSD_BEGIN].code                              = 0;
  // Коэффициент пропорц.рег.угла для ВД
  parameters_[VSD_BLDC_KP - VSD_BEGIN].id                                        = VSD_BLDC_KP;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].value.float_t                             = 0.03;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].max                                       = 0.5;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].def                                       = 0.03;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].discret                                   = 10000;
  parameters_[VSD_BLDC_KP - VSD_BEGIN].code                                      = 0;
  // Коэффициент интегр.рег.угла для ВД
  parameters_[VSD_BLDC_KI - VSD_BEGIN].id                                        = VSD_BLDC_KI;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].operation                                 = OPERATION_WRITE;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].physic                                    = PHYSIC_NUMERIC;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].value.float_t                             = 0.007;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].min                                       = 0.0;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].max                                       = 0.1;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].def                                       = 0.007;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].discret                                   = 10000;
  parameters_[VSD_BLDC_KI - VSD_BEGIN].code                                      = 0;
  // Максимальная доб. верхнего предела для ВД
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].id                                    = VSD_BLDC_MAX_UP;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].operation                             = OPERATION_WRITE;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].physic                                = PHYSIC_PERCENT;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].value.float_t                         = 15.0;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].min                                   = 0.0;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].max                                   = 35.0;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].def                                   = 15.0;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].discret                               = 1;
  parameters_[VSD_BLDC_MAX_UP - VSD_BEGIN].code                                  = 0;
  // 
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].id                                  = VSD_STATUS_WORD_4;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].operation                           = OPERATION_WRITE;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].value.float_t                       = 0.0;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].min                                 = 0.0;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].max                                 = 65535.0;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].def                                 = 0.0;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].discret                             = 1;
  parameters_[VSD_STATUS_WORD_4 - VSD_BEGIN].code                                = 0;
  // 
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].id                                      = VSD_SYNC_FREQ;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].physic                                  = PHYSIC_FREQUENCY;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].value.float_t                           = 1.0;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].min                                     = 1.0;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].max                                     = 30.0;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].def                                     = 1.0;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].discret                                 = 10;
  parameters_[VSD_SYNC_FREQ - VSD_BEGIN].code                                    = 0;
  // 
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].id                                      = VSD_SYNC_TIME;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].physic                                  = PHYSIC_TIME;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].value.float_t                           = 0.0;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].max                                     = 999.9;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].def                                     = 0.0;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].discret                                 = 10;
  parameters_[VSD_SYNC_TIME - VSD_BEGIN].code                                    = 0;
  // Напряжение входное линейное Uab
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].id                              = VSD_VOLTAGE_PHASE_1_2;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].operation                       = OPERATION_READ;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].physic                          = PHYSIC_VOLTAGE;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].value.float_t                   = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].min                             = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].max                             = 500.0;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].def                             = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_VOLTAGE_PHASE_1_2 - VSD_BEGIN].code                            = 0;
  // Напряжение входное линейное Ubc
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].id                              = VSD_VOLTAGE_PHASE_2_3;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].operation                       = OPERATION_READ;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].physic                          = PHYSIC_VOLTAGE;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].value.float_t                   = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].min                             = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].max                             = 500.0;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].def                             = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_VOLTAGE_PHASE_2_3 - VSD_BEGIN].code                            = 0;
  // Напряжение входное линейное Uca
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].id                              = VSD_VOLTAGE_PHASE_3_1;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].operation                       = OPERATION_READ;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].physic                          = PHYSIC_VOLTAGE;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].value.float_t                   = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].min                             = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].max                             = 500.0;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].def                             = 100.0;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_VOLTAGE_PHASE_3_1 - VSD_BEGIN].code                            = 0;
  // Коэффициент корректировки выходного тока фаза U в ЧРП
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].id                             = VSD_COEF_OUT_CURRENT_1;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].access                         = ACCESS_TECHNOLOG;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].min                            = 0.1;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].max                            = 10.0;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].discret                        = 1000;
  parameters_[VSD_COEF_OUT_CURRENT_1 - VSD_BEGIN].code                           = 13;
  // Коэффициент корректировки выходного тока фаза U в ЧРП
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].id                             = VSD_COEF_OUT_CURRENT_2;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].access                         = ACCESS_TECHNOLOG;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].min                            = 0.1;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].max                            = 10.0;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].discret                        = 1000;
  parameters_[VSD_COEF_OUT_CURRENT_2 - VSD_BEGIN].code                           = 13;
  // Коэффициент корректировки выходного тока фаза U в ЧРП
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].id                             = VSD_COEF_OUT_CURRENT_3;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].access                         = ACCESS_TECHNOLOG;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].value.float_t                  = 1.0;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].min                            = 0.1;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].max                            = 10.0;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].def                            = 1.0;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].discret                        = 1000;
  parameters_[VSD_COEF_OUT_CURRENT_3 - VSD_BEGIN].code                           = 13;
  // Текущий Косинус Фи в ЧРП
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].id                              = VSD_MOTOR_COS_PHI_NOW;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].operation                       = OPERATION_READ;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].physic                          = PHYSIC_NUMERIC;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].value.float_t                   = 0.0;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].min                             = 0.0;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].max                             = 1.0;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].def                             = 0.0;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].discret                         = 100;
  parameters_[VSD_MOTOR_COS_PHI_NOW - VSD_BEGIN].code                            = 0;
  // Текущая загрузка двигателя в ЧРП
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].id                                 = VSD_MOTOR_LOAD_NOW;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].operation                          = OPERATION_READ;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].physic                             = PHYSIC_PERCENT;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].value.float_t                      = 0.0;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].max                                = 200.0;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].def                                = 0.0;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_MOTOR_LOAD_NOW - VSD_BEGIN].code                               = 0;
  // U/F точка U1 в процентах
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].id                  = VSD_UF_CHARACTERISTIC_U_1_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].operation           = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].physic              = PHYSIC_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].validity            = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].value.float_t       = 20.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].min                 = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].max                 = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].def                 = 20.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].discret             = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_1_PERCENT - VSD_BEGIN].code                = 0;
  // U/F точка U2 в процентах
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].id                  = VSD_UF_CHARACTERISTIC_U_2_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].operation           = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].physic              = PHYSIC_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].validity            = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].value.float_t       = 40.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].min                 = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].max                 = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].def                 = 40.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].discret             = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_2_PERCENT - VSD_BEGIN].code                = 0;
  // U/F точка U3 в процентах
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].id                  = VSD_UF_CHARACTERISTIC_U_3_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].operation           = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].physic              = PHYSIC_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].validity            = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].value.float_t       = 60.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].min                 = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].max                 = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].def                 = 60.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].discret             = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_3_PERCENT - VSD_BEGIN].code                = 0;
  // U/F точка U4 в процентах
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].id                  = VSD_UF_CHARACTERISTIC_U_4_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].operation           = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].physic              = PHYSIC_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].validity            = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].value.float_t       = 80.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].min                 = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].max                 = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].def                 = 80.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].discret             = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_4_PERCENT - VSD_BEGIN].code                = 0;
  // U/F точка U5 в процентах
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].id                  = VSD_UF_CHARACTERISTIC_U_5_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].access              = ACCESS_OPERATOR;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].operation           = OPERATION_WRITE;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].physic              = PHYSIC_PERCENT;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].validity            = VALIDITY_ERROR;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].value.float_t       = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].min                 = 0.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].max                 = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].def                 = 100.0;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].discret             = 1;
  parameters_[VSD_UF_CHARACTERISTIC_U_5_PERCENT - VSD_BEGIN].code                = 0;
  // Температура выходного фильтра
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].id                           = VSD_FILTER_TEMPERATURE_1;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].operation                    = OPERATION_READ;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].physic                       = PHYSIC_TEMPERATURE;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].value.float_t                = 0.0;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].def                          = 0.0;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_FILTER_TEMPERATURE_1 - VSD_BEGIN].code                         = 0;
  // Температура выходного фильтра
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].id                           = VSD_FILTER_TEMPERATURE_2;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].operation                    = OPERATION_READ;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].physic                       = PHYSIC_TEMPERATURE;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].value.float_t                = 0.0;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].max                          = 999999.0;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].def                          = 0.0;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_FILTER_TEMPERATURE_2 - VSD_BEGIN].code                         = 0;
  // Выбор источника расчёта точек U/f
  parameters_[VSD_FLAG - VSD_BEGIN].id                                           = VSD_FLAG;
  parameters_[VSD_FLAG - VSD_BEGIN].access                                       = ACCESS_OPERATOR;
  parameters_[VSD_FLAG - VSD_BEGIN].operation                                    = OPERATION_WRITE;
  parameters_[VSD_FLAG - VSD_BEGIN].physic                                       = PHYSIC_NUMERIC;
  parameters_[VSD_FLAG - VSD_BEGIN].validity                                     = VALIDITY_ERROR;
  parameters_[VSD_FLAG - VSD_BEGIN].value.float_t                                = 0.0;
  parameters_[VSD_FLAG - VSD_BEGIN].min                                          = 0.0;
  parameters_[VSD_FLAG - VSD_BEGIN].max                                          = 1.0;
  parameters_[VSD_FLAG - VSD_BEGIN].def                                          = 0.0;
  parameters_[VSD_FLAG - VSD_BEGIN].discret                                      = 1;
  parameters_[VSD_FLAG - VSD_BEGIN].code                                         = 13;
  // 
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].id                    = VSD_ETALON_RESISTANCE_ISOLATION;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].access                = ACCESS_OPERATOR;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].operation             = OPERATION_READ;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].physic                = PHYSIC_RESISTANCE;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].validity              = VALIDITY_ERROR;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].value.float_t         = 9999.0;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].min                   = 0.0;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].max                   = 20.0;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].def                   = 9999.0;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].discret               = 1;
  parameters_[VSD_ETALON_RESISTANCE_ISOLATION - VSD_BEGIN].code                  = 0;
  // Необходимое напряжение отпайки
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].id                     = VSD_TRANS_NEED_VOLTAGE_TAP_OFF;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].operation              = OPERATION_READ;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].physic                 = PHYSIC_VOLTAGE;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].validity               = VALIDITY_ERROR;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].value.float_t          = 380.0;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].min                    = 380.0;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].max                    = 5000.0;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].def                    = 380.0;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].discret                = 1;
  parameters_[VSD_TRANS_NEED_VOLTAGE_TAP_OFF - VSD_BEGIN].code                   = 0;
  // Максимальная рабочая частота (базовая)
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].id                                 = VSD_BASE_FREQUENCY;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].physic                             = PHYSIC_FREQUENCY;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].value.float_t                      = 60.0;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].min                                = 35.0;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].max                                = 500.0;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].def                                = 60.0;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_BASE_FREQUENCY - VSD_BEGIN].code                               = 0;
  // Максимальное рабочие напряжение
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].id                                   = VSD_BASE_VOLTAGE;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].physic                               = PHYSIC_VOLTAGE;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].value.float_t                        = 380.0;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].min                                  = 10.0;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].max                                  = 400.0;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].def                                  = 380.0;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_BASE_VOLTAGE - VSD_BEGIN].code                                 = 0;
  // Сечение кабеля
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].id                              = VSD_TRANS_CABLE_CROSS;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].operation                       = OPERATION_WRITE;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].physic                          = PHYSIC_SPACE;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].value.float_t                   = 16.0;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].min                             = 16.0;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].max                             = 100.0;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].def                             = 16.0;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].discret                         = 1;
  parameters_[VSD_TRANS_CABLE_CROSS - VSD_BEGIN].code                            = 13;
  // Температура пласта
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].id                             = VSD_TEMPERATURE_INTAKE;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].physic                         = PHYSIC_TEMPERATURE;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].value.float_t                  = 20.0;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].min                            = 20.0;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].max                            = 200.0;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].def                            = 20.0;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_TEMPERATURE_INTAKE - VSD_BEGIN].code                           = 13;
  // Рабочее состояние при включении питания
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].id                             = VSD_WORK_STATE_WHEN_ON;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].value.float_t                  = 0.0;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].min                            = 0.0;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].max                            = 1.0;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].def                            = 0.0;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].discret                        = 1;
  parameters_[VSD_WORK_STATE_WHEN_ON - VSD_BEGIN].code                           = 0;
  // 
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].id                      = VSD_VOLTAGE_FILTER_TIME_CONST;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].operation               = OPERATION_WRITE;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].physic                  = PHYSIC_TIME;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].validity                = VALIDITY_ERROR;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].value.float_t           = 0.0;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].min                     = 0.001;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].max                     = 1.0;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].def                     = 0.0;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].discret                 = 1000;
  parameters_[VSD_VOLTAGE_FILTER_TIME_CONST - VSD_BEGIN].code                    = 0;
  // 
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].id                      = VSD_CONTROL_WORD_TIMEOUT_TIME;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].access                  = ACCESS_OPERATOR;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].operation               = OPERATION_WRITE;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].physic                  = PHYSIC_TIME;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].validity                = VALIDITY_ERROR;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].value.float_t           = 1.0;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].min                     = 0.1;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].max                     = 18000.0;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].def                     = 1.0;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].discret                 = 10;
  parameters_[VSD_CONTROL_WORD_TIMEOUT_TIME - VSD_BEGIN].code                    = 0;
  // Коэф.МТЗ мотор
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].id                             = VSD_CURRENT_LIMIT_COEF;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].operation                      = OPERATION_WRITE;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].physic                         = PHYSIC_NUMERIC;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].value.float_t                  = 2.0;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].min                            = 1.0;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].max                            = 2.5;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].def                            = 2.0;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].discret                        = 10;
  parameters_[VSD_CURRENT_LIMIT_COEF - VSD_BEGIN].code                           = 13;
  // Частота коммутации ШИМ
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].id                       = VSD_SWITCHING_FREQUENCY_CODE;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].operation                = OPERATION_WRITE;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].validity                 = VALIDITY_ERROR;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].value.float_t            = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].min                      = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].max                      = 14.0;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].def                      = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].discret                  = 1;
  parameters_[VSD_SWITCHING_FREQUENCY_CODE - VSD_BEGIN].code                     = 13;
  // Максимально допустимое отклонение частоты векторного режима
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].id                                      = VSD_MAX_VC_DF;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].physic                                  = PHYSIC_FREQUENCY;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].value.float_t                           = 1.0;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].min                                     = 1.0;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].max                                     = 15.0;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].def                                     = 1.0;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_MAX_VC_DF - VSD_BEGIN].code                                    = 13;
  // Регистр настроек для отладки
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].id                                      = VSD_TEST_TYPE;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].access                                  = ACCESS_OPERATOR;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].operation                               = OPERATION_WRITE;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].physic                                  = PHYSIC_NUMERIC;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].validity                                = VALIDITY_ERROR;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].value.float_t                           = 0.0;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].min                                     = 0.0;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].max                                     = 8.0;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].def                                     = 0.0;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].discret                                 = 1;
  parameters_[VSD_TEST_TYPE - VSD_BEGIN].code                                    = 0;
  // Расширенный регистр управления
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].id                                 = VSD_CONTROL_WORD_2;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].operation                          = OPERATION_WRITE;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].physic                             = PHYSIC_NUMERIC;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].value.float_t                      = 0.0;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].min                                = 0.0;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].max                                = 65535.0;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].def                                = 0.0;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].discret                            = 1;
  parameters_[VSD_CONTROL_WORD_2 - VSD_BEGIN].code                               = 0;
  // Коэффициент усиления интегральной ОС системы подавления резонанса
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].id                                   = VSD_RES_INT_GAIN;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].operation                            = OPERATION_WRITE;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].physic                               = PHYSIC_NUMERIC;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].value.float_t                        = 0.0;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].min                                  = -20.0;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].max                                  = 20.0;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].def                                  = 0.0;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_RES_INT_GAIN - VSD_BEGIN].code                                 = 0;
  // Не используется
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].id                            = VSD_STARTUP_I_LIM_MAX_F;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].operation                     = OPERATION_WRITE;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].physic                        = PHYSIC_FREQUENCY;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].value.float_t                 = 1.0;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].min                           = 1.0;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].max                           = 500.0;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].def                           = 1.0;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].discret                       = 1;
  parameters_[VSD_STARTUP_I_LIM_MAX_F - VSD_BEGIN].code                          = 0;
  // Мгновенная активная мощность
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].id                               = VSD_POWER_ACTIVE_NOW;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].operation                        = OPERATION_READ;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].physic                           = PHYSIC_ACTIVE_POWER;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].value.float_t                    = 0.0;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].min                              = 0.0;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].max                              = 65535.0;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].def                              = 0.0;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].discret                          = 1;
  parameters_[VSD_POWER_ACTIVE_NOW - VSD_BEGIN].code                             = 0;
  // Мгновеннный момент
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].id                                   = VSD_RATE_OUT_NOW;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].operation                            = OPERATION_READ;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].physic                               = PHYSIC_RATE;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].value.float_t                        = 0.0;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].min                                  = 0.0;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].max                                  = 65535.0;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].def                                  = 0.0;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].discret                              = 1;
  parameters_[VSD_RATE_OUT_NOW - VSD_BEGIN].code                                 = 0;
  // Ток при частоте 0Гц
  parameters_[VSD_IF_I_0 - VSD_BEGIN].id                                         = VSD_IF_I_0;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_0 - VSD_BEGIN].code                                       = 13;
  // Ток в точке VSD_UF_CHARACTERISTIC_F_1
  parameters_[VSD_IF_I_1 - VSD_BEGIN].id                                         = VSD_IF_I_1;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_1 - VSD_BEGIN].code                                       = 13;
  // Ток в точке VSD_UF_CHARACTERISTIC_F_2
  parameters_[VSD_IF_I_2 - VSD_BEGIN].id                                         = VSD_IF_I_2;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_2 - VSD_BEGIN].code                                       = 13;
  // Ток в точке VSD_UF_CHARACTERISTIC_F_3
  parameters_[VSD_IF_I_3 - VSD_BEGIN].id                                         = VSD_IF_I_3;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_3 - VSD_BEGIN].code                                       = 13;
  // Ток в точке VSD_UF_CHARACTERISTIC_F_4
  parameters_[VSD_IF_I_4 - VSD_BEGIN].id                                         = VSD_IF_I_4;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_4 - VSD_BEGIN].code                                       = 13;
  // Ток в точке VSD_UF_CHARACTERISTIC_F_5
  parameters_[VSD_IF_I_5 - VSD_BEGIN].id                                         = VSD_IF_I_5;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_5 - VSD_BEGIN].code                                       = 13;
  // Ток в точке VSD_UF_CHARACTERISTIC_F_6
  parameters_[VSD_IF_I_6 - VSD_BEGIN].id                                         = VSD_IF_I_6;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].access                                     = ACCESS_OPERATOR;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].operation                                  = OPERATION_WRITE;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].physic                                     = PHYSIC_CURRENT;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].validity                                   = VALIDITY_ERROR;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].value.float_t                              = 0.0;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].min                                        = 0.0;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].max                                        = 3000.0;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].def                                        = 0.0;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].discret                                    = 1;
  parameters_[VSD_IF_I_6 - VSD_BEGIN].code                                       = 13;
  // Режим ШИМ модуляции
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].id                       = VSD_SWITCHING_FREQUENCY_MODE;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].access                   = ACCESS_OPERATOR;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].operation                = OPERATION_WRITE;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].physic                   = PHYSIC_NUMERIC;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].validity                 = VALIDITY_ERROR;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].value.float_t            = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].min                      = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].max                      = 2.0;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].def                      = 0.0;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].discret                  = 1;
  parameters_[VSD_SWITCHING_FREQUENCY_MODE - VSD_BEGIN].code                     = 13;
  // Источник сигнала о колебаниях
  parameters_[VSD_RES_MODE - VSD_BEGIN].id                                       = VSD_RES_MODE;
  parameters_[VSD_RES_MODE - VSD_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[VSD_RES_MODE - VSD_BEGIN].operation                                = OPERATION_WRITE;
  parameters_[VSD_RES_MODE - VSD_BEGIN].physic                                   = PHYSIC_NUMERIC;
  parameters_[VSD_RES_MODE - VSD_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[VSD_RES_MODE - VSD_BEGIN].value.float_t                            = 0.0;
  parameters_[VSD_RES_MODE - VSD_BEGIN].min                                      = 0.0;
  parameters_[VSD_RES_MODE - VSD_BEGIN].max                                      = 2.0;
  parameters_[VSD_RES_MODE - VSD_BEGIN].def                                      = 0.0;
  parameters_[VSD_RES_MODE - VSD_BEGIN].discret                                  = 1;
  parameters_[VSD_RES_MODE - VSD_BEGIN].code                                     = 13;
  // "Защита от потери связи с ЧРП"
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].id                           = VSD_PROT_NO_CONNECT_MODE;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].operation                    = OPERATION_WRITE;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].physic                       = PHYSIC_NUMERIC;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].validity                     = VALIDITY_OK;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].value.float_t                = 1.0;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].min                          = 0.0;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].max                          = 1.0;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].def                          = 1.0;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].discret                      = 1;
  parameters_[VSD_PROT_NO_CONNECT_MODE - VSD_BEGIN].code                         = 0;
  // Защита от потери связи с ЧРП. Задержка срабатывания уставка
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].id                     = VSD_PROT_NO_CONNECT_TRIP_DELAY;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].access                 = ACCESS_OPERATOR;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].operation              = OPERATION_WRITE;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].physic                 = PHYSIC_TIME;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].validity               = VALIDITY_OK;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].value.float_t          = 180.0;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].min                    = 0.0;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].max                    = 65535.0;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].def                    = 180.0;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].discret                = 1;
  parameters_[VSD_PROT_NO_CONNECT_TRIP_DELAY - VSD_BEGIN].code                   = 0;
}


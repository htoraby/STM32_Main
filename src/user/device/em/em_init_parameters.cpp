#include "em.h"

void Em::initParameters()
{
  // Первый параметр группы счётчиков электроэнергии
  parameters_[EM_BEGIN - EM_BEGIN].id                                            = EM_BEGIN;
  parameters_[EM_BEGIN - EM_BEGIN].access                                        = 0;
  parameters_[EM_BEGIN - EM_BEGIN].operation                                     = 0;
  parameters_[EM_BEGIN - EM_BEGIN].physic                                        = 0;
  parameters_[EM_BEGIN - EM_BEGIN].validity                                      = VALIDITY_ERROR;
  parameters_[EM_BEGIN - EM_BEGIN].value.float_t                                 = 0;
  parameters_[EM_BEGIN - EM_BEGIN].min                                           = 0.0;
  parameters_[EM_BEGIN - EM_BEGIN].max                                           = 999999999.9;
  parameters_[EM_BEGIN - EM_BEGIN].def                                           = 0;
  parameters_[EM_BEGIN - EM_BEGIN].discret                                       = 1;
  parameters_[EM_BEGIN - EM_BEGIN].code                                          = 0;
  // Напряжение первой фазы
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].id                                  = EM_VOLTAGE_PHASE_1;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].physic                              = PHYSIC_VOLTAGE;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].discret                             = 1;
  parameters_[EM_VOLTAGE_PHASE_1 - EM_BEGIN].code                                = 0;
  // Напряжение второй фазы
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].id                                  = EM_VOLTAGE_PHASE_2;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].physic                              = PHYSIC_VOLTAGE;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].discret                             = 1;
  parameters_[EM_VOLTAGE_PHASE_2 - EM_BEGIN].code                                = 0;
  // Напряжение третей фазы
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].id                                  = EM_VOLTAGE_PHASE_3;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].physic                              = PHYSIC_VOLTAGE;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].discret                             = 1;
  parameters_[EM_VOLTAGE_PHASE_3 - EM_BEGIN].code                                = 0;
  // Ток первой фазы
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].id                                  = EM_CURRENT_PHASE_1;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].physic                              = PHYSIC_CURRENT;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].discret                             = 100;
  parameters_[EM_CURRENT_PHASE_1 - EM_BEGIN].code                                = 0;
  // Ток второй фазы
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].id                                  = EM_CURRENT_PHASE_2;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].physic                              = PHYSIC_CURRENT;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].discret                             = 100;
  parameters_[EM_CURRENT_PHASE_2 - EM_BEGIN].code                                = 0;
  // Ток третей фазы
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].id                                  = EM_CURRENT_PHASE_3;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].physic                              = PHYSIC_CURRENT;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].discret                             = 100;
  parameters_[EM_CURRENT_PHASE_3 - EM_BEGIN].code                                = 0;
  // Общая активная мощность
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].id                                     = EM_ACTIVE_POWER;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].access                                 = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].operation                              = OPERATION_READ;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].physic                                 = PHYSIC_ACTIVE_POWER;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].validity                               = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].value.float_t                          = NAN;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].min                                    = -999999999.9;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].max                                    = 999999999.9;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].def                                    = 0.0;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].discret                                = 100;
  parameters_[EM_ACTIVE_POWER - EM_BEGIN].code                                   = 0;
  // Частота питающей сети
  parameters_[EM_FREQUENCY - EM_BEGIN].id                                        = EM_FREQUENCY;
  parameters_[EM_FREQUENCY - EM_BEGIN].access                                    = ACCESS_OPERATOR;
  parameters_[EM_FREQUENCY - EM_BEGIN].operation                                 = OPERATION_READ;
  parameters_[EM_FREQUENCY - EM_BEGIN].physic                                    = PHYSIC_FREQUENCY;
  parameters_[EM_FREQUENCY - EM_BEGIN].validity                                  = VALIDITY_ERROR;
  parameters_[EM_FREQUENCY - EM_BEGIN].value.float_t                             = NAN;
  parameters_[EM_FREQUENCY - EM_BEGIN].min                                       = -999999999.9;
  parameters_[EM_FREQUENCY - EM_BEGIN].max                                       = 999999999.9;
  parameters_[EM_FREQUENCY - EM_BEGIN].def                                       = 0.0;
  parameters_[EM_FREQUENCY - EM_BEGIN].discret                                   = 100;
  parameters_[EM_FREQUENCY - EM_BEGIN].code                                      = 0;
  // Полная мощность
  parameters_[EM_FULL_POWER - EM_BEGIN].id                                       = EM_FULL_POWER;
  parameters_[EM_FULL_POWER - EM_BEGIN].access                                   = ACCESS_OPERATOR;
  parameters_[EM_FULL_POWER - EM_BEGIN].operation                                = OPERATION_READ;
  parameters_[EM_FULL_POWER - EM_BEGIN].physic                                   = PHYSIC_FULL_POWER;
  parameters_[EM_FULL_POWER - EM_BEGIN].validity                                 = VALIDITY_ERROR;
  parameters_[EM_FULL_POWER - EM_BEGIN].value.float_t                            = NAN;
  parameters_[EM_FULL_POWER - EM_BEGIN].min                                      = -999999999.9;
  parameters_[EM_FULL_POWER - EM_BEGIN].max                                      = 999999999.9;
  parameters_[EM_FULL_POWER - EM_BEGIN].def                                      = 0.0;
  parameters_[EM_FULL_POWER - EM_BEGIN].discret                                  = 100;
  parameters_[EM_FULL_POWER - EM_BEGIN].code                                     = 0;
  // Общая активная энергия
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].id                                    = EM_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].access                                = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].operation                             = OPERATION_READ;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].physic                                = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].validity                              = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].value.float_t                         = NAN;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].min                                   = -999999999.9;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].max                                   = 999999999.9;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].def                                   = 0.0;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].discret                               = 100;
  parameters_[EM_ACTIVE_ENERGY - EM_BEGIN].code                                  = 0;
  // Напряжение межфазное первой и второй фазы
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].id                                = EM_VOLTAGE_PHASE_1_2;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].operation                         = OPERATION_READ;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].physic                            = PHYSIC_VOLTAGE;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].value.float_t                     = NAN;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].min                               = -999999999.9;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].max                               = 999999999.9;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].def                               = 0.0;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].discret                           = 1;
  parameters_[EM_VOLTAGE_PHASE_1_2 - EM_BEGIN].code                              = 0;
  // Напряжение межфазное второй и третьей фазы
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].id                                = EM_VOLTAGE_PHASE_2_3;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].operation                         = OPERATION_READ;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].physic                            = PHYSIC_VOLTAGE;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].value.float_t                     = NAN;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].min                               = -999999999.9;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].max                               = 999999999.9;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].def                               = 0.0;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].discret                           = 1;
  parameters_[EM_VOLTAGE_PHASE_2_3 - EM_BEGIN].code                              = 0;
  // Напряжение межфазное третьей и первой фазы
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].id                                = EM_VOLTAGE_PHASE_3_1;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].operation                         = OPERATION_READ;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].physic                            = PHYSIC_VOLTAGE;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].value.float_t                     = NAN;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].min                               = -999999999.9;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].max                               = 999999999.9;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].def                               = 0.0;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].discret                           = 1;
  parameters_[EM_VOLTAGE_PHASE_3_1 - EM_BEGIN].code                              = 0;
  // Общий коэффициент мощности
  parameters_[EM_COS_PHI - EM_BEGIN].id                                          = EM_COS_PHI;
  parameters_[EM_COS_PHI - EM_BEGIN].access                                      = ACCESS_OPERATOR;
  parameters_[EM_COS_PHI - EM_BEGIN].operation                                   = OPERATION_READ;
  parameters_[EM_COS_PHI - EM_BEGIN].physic                                      = PHYSIC_NUMERIC;
  parameters_[EM_COS_PHI - EM_BEGIN].validity                                    = VALIDITY_ERROR;
  parameters_[EM_COS_PHI - EM_BEGIN].value.float_t                               = NAN;
  parameters_[EM_COS_PHI - EM_BEGIN].min                                         = -999999999.9;
  parameters_[EM_COS_PHI - EM_BEGIN].max                                         = 999999999.9;
  parameters_[EM_COS_PHI - EM_BEGIN].def                                         = 0.0;
  parameters_[EM_COS_PHI - EM_BEGIN].discret                                     = 1;
  parameters_[EM_COS_PHI - EM_BEGIN].code                                        = 0;
  // Коэффициент мощности первой фазы
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].id                                  = EM_COS_PHI_PHASE_1;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].discret                             = 1;
  parameters_[EM_COS_PHI_PHASE_1 - EM_BEGIN].code                                = 0;
  // Коэффициент мощности второй фазы
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].id                                  = EM_COS_PHI_PHASE_2;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].discret                             = 1;
  parameters_[EM_COS_PHI_PHASE_2 - EM_BEGIN].code                                = 0;
  // Коэффициент мощности третей фазы
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].id                                  = EM_COS_PHI_PHASE_3;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].physic                              = PHYSIC_NUMERIC;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].discret                             = 1;
  parameters_[EM_COS_PHI_PHASE_3 - EM_BEGIN].code                                = 0;
  // Полная мощность первой фазы
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].id                               = EM_FULL_POWER_PHASE_1;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].operation                        = OPERATION_READ;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].physic                           = PHYSIC_FULL_POWER;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].value.float_t                    = NAN;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].min                              = -999999999.9;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].max                              = 999999999.9;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].def                              = 0.0;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].discret                          = 1;
  parameters_[EM_FULL_POWER_PHASE_1 - EM_BEGIN].code                             = 0;
  // Полная мощность второй фазы
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].id                               = EM_FULL_POWER_PHASE_2;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].operation                        = OPERATION_READ;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].physic                           = PHYSIC_FULL_POWER;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].value.float_t                    = NAN;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].min                              = -999999999.9;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].max                              = 999999999.9;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].def                              = 0.0;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].discret                          = 1;
  parameters_[EM_FULL_POWER_PHASE_2 - EM_BEGIN].code                             = 0;
  // Полная мощность третей фазы
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].id                               = EM_FULL_POWER_PHASE_3;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].operation                        = OPERATION_READ;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].physic                           = PHYSIC_FULL_POWER;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].value.float_t                    = NAN;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].min                              = -999999999.9;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].max                              = 999999999.9;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].def                              = 0.0;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].discret                          = 1;
  parameters_[EM_FULL_POWER_PHASE_3 - EM_BEGIN].code                             = 0;
  // Активная мощность первой фазы
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].id                             = EM_ACTIVE_POWER_PHASE_1;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].operation                      = OPERATION_READ;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].physic                         = PHYSIC_ACTIVE_POWER;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].value.float_t                  = NAN;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].min                            = -999999999.9;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].max                            = 999999999.9;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].def                            = 0.0;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].discret                        = 1;
  parameters_[EM_ACTIVE_POWER_PHASE_1 - EM_BEGIN].code                           = 0;
  // Активная мощность второй фазы
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].id                             = EM_ACTIVE_POWER_PHASE_2;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].operation                      = OPERATION_READ;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].physic                         = PHYSIC_ACTIVE_POWER;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].value.float_t                  = NAN;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].min                            = -999999999.9;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].max                            = 999999999.9;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].def                            = 0.0;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].discret                        = 1;
  parameters_[EM_ACTIVE_POWER_PHASE_2 - EM_BEGIN].code                           = 0;
  // Активная мощность третей фазы
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].id                             = EM_ACTIVE_POWER_PHASE_3;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].operation                      = OPERATION_READ;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].physic                         = PHYSIC_ACTIVE_POWER;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].value.float_t                  = NAN;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].min                            = -999999999.9;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].max                            = 999999999.9;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].def                            = 0.0;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].discret                        = 1;
  parameters_[EM_ACTIVE_POWER_PHASE_3 - EM_BEGIN].code                           = 0;
  // Общая реактивная мощность
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].id                                   = EM_REACTIVE_POWER;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].access                               = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].operation                            = OPERATION_READ;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].physic                               = PHYSIC_REACTIVE_POWER;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].validity                             = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].value.float_t                        = NAN;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].min                                  = -999999999.9;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].max                                  = 999999999.9;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].def                                  = 0.0;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].discret                              = 100;
  parameters_[EM_REACTIVE_POWER - EM_BEGIN].code                                 = 0;
  // Реактивная мощность первой фазы
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].id                           = EM_REACTIVE_POWER_PHASE_1;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].physic                       = PHYSIC_REACTIVE_POWER;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].def                          = 0.0;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].discret                      = 1;
  parameters_[EM_REACTIVE_POWER_PHASE_1 - EM_BEGIN].code                         = 0;
  // Реактивная мощность второй фазы
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].id                           = EM_REACTIVE_POWER_PHASE_2;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].physic                       = PHYSIC_REACTIVE_POWER;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].def                          = 0.0;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].discret                      = 1;
  parameters_[EM_REACTIVE_POWER_PHASE_2 - EM_BEGIN].code                         = 0;
  // Реактивная мощность третей фазы
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].id                           = EM_REACTIVE_POWER_PHASE_3;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].physic                       = PHYSIC_REACTIVE_POWER;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].def                          = 0.0;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].discret                      = 1;
  parameters_[EM_REACTIVE_POWER_PHASE_3 - EM_BEGIN].code                         = 0;
  // Обшая активная плюс энергия за весь период
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].id                                  = EM_ACTIVE_PLUS_ALL;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].physic                              = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].discret                             = 100;
  parameters_[EM_ACTIVE_PLUS_ALL - EM_BEGIN].code                                = 0;
  // Обшая активная минус энергия за весь период
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].id                                 = EM_ACTIVE_MINUS_ALL;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].access                             = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].operation                          = OPERATION_READ;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].physic                             = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].validity                           = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].value.float_t                      = NAN;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].min                                = -999999999.9;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].max                                = 999999999.9;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].def                                = 0.0;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].discret                            = 100;
  parameters_[EM_ACTIVE_MINUS_ALL - EM_BEGIN].code                               = 0;
  // Активная плюс энергия за текущий день
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].id                              = EM_ACTIVE_PLUS_CUR_DAY;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].access                          = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].operation                       = OPERATION_READ;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].physic                          = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].validity                        = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].value.float_t                   = NAN;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].min                             = -999999999.9;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].max                             = 999999999.9;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].def                             = 0.0;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].discret                         = 100;
  parameters_[EM_ACTIVE_PLUS_CUR_DAY - EM_BEGIN].code                            = 0;
  // Активная минус энергия за текущий день
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].id                             = EM_ACTIVE_MINUS_CUR_DAY;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].operation                      = OPERATION_READ;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].physic                         = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].value.float_t                  = NAN;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].min                            = -999999999.9;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].max                            = 999999999.9;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].def                            = 0.0;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].discret                        = 100;
  parameters_[EM_ACTIVE_MINUS_CUR_DAY - EM_BEGIN].code                           = 0;
  // Активная плюс энергия за предыдущий день
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].id                             = EM_ACTIVE_PLUS_PREV_DAY;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].access                         = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].operation                      = OPERATION_READ;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].physic                         = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].validity                       = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].value.float_t                  = NAN;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].min                            = -999999999.9;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].max                            = 999999999.9;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].def                            = 0.0;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].discret                        = 100;
  parameters_[EM_ACTIVE_PLUS_PREV_DAY - EM_BEGIN].code                           = 0;
  // Активная минус энергия за текущий день
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].id                            = EM_ACTIVE_MINUS_PREV_DAY;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].operation                     = OPERATION_READ;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].physic                        = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].value.float_t                 = NAN;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].min                           = -999999999.9;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].max                           = 999999999.9;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].def                           = 0.0;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].discret                       = 100;
  parameters_[EM_ACTIVE_MINUS_PREV_DAY - EM_BEGIN].code                          = 0;
  // Активная плюс энергия за текущий месяц
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].id                            = EM_ACTIVE_PLUS_CUR_MONTH;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].operation                     = OPERATION_READ;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].physic                        = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].value.float_t                 = NAN;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].min                           = -999999999.9;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].max                           = 999999999.9;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].def                           = 0.0;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].discret                       = 100;
  parameters_[EM_ACTIVE_PLUS_CUR_MONTH - EM_BEGIN].code                          = 0;
  // Активная минус энергия за текущий месяц
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].id                           = EM_ACTIVE_MINUS_CUR_MONTH;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].physic                       = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].def                          = 0.0;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].discret                      = 100;
  parameters_[EM_ACTIVE_MINUS_CUR_MONTH - EM_BEGIN].code                         = 0;
  // Активная плюс энергия на предыдущий месяц
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].id                           = EM_ACTIVE_PLUS_PREV_MONTH;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].physic                       = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].def                          = 0.0;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].discret                      = 100;
  parameters_[EM_ACTIVE_PLUS_PREV_MONTH - EM_BEGIN].code                         = 0;
  // Активная минус энергия на предыдущий месяц
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].id                          = EM_ACTIVE_MINUS_PREV_MONTH;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].operation                   = OPERATION_READ;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].physic                      = PHYSIC_ACTIVE_ENERGY;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].value.float_t               = NAN;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].min                         = -999999999.9;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].max                         = 999999999.9;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].def                         = 0.0;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].discret                     = 100;
  parameters_[EM_ACTIVE_MINUS_PREV_MONTH - EM_BEGIN].code                        = 0;
  // Общая реактивня энергия
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].id                                  = EM_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].access                              = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].operation                           = OPERATION_READ;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].physic                              = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].validity                            = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].value.float_t                       = NAN;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].min                                 = -999999999.9;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].max                                 = 999999999.9;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].def                                 = 0.0;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].discret                             = 100;
  parameters_[EM_REACTIVE_ENERGY - EM_BEGIN].code                                = 0;
  // Общая плюс реактивная энергия за весь период
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].id                                = EM_REACTIVE_PLUS_ALL;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].access                            = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].operation                         = OPERATION_READ;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].physic                            = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].validity                          = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].value.float_t                     = NAN;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].min                               = -999999999.9;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].max                               = 999999999.9;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].def                               = 0.0;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].discret                           = 100;
  parameters_[EM_REACTIVE_PLUS_ALL - EM_BEGIN].code                              = 0;
  // Общая минус реактивная энергия за весь период
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].id                               = EM_REACTIVE_MINUS_ALL;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].access                           = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].operation                        = OPERATION_READ;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].physic                           = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].validity                         = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].value.float_t                    = NAN;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].min                              = -999999999.9;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].max                              = 999999999.9;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].def                              = 0.0;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].discret                          = 100;
  parameters_[EM_REACTIVE_MINUS_ALL - EM_BEGIN].code                             = 0;
  // Плюс реактивная энергия за весь день
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].id                            = EM_REACTIVE_PLUS_CUR_DAY;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].access                        = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].operation                     = OPERATION_READ;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].physic                        = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].validity                      = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].value.float_t                 = NAN;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].min                           = -999999999.9;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].max                           = 999999999.9;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].def                           = 0.0;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].discret                       = 100;
  parameters_[EM_REACTIVE_PLUS_CUR_DAY - EM_BEGIN].code                          = 0;
  // Минус реактивная энергия за весь день
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].id                           = EM_REACTIVE_MINUS_CUR_DAY;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].physic                       = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].def                          = 0.0;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].discret                      = 100;
  parameters_[EM_REACTIVE_MINUS_CUR_DAY - EM_BEGIN].code                         = 0;
  // Плюс реактивная энергия за весь день
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].id                           = EM_REACTIVE_PLUS_PREV_DAY;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].access                       = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].operation                    = OPERATION_READ;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].physic                       = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].validity                     = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].value.float_t                = NAN;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].min                          = -999999999.9;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].max                          = 999999999.9;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].def                          = 0.0;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].discret                      = 100;
  parameters_[EM_REACTIVE_PLUS_PREV_DAY - EM_BEGIN].code                         = 0;
  // Минус реактивная энергия за весь день
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].id                          = EM_REACTIVE_MINUS_PREV_DAY;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].operation                   = OPERATION_READ;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].physic                      = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].value.float_t               = NAN;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].min                         = -999999999.9;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].max                         = 999999999.9;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].def                         = 0.0;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].discret                     = 100;
  parameters_[EM_REACTIVE_MINUS_PREV_DAY - EM_BEGIN].code                        = 0;
  // Плюс реактивная энергия за месяц
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].id                          = EM_REACTIVE_PLUS_CUR_MONTH;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].access                      = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].operation                   = OPERATION_READ;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].physic                      = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].validity                    = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].value.float_t               = NAN;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].min                         = -999999999.9;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].max                         = 999999999.9;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].def                         = 0.0;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].discret                     = 100;
  parameters_[EM_REACTIVE_PLUS_CUR_MONTH - EM_BEGIN].code                        = 0;
  // Минус реактивная энергия за месяц
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].id                         = EM_REACTIVE_MINUS_CUR_MONTH;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].operation                  = OPERATION_READ;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].physic                     = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].value.float_t              = NAN;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].min                        = -999999999.9;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].max                        = 999999999.9;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].def                        = 0.0;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].discret                    = 100;
  parameters_[EM_REACTIVE_MINUS_CUR_MONTH - EM_BEGIN].code                       = 0;
  // Плюс реактивная энергия за предыдущий месяц
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].id                         = EM_REACTIVE_PLUS_PREV_MONTH;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].access                     = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].operation                  = OPERATION_READ;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].physic                     = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].validity                   = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].value.float_t              = NAN;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].min                        = -999999999.9;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].max                        = 999999999.9;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].def                        = 0.0;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].discret                    = 100;
  parameters_[EM_REACTIVE_PLUS_PREV_MONTH - EM_BEGIN].code                       = 0;
  // Минус реактивная энергия за предыдущий месяц
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].id                        = EM_REACTIVE_MINUS_PREV_MONTH;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].operation                 = OPERATION_READ;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].physic                    = PHYSIC_REACTIVE_ENERGY;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].validity                  = VALIDITY_ERROR;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].value.float_t             = NAN;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].min                       = -999999999.9;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].max                       = 999999999.9;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].def                       = 0.0;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].discret                   = 100;
  parameters_[EM_REACTIVE_MINUS_PREV_MONTH - EM_BEGIN].code                      = 0;
  // Коэффицинт трансформации тока
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].id                        = EM_COEFFICIENT_TRANS_CURRENT;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].physic                    = PHYSIC_NUMERIC;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].validity                  = VALIDITY_ERROR;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].value.float_t             = 1.0;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].min                       = 1.0;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].max                       = 999.0;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].def                       = 1.0;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].discret                   = 1;
  parameters_[EM_COEFFICIENT_TRANS_CURRENT - EM_BEGIN].code                      = 0;
  // Коэффициент трансформации напряжения
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].id                        = EM_COEFFICIENT_TRANS_VOLTAGE;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].access                    = ACCESS_OPERATOR;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].operation                 = OPERATION_WRITE;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].physic                    = PHYSIC_NUMERIC;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].validity                  = VALIDITY_ERROR;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].value.float_t             = 1.0;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].min                       = 1.0;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].max                       = 999.0;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].def                       = 1.0;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].discret                   = 1;
  parameters_[EM_COEFFICIENT_TRANS_VOLTAGE - EM_BEGIN].code                      = 0;
}

